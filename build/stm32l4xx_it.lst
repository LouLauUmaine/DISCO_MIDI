ARM GAS  /tmp/ccCxfoVu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB202:
  28              		.file 1 "Core/Src/stm32l4xx_it.c"
   1:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l4xx_it.c **** /**
   3:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Core/Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l4xx_it.c ****   * @attention
   8:Core/Src/stm32l4xx_it.c ****   *
   9:Core/Src/stm32l4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32l4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l4xx_it.c ****   *
  12:Core/Src/stm32l4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l4xx_it.c ****   *
  16:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l4xx_it.c ****   */
  18:Core/Src/stm32l4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l4xx_it.c **** 
  20:Core/Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l4xx_it.c **** #include "main.h"
  22:Core/Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  23:Core/Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l4xx_it.c **** #include "tusb.h"
  26:Core/Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32l4xx_it.c **** 
  28:Core/Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccCxfoVu.s 			page 2


  31:Core/Src/stm32l4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32l4xx_it.c **** 
  33:Core/Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32l4xx_it.c **** 
  36:Core/Src/stm32l4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32l4xx_it.c **** 
  38:Core/Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32l4xx_it.c **** 
  41:Core/Src/stm32l4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32l4xx_it.c **** 
  43:Core/Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32l4xx_it.c **** 
  46:Core/Src/stm32l4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32l4xx_it.c **** 
  48:Core/Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32l4xx_it.c **** 
  51:Core/Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32l4xx_it.c **** 
  53:Core/Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32l4xx_it.c **** 
  56:Core/Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32l4xx_it.c **** 
  58:Core/Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  60:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  61:Core/Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_rx;
  62:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi1;
  63:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi2;
  64:Core/Src/stm32l4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  65:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32l4xx_it.c **** 
  67:Core/Src/stm32l4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32l4xx_it.c **** 
  69:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32l4xx_it.c **** /**
  73:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32l4xx_it.c ****   */
  75:Core/Src/stm32l4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32l4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32l4xx_it.c **** 
  79:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /tmp/ccCxfoVu.s 			page 3


  81:Core/Src/stm32l4xx_it.c ****   while (1)
  36              		.loc 1 81 3 discriminator 1 view .LVU1
  82:Core/Src/stm32l4xx_it.c ****   {
  83:Core/Src/stm32l4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  81:Core/Src/stm32l4xx_it.c ****   {
  38              		.loc 1 81 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE202:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB203:
  84:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32l4xx_it.c **** }
  86:Core/Src/stm32l4xx_it.c **** 
  87:Core/Src/stm32l4xx_it.c **** /**
  88:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32l4xx_it.c ****   */
  90:Core/Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32l4xx_it.c **** {
  53              		.loc 1 91 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  92:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32l4xx_it.c **** 
  94:Core/Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32l4xx_it.c ****   while (1)
  60              		.loc 1 95 3 discriminator 1 view .LVU5
  96:Core/Src/stm32l4xx_it.c ****   {
  97:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32l4xx_it.c ****   }
  61              		.loc 1 99 3 discriminator 1 view .LVU6
  95:Core/Src/stm32l4xx_it.c ****   {
  62              		.loc 1 95 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE203:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
ARM GAS  /tmp/ccCxfoVu.s 			page 4


  76              	.LFB204:
 100:Core/Src/stm32l4xx_it.c **** }
 101:Core/Src/stm32l4xx_it.c **** 
 102:Core/Src/stm32l4xx_it.c **** /**
 103:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32l4xx_it.c ****   */
 105:Core/Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32l4xx_it.c **** {
  77              		.loc 1 106 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 107:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32l4xx_it.c **** 
 109:Core/Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32l4xx_it.c ****   while (1)
  84              		.loc 1 110 3 discriminator 1 view .LVU9
 111:Core/Src/stm32l4xx_it.c ****   {
 112:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32l4xx_it.c ****   }
  85              		.loc 1 114 3 discriminator 1 view .LVU10
 110:Core/Src/stm32l4xx_it.c ****   {
  86              		.loc 1 110 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE204:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB205:
 115:Core/Src/stm32l4xx_it.c **** }
 116:Core/Src/stm32l4xx_it.c **** 
 117:Core/Src/stm32l4xx_it.c **** /**
 118:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 119:Core/Src/stm32l4xx_it.c ****   */
 120:Core/Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32l4xx_it.c **** {
 101              		.loc 1 121 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 122:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32l4xx_it.c **** 
 124:Core/Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32l4xx_it.c ****   while (1)
ARM GAS  /tmp/ccCxfoVu.s 			page 5


 108              		.loc 1 125 3 discriminator 1 view .LVU13
 126:Core/Src/stm32l4xx_it.c ****   {
 127:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32l4xx_it.c ****   }
 109              		.loc 1 129 3 discriminator 1 view .LVU14
 125:Core/Src/stm32l4xx_it.c ****   {
 110              		.loc 1 125 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE205:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB206:
 130:Core/Src/stm32l4xx_it.c **** }
 131:Core/Src/stm32l4xx_it.c **** 
 132:Core/Src/stm32l4xx_it.c **** /**
 133:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32l4xx_it.c ****   */
 135:Core/Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32l4xx_it.c **** {
 125              		.loc 1 136 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 137:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32l4xx_it.c **** 
 139:Core/Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32l4xx_it.c ****   while (1)
 132              		.loc 1 140 3 discriminator 1 view .LVU17
 141:Core/Src/stm32l4xx_it.c ****   {
 142:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32l4xx_it.c ****   }
 133              		.loc 1 144 3 discriminator 1 view .LVU18
 140:Core/Src/stm32l4xx_it.c ****   {
 134              		.loc 1 140 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE206:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	SVC_Handler:
ARM GAS  /tmp/ccCxfoVu.s 			page 6


 148              	.LFB207:
 145:Core/Src/stm32l4xx_it.c **** }
 146:Core/Src/stm32l4xx_it.c **** 
 147:Core/Src/stm32l4xx_it.c **** /**
 148:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 149:Core/Src/stm32l4xx_it.c ****   */
 150:Core/Src/stm32l4xx_it.c **** void SVC_Handler(void)
 151:Core/Src/stm32l4xx_it.c **** {
 149              		.loc 1 151 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 152:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Core/Src/stm32l4xx_it.c **** 
 154:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Core/Src/stm32l4xx_it.c **** 
 157:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Core/Src/stm32l4xx_it.c **** }
 154              		.loc 1 158 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE207:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB208:
 159:Core/Src/stm32l4xx_it.c **** 
 160:Core/Src/stm32l4xx_it.c **** /**
 161:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Core/Src/stm32l4xx_it.c ****   */
 163:Core/Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 164:Core/Src/stm32l4xx_it.c **** {
 169              		.loc 1 164 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 165:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Core/Src/stm32l4xx_it.c **** 
 167:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Core/Src/stm32l4xx_it.c **** 
 170:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Core/Src/stm32l4xx_it.c **** }
 174              		.loc 1 171 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE208:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
ARM GAS  /tmp/ccCxfoVu.s 			page 7


 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB209:
 172:Core/Src/stm32l4xx_it.c **** 
 173:Core/Src/stm32l4xx_it.c **** /**
 174:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:Core/Src/stm32l4xx_it.c ****   */
 176:Core/Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 177:Core/Src/stm32l4xx_it.c **** {
 189              		.loc 1 177 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 178:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Core/Src/stm32l4xx_it.c **** 
 180:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Core/Src/stm32l4xx_it.c **** 
 183:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Core/Src/stm32l4xx_it.c **** }
 194              		.loc 1 184 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE209:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	SysTick_Handler:
 208              	.LFB210:
 185:Core/Src/stm32l4xx_it.c **** 
 186:Core/Src/stm32l4xx_it.c **** /**
 187:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 188:Core/Src/stm32l4xx_it.c ****   */
 189:Core/Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 190:Core/Src/stm32l4xx_it.c **** {
 209              		.loc 1 190 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 191:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Core/Src/stm32l4xx_it.c **** 
 193:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Core/Src/stm32l4xx_it.c ****   HAL_IncTick();
ARM GAS  /tmp/ccCxfoVu.s 			page 8


 218              		.loc 1 194 3 view .LVU27
 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 195:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Core/Src/stm32l4xx_it.c **** 
 197:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Core/Src/stm32l4xx_it.c **** }
 221              		.loc 1 198 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE210:
 226              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	DMA1_Channel2_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	DMA1_Channel2_IRQHandler:
 235              	.LFB211:
 199:Core/Src/stm32l4xx_it.c **** 
 200:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 202:Core/Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Core/Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Core/Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 205:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 206:Core/Src/stm32l4xx_it.c **** 
 207:Core/Src/stm32l4xx_it.c **** /**
 208:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 209:Core/Src/stm32l4xx_it.c ****   */
 210:Core/Src/stm32l4xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 211:Core/Src/stm32l4xx_it.c **** {
 236              		.loc 1 211 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
 212:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 213:Core/Src/stm32l4xx_it.c **** 
 214:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 215:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 245              		.loc 1 215 3 view .LVU30
 246 0002 0248     		ldr	r0, .L18
 247 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 248              	.LVL1:
 216:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 217:Core/Src/stm32l4xx_it.c **** 
 218:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 219:Core/Src/stm32l4xx_it.c **** }
 249              		.loc 1 219 1 is_stmt 0 view .LVU31
 250 0008 08BD     		pop	{r3, pc}
 251              	.L19:
ARM GAS  /tmp/ccCxfoVu.s 			page 9


 252 000a 00BF     		.align	2
 253              	.L18:
 254 000c 00000000 		.word	hdma_spi1_rx
 255              		.cfi_endproc
 256              	.LFE211:
 258              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 259              		.align	1
 260              		.global	DMA1_Channel3_IRQHandler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	DMA1_Channel3_IRQHandler:
 267              	.LFB212:
 220:Core/Src/stm32l4xx_it.c **** 
 221:Core/Src/stm32l4xx_it.c **** /**
 222:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 223:Core/Src/stm32l4xx_it.c ****   */
 224:Core/Src/stm32l4xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 225:Core/Src/stm32l4xx_it.c **** {
 268              		.loc 1 225 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 08B5     		push	{r3, lr}
 273              	.LCFI2:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
 226:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 227:Core/Src/stm32l4xx_it.c **** 
 228:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 229:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 277              		.loc 1 229 3 view .LVU33
 278 0002 0248     		ldr	r0, .L22
 279 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 280              	.LVL2:
 230:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 231:Core/Src/stm32l4xx_it.c **** 
 232:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 233:Core/Src/stm32l4xx_it.c **** }
 281              		.loc 1 233 1 is_stmt 0 view .LVU34
 282 0008 08BD     		pop	{r3, pc}
 283              	.L23:
 284 000a 00BF     		.align	2
 285              	.L22:
 286 000c 00000000 		.word	hdma_spi1_tx
 287              		.cfi_endproc
 288              	.LFE212:
 290              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 291              		.align	1
 292              		.global	DMA1_Channel4_IRQHandler
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	DMA1_Channel4_IRQHandler:
ARM GAS  /tmp/ccCxfoVu.s 			page 10


 299              	.LFB213:
 234:Core/Src/stm32l4xx_it.c **** 
 235:Core/Src/stm32l4xx_it.c **** /**
 236:Core/Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 237:Core/Src/stm32l4xx_it.c ****   */
 238:Core/Src/stm32l4xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 239:Core/Src/stm32l4xx_it.c **** {
 300              		.loc 1 239 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 240:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 241:Core/Src/stm32l4xx_it.c **** 
 242:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 243:Core/Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_rx);
 309              		.loc 1 243 3 view .LVU36
 310 0002 0248     		ldr	r0, .L26
 311 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 312              	.LVL3:
 244:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 245:Core/Src/stm32l4xx_it.c **** 
 246:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 247:Core/Src/stm32l4xx_it.c **** }
 313              		.loc 1 247 1 is_stmt 0 view .LVU37
 314 0008 08BD     		pop	{r3, pc}
 315              	.L27:
 316 000a 00BF     		.align	2
 317              	.L26:
 318 000c 00000000 		.word	hdma_spi2_rx
 319              		.cfi_endproc
 320              	.LFE213:
 322              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 323              		.align	1
 324              		.global	SPI1_IRQHandler
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	SPI1_IRQHandler:
 331              	.LFB214:
 248:Core/Src/stm32l4xx_it.c **** 
 249:Core/Src/stm32l4xx_it.c **** /**
 250:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 251:Core/Src/stm32l4xx_it.c ****   */
 252:Core/Src/stm32l4xx_it.c **** void SPI1_IRQHandler(void)
 253:Core/Src/stm32l4xx_it.c **** {
 332              		.loc 1 253 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI4:
ARM GAS  /tmp/ccCxfoVu.s 			page 11


 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 254:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 255:Core/Src/stm32l4xx_it.c **** 
 256:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 257:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 341              		.loc 1 257 3 view .LVU39
 342 0002 0248     		ldr	r0, .L30
 343 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 344              	.LVL4:
 258:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 259:Core/Src/stm32l4xx_it.c **** 
 260:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 261:Core/Src/stm32l4xx_it.c **** }
 345              		.loc 1 261 1 is_stmt 0 view .LVU40
 346 0008 08BD     		pop	{r3, pc}
 347              	.L31:
 348 000a 00BF     		.align	2
 349              	.L30:
 350 000c 00000000 		.word	hspi1
 351              		.cfi_endproc
 352              	.LFE214:
 354              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 355              		.align	1
 356              		.global	SPI2_IRQHandler
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	SPI2_IRQHandler:
 363              	.LFB215:
 262:Core/Src/stm32l4xx_it.c **** 
 263:Core/Src/stm32l4xx_it.c **** /**
 264:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 265:Core/Src/stm32l4xx_it.c ****   */
 266:Core/Src/stm32l4xx_it.c **** void SPI2_IRQHandler(void)
 267:Core/Src/stm32l4xx_it.c **** {
 364              		.loc 1 267 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI5:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 268:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 269:Core/Src/stm32l4xx_it.c **** 
 270:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 271:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 373              		.loc 1 271 3 view .LVU42
 374 0002 0248     		ldr	r0, .L34
 375 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 376              	.LVL5:
 272:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 273:Core/Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccCxfoVu.s 			page 12


 274:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 275:Core/Src/stm32l4xx_it.c **** }
 377              		.loc 1 275 1 is_stmt 0 view .LVU43
 378 0008 08BD     		pop	{r3, pc}
 379              	.L35:
 380 000a 00BF     		.align	2
 381              	.L34:
 382 000c 00000000 		.word	hspi2
 383              		.cfi_endproc
 384              	.LFE215:
 386              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 387              		.align	1
 388              		.global	OTG_FS_IRQHandler
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	OTG_FS_IRQHandler:
 395              	.LFB216:
 276:Core/Src/stm32l4xx_it.c **** 
 277:Core/Src/stm32l4xx_it.c **** /**
 278:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USB OTG FS global interrupt.
 279:Core/Src/stm32l4xx_it.c ****   */
 280:Core/Src/stm32l4xx_it.c **** void OTG_FS_IRQHandler(void)
 281:Core/Src/stm32l4xx_it.c **** {
 396              		.loc 1 281 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI6:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 282:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 283:Core/Src/stm32l4xx_it.c ****   
 284:Core/Src/stm32l4xx_it.c ****   tud_int_handler(BOARD_TUD_RHPORT);
 405              		.loc 1 284 3 view .LVU45
 406 0002 0020     		movs	r0, #0
 407 0004 FFF7FEFF 		bl	dcd_int_handler
 408              	.LVL6:
 285:Core/Src/stm32l4xx_it.c **** 
 286:Core/Src/stm32l4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 287:Core/Src/stm32l4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 409              		.loc 1 287 3 view .LVU46
 410 0008 0148     		ldr	r0, .L38
 411 000a FFF7FEFF 		bl	HAL_PCD_IRQHandler
 412              	.LVL7:
 288:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 289:Core/Src/stm32l4xx_it.c ****   
 290:Core/Src/stm32l4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 291:Core/Src/stm32l4xx_it.c **** }
 413              		.loc 1 291 1 is_stmt 0 view .LVU47
 414 000e 08BD     		pop	{r3, pc}
 415              	.L39:
 416              		.align	2
 417              	.L38:
ARM GAS  /tmp/ccCxfoVu.s 			page 13


 418 0010 00000000 		.word	hpcd_USB_OTG_FS
 419              		.cfi_endproc
 420              	.LFE216:
 422              		.text
 423              	.Letext0:
 424              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 425              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 426              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 427              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 428              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usb.h"
 429              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pcd.h"
 430              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 431              		.file 9 "tinyusb/src/device/usbd.h"
 432              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccCxfoVu.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
     /tmp/ccCxfoVu.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccCxfoVu.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccCxfoVu.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccCxfoVu.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccCxfoVu.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccCxfoVu.s:140    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:147    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccCxfoVu.s:160    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:167    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccCxfoVu.s:180    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:187    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccCxfoVu.s:200    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccCxfoVu.s:207    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccCxfoVu.s:227    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:234    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/ccCxfoVu.s:254    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
     /tmp/ccCxfoVu.s:259    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:266    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/ccCxfoVu.s:286    .text.DMA1_Channel3_IRQHandler:000000000000000c $d
     /tmp/ccCxfoVu.s:291    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:298    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
     /tmp/ccCxfoVu.s:318    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
     /tmp/ccCxfoVu.s:323    .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:330    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/ccCxfoVu.s:350    .text.SPI1_IRQHandler:000000000000000c $d
     /tmp/ccCxfoVu.s:355    .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:362    .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/ccCxfoVu.s:382    .text.SPI2_IRQHandler:000000000000000c $d
     /tmp/ccCxfoVu.s:387    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccCxfoVu.s:394    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccCxfoVu.s:418    .text.OTG_FS_IRQHandler:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi1_rx
hdma_spi1_tx
hdma_spi2_rx
HAL_SPI_IRQHandler
hspi1
hspi2
dcd_int_handler
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
