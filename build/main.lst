ARM GAS  /tmp/ccBVRzdb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB213:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "tusb.h"
  25:Core/Src/main.c **** #include "tusb_config.h"
  26:Core/Src/main.c **** #include "board_api.h"
  27:Core/Src/main.c **** //#include "../../tinyusb/hw/bsp/board_api.h"
  28:Core/Src/main.c **** //#include "family.c"
  29:Core/Src/main.c **** //#include "tinyusb/bsp/stm32l4/family" this isnt valid but find way to include this file
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccBVRzdb.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** #define SPI_LENGTH 3
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** enum  {
  43:Core/Src/main.c ****   BLINK_NOT_MOUNTED = 250,
  44:Core/Src/main.c ****   BLINK_MOUNTED = 1000,
  45:Core/Src/main.c ****   BLINK_SUSPENDED = 2500,
  46:Core/Src/main.c **** };
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** static uint32_t blink_interval_ms = BLINK_NOT_MOUNTED;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** // Variable that holds the current position in the sequence.
  51:Core/Src/main.c **** uint32_t note_pos = 0;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** // Store example melody as an array of note values
  54:Core/Src/main.c **** uint8_t note_sequence[] =
  55:Core/Src/main.c **** {
  56:Core/Src/main.c ****   74,78,81,86,90,93,98,102,57,61,66,69,73,78,81,85,88,92,97,100,97,92,88,85,81,78,
  57:Core/Src/main.c ****   74,69,66,62,57,62,66,69,74,78,81,86,90,93,97,102,97,93,90,85,81,78,73,68,64,61,
  58:Core/Src/main.c ****   56,61,64,68,74,78,81,86,90,93,98,102
  59:Core/Src/main.c **** };
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** // tracks which keys are pressed
  62:Core/Src/main.c **** uint16_t KEYPRESS = 0;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PD */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN PM */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  75:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  76:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  77:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  78:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** UART_HandleTypeDef huart2;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE BEGIN PV */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** //uint16_t I2C_TX_Buffer[]; //buffer for i2c data (wrong?)
  85:Core/Src/main.c **** uint8_t I2C_TX_Buffer[ 2 ]; //buffer for i2c data
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** uint32_t ADC1_VAL[ 8 ]; // one element for each ADC channel (one device)
  88:Core/Src/main.c **** uint32_t ADC2_VAL[ 8 ]; // one element for each ADC channel (one device)
ARM GAS  /tmp/ccBVRzdb.s 			page 3


  89:Core/Src/main.c **** //uint32_t adc_val;
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint8_t SPI_TX_Buffer[ SPI_LENGTH ];
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** uint8_t SPI_RX_Buffer[ SPI_LENGTH ];
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END PV */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  99:Core/Src/main.c **** void SystemClock_Config(void);
 100:Core/Src/main.c **** static void MX_GPIO_Init(void);
 101:Core/Src/main.c **** static void MX_DMA_Init(void);
 102:Core/Src/main.c **** static void MX_SPI1_Init(void);
 103:Core/Src/main.c **** static void MX_I2C1_Init(void);
 104:Core/Src/main.c **** static void MX_SPI2_Init(void);
 105:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 106:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** void midi_task(void);
 109:Core/Src/main.c **** void READ_KEYPRESS(uint32_t adc1_val[], uint32_t adc2_val[]);
 110:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num);
 111:Core/Src/main.c **** uint8_t DAC_TO_MIDI(uint8_t val);
 112:Core/Src/main.c **** void MIDI_TASK(octave_num);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END PFP */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 117:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /* USER CODE END 0 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief  The application entry point.
 123:Core/Src/main.c ****   * @retval int
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** int main(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 1 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 134:Core/Src/main.c ****   HAL_Init();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END Init */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Configure the system clock */
 141:Core/Src/main.c ****   //SystemClock_Config();
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 144:Core/Src/main.c ****   /* INITIALIZE TINYUSB */
 145:Core/Src/main.c ****   board_init();
ARM GAS  /tmp/ccBVRzdb.s 			page 4


 146:Core/Src/main.c ****   //tusb_init();
 147:Core/Src/main.c ****   /* USER CODE END SysInit */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Initialize all configured peripherals */
 150:Core/Src/main.c ****   MX_GPIO_Init();
 151:Core/Src/main.c ****   MX_DMA_Init();
 152:Core/Src/main.c ****   MX_SPI1_Init();
 153:Core/Src/main.c ****   MX_I2C1_Init();
 154:Core/Src/main.c ****   MX_SPI2_Init();
 155:Core/Src/main.c ****   MX_USART2_UART_Init();
 156:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* INITIALIZE TINYUSB */
 159:Core/Src/main.c ****   //board_init();
 160:Core/Src/main.c ****   tusb_init();
 161:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   // initialize transmit buffer for test case
 164:Core/Src/main.c ****   // START BIT
 165:Core/Src/main.c ****   SPI_TX_Buffer[0] = 0b00000001;
 166:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 167:Core/Src/main.c ****   SPI_TX_Buffer[1] = 0b10000000; // single ended, ch0 (top 4 bits)
 168:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 169:Core/Src/main.c ****   SPI_TX_Buffer[2] = 0b00000000;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   // set slave address of i2c device
 172:Core/Src/main.c ****   uint8_t slave_address = 0b01011000;
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   //reset dac registers
 175:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 176:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 177:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 178:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   int octave_num = 2;
 181:Core/Src/main.c ****   bool flag1 = false;
 182:Core/Src/main.c ****   bool flag2 = false;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   // MIDI == 0 , DAC == 1
 185:Core/Src/main.c ****   bool output_state = 0;
 186:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 187:Core/Src/main.c ****   //volatile int PA_2_VAL = 0;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /*
 190:Core/Src/main.c ****   I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 
 191:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 192:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 193:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   //I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 -- put in header file!
 197:Core/Src/main.c ****   //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 198:Core/Src/main.c ****   //HAL_Delay(100);
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   //int i = 0;
 201:Core/Src/main.c ****   /* USER CODE END 2 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccBVRzdb.s 			page 5


 203:Core/Src/main.c ****   /* Infinite loop */
 204:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 205:Core/Src/main.c ****   while (1) 
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     //PA_1_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_1);
 209:Core/Src/main.c ****     //PA_2_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_2);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) && !flag1){
 212:Core/Src/main.c ****       octave_num = octave_num + 1;
 213:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 214:Core/Src/main.c ****       flag1 = true;
 215:Core/Src/main.c ****     }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) flag1 = false;
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) && !flag2){
 220:Core/Src/main.c ****       octave_num = octave_num - 1;
 221:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 222:Core/Src/main.c ****       flag2 = true;
 223:Core/Src/main.c ****     }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2)) flag2 = false;
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****     // SPI ADC TEST (IN BLOCKING MODE)
 228:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 229:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 230:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 231:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_RESET);
 232:Core/Src/main.c ****     // one full duplex interaction
 233:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 234:Core/Src/main.c ****     // now need to parse data
 235:Core/Src/main.c ****     ADC1_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 236:Core/Src/main.c ****     // default CS to be high
 237:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 238:Core/Src/main.c ****     //if(i == 7) i = 0;
 239:Core/Src/main.c ****     //else i++; 
 240:Core/Src/main.c ****     }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 243:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 244:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 245:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_RESET);
 246:Core/Src/main.c ****     // one full duplex interaction
 247:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 248:Core/Src/main.c ****     // now need to parse data
 249:Core/Src/main.c ****     ADC2_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 250:Core/Src/main.c ****     // default CS to be high
 251:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 252:Core/Src/main.c ****     }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     /* CHECK OUTPUT SWITCH, SEND 0x00 from DAC if in MIDI mode*/
 255:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_8)){
 256:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 257:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 258:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 259:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
ARM GAS  /tmp/ccBVRzdb.s 			page 6


 260:Core/Src/main.c ****     }
 261:Core/Src/main.c ****     /* EVENTUALLY should send DAC = 0 (SET GATE also eventually) AND midi signal */
 262:Core/Src/main.c ****     else{
 263:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 264:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 265:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 266:Core/Src/main.c ****       READ_KEYPRESS(ADC1_VAL,ADC2_VAL);
 267:Core/Src/main.c ****       tud_task(); // tinyusb device task
 268:Core/Src/main.c ****       MIDI_TASK(octave_num);
 269:Core/Src/main.c ****     }
 270:Core/Src/main.c ****     /* I2C protocol test -- move test cases to auxiliary files */
 271:Core/Src/main.c ****     
 272:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 273:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0xFF; // data byte, full VREF
 274:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 275:Core/Src/main.c ****     //HAL_Delay(1000);
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 278:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x80; // data byte, half VREF
 279:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 280:Core/Src/main.c ****     //HAL_Delay(1000);
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 283:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x0; // data byte, GND
 284:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 285:Core/Src/main.c ****     //HAL_Delay(1000);
 286:Core/Src/main.c ****     
 287:Core/Src/main.c ****     //tud_task(); // tinyusb device task
 288:Core/Src/main.c ****     //MIDI_TASK();
 289:Core/Src/main.c ****     //midi_task();
 290:Core/Src/main.c ****     //HAL_Delay(1000);
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****     /* USER CODE END WHILE */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /* USER CODE END 3 */
 297:Core/Src/main.c **** }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /**
 300:Core/Src/main.c ****   * @brief System Clock Configuration
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** void SystemClock_Config(void)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 306:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 316:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/ccBVRzdb.s 			page 7


 317:Core/Src/main.c ****   */
 318:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 319:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 320:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 321:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 329:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 337:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 338:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 339:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 340:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 341:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 344:Core/Src/main.c ****   {
 345:Core/Src/main.c ****     Error_Handler();
 346:Core/Src/main.c ****   }
 347:Core/Src/main.c **** }
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /**
 350:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 351:Core/Src/main.c ****   * @param None
 352:Core/Src/main.c ****   * @retval None
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c **** static void MX_I2C1_Init(void)
 355:Core/Src/main.c **** {
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 364:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 365:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 366:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 367:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 368:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 369:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 370:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 371:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 372:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 373:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
ARM GAS  /tmp/ccBVRzdb.s 			page 8


 374:Core/Src/main.c ****   {
 375:Core/Src/main.c ****     Error_Handler();
 376:Core/Src/main.c ****   }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /** Configure Analogue filter
 379:Core/Src/main.c ****   */
 380:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /** Configure Digital filter
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** }
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 399:Core/Src/main.c ****   * @param None
 400:Core/Src/main.c ****   * @retval None
 401:Core/Src/main.c ****   */
 402:Core/Src/main.c **** static void MX_SPI1_Init(void)
 403:Core/Src/main.c **** {
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 412:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 413:Core/Src/main.c ****   hspi1.Instance = SPI1;
 414:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 415:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 416:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 417:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 418:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 419:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 420:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 421:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 422:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 423:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 424:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 425:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 426:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 427:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  /tmp/ccBVRzdb.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /**
 438:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 439:Core/Src/main.c ****   * @param None
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** static void MX_SPI2_Init(void)
 443:Core/Src/main.c **** {
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 452:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 453:Core/Src/main.c ****   hspi2.Instance = SPI2;
 454:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 455:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 456:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 457:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 458:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 459:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 460:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 461:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 462:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 463:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 464:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 465:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 466:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 467:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****     Error_Handler();
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** /**
 478:Core/Src/main.c ****   * @brief USART2 Initialization Function
 479:Core/Src/main.c ****   * @param None
 480:Core/Src/main.c ****   * @retval None
 481:Core/Src/main.c ****   */
 482:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 483:Core/Src/main.c **** {
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
ARM GAS  /tmp/ccBVRzdb.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 492:Core/Src/main.c ****   huart2.Instance = USART2;
 493:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 494:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 495:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 496:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 497:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 498:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 499:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 500:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 501:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 502:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c ****     Error_Handler();
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** }
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** /**
 513:Core/Src/main.c ****   * Enable DMA controller clock
 514:Core/Src/main.c ****   */
 515:Core/Src/main.c **** static void MX_DMA_Init(void)
 516:Core/Src/main.c **** {
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* DMA controller clock enable */
 519:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* DMA interrupt init */
 522:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 523:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 524:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 525:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 526:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 527:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 528:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 529:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 530:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** }
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** /**
 535:Core/Src/main.c ****   * @brief GPIO Initialization Function
 536:Core/Src/main.c ****   * @param None
 537:Core/Src/main.c ****   * @retval None
 538:Core/Src/main.c ****   */
 539:Core/Src/main.c **** static void MX_GPIO_Init(void)
 540:Core/Src/main.c **** {
  28              		.loc 1 540 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccBVRzdb.s 			page 11


  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8DB0     		sub	sp, sp, #52
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
 541:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 541 3 view .LVU1
  48              		.loc 1 541 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 544:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 544 3 is_stmt 1 view .LVU3
  56              	.LBB27:
  57              		.loc 1 544 3 view .LVU4
  58              		.loc 1 544 3 view .LVU5
  59 0012 AD4B     		ldr	r3, .L3
  60 0014 DA6C     		ldr	r2, [r3, #76]
  61 0016 42F01002 		orr	r2, r2, #16
  62 001a DA64     		str	r2, [r3, #76]
  63              		.loc 1 544 3 view .LVU6
  64 001c DA6C     		ldr	r2, [r3, #76]
  65 001e 02F01002 		and	r2, r2, #16
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 544 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE27:
  70              		.loc 1 544 3 view .LVU8
 545:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  71              		.loc 1 545 3 view .LVU9
  72              	.LBB28:
  73              		.loc 1 545 3 view .LVU10
  74              		.loc 1 545 3 view .LVU11
  75 0026 DA6C     		ldr	r2, [r3, #76]
  76 0028 42F00402 		orr	r2, r2, #4
  77 002c DA64     		str	r2, [r3, #76]
  78              		.loc 1 545 3 view .LVU12
  79 002e DA6C     		ldr	r2, [r3, #76]
  80 0030 02F00402 		and	r2, r2, #4
  81 0034 0292     		str	r2, [sp, #8]
  82              		.loc 1 545 3 view .LVU13
  83 0036 029A     		ldr	r2, [sp, #8]
ARM GAS  /tmp/ccBVRzdb.s 			page 12


  84              	.LBE28:
  85              		.loc 1 545 3 view .LVU14
 546:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 546 3 view .LVU15
  87              	.LBB29:
  88              		.loc 1 546 3 view .LVU16
  89              		.loc 1 546 3 view .LVU17
  90 0038 DA6C     		ldr	r2, [r3, #76]
  91 003a 42F08002 		orr	r2, r2, #128
  92 003e DA64     		str	r2, [r3, #76]
  93              		.loc 1 546 3 view .LVU18
  94 0040 DA6C     		ldr	r2, [r3, #76]
  95 0042 02F08002 		and	r2, r2, #128
  96 0046 0392     		str	r2, [sp, #12]
  97              		.loc 1 546 3 view .LVU19
  98 0048 039A     		ldr	r2, [sp, #12]
  99              	.LBE29:
 100              		.loc 1 546 3 view .LVU20
 547:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 101              		.loc 1 547 3 view .LVU21
 102              	.LBB30:
 103              		.loc 1 547 3 view .LVU22
 104              		.loc 1 547 3 view .LVU23
 105 004a DA6C     		ldr	r2, [r3, #76]
 106 004c 42F00102 		orr	r2, r2, #1
 107 0050 DA64     		str	r2, [r3, #76]
 108              		.loc 1 547 3 view .LVU24
 109 0052 DA6C     		ldr	r2, [r3, #76]
 110 0054 02F00102 		and	r2, r2, #1
 111 0058 0492     		str	r2, [sp, #16]
 112              		.loc 1 547 3 view .LVU25
 113 005a 049A     		ldr	r2, [sp, #16]
 114              	.LBE30:
 115              		.loc 1 547 3 view .LVU26
 548:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 116              		.loc 1 548 3 view .LVU27
 117              	.LBB31:
 118              		.loc 1 548 3 view .LVU28
 119              		.loc 1 548 3 view .LVU29
 120 005c DA6C     		ldr	r2, [r3, #76]
 121 005e 42F00202 		orr	r2, r2, #2
 122 0062 DA64     		str	r2, [r3, #76]
 123              		.loc 1 548 3 view .LVU30
 124 0064 DA6C     		ldr	r2, [r3, #76]
 125 0066 02F00202 		and	r2, r2, #2
 126 006a 0592     		str	r2, [sp, #20]
 127              		.loc 1 548 3 view .LVU31
 128 006c 059A     		ldr	r2, [sp, #20]
 129              	.LBE31:
 130              		.loc 1 548 3 view .LVU32
 549:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 131              		.loc 1 549 3 view .LVU33
 132              	.LBB32:
 133              		.loc 1 549 3 view .LVU34
 134              		.loc 1 549 3 view .LVU35
 135 006e DA6C     		ldr	r2, [r3, #76]
 136 0070 42F00802 		orr	r2, r2, #8
ARM GAS  /tmp/ccBVRzdb.s 			page 13


 137 0074 DA64     		str	r2, [r3, #76]
 138              		.loc 1 549 3 view .LVU36
 139 0076 DB6C     		ldr	r3, [r3, #76]
 140 0078 03F00803 		and	r3, r3, #8
 141 007c 0693     		str	r3, [sp, #24]
 142              		.loc 1 549 3 view .LVU37
 143 007e 069B     		ldr	r3, [sp, #24]
 144              	.LBE32:
 145              		.loc 1 549 3 view .LVU38
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 552:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, AUDIO_RST_Pin|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 146              		.loc 1 552 3 view .LVU39
 147 0080 924F     		ldr	r7, .L3+4
 148 0082 2246     		mov	r2, r4
 149 0084 41F60961 		movw	r1, #7689
 150 0088 3846     		mov	r0, r7
 151 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL0:
 553:Core/Src/main.c ****                           |GPIO_PIN_12|XL_CS_Pin, GPIO_PIN_RESET);
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 556:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 153              		.loc 1 556 3 view .LVU40
 154 008e 2246     		mov	r2, r4
 155 0090 2021     		movs	r1, #32
 156 0092 4FF09040 		mov	r0, #1207959552
 157 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 559:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD_R_Pin|M3V3_REG_ON_Pin, GPIO_PIN_RESET);
 159              		.loc 1 559 3 view .LVU41
 160 009a DFF83882 		ldr	r8, .L3+12
 161 009e 2246     		mov	r2, r4
 162 00a0 0C21     		movs	r1, #12
 163 00a2 4046     		mov	r0, r8
 164 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 562:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_VBUS_GPIO_Port, OTG_FS_VBUS_Pin, GPIO_PIN_RESET);
 166              		.loc 1 562 3 view .LVU42
 167 00a8 DFF82CA2 		ldr	r10, .L3+16
 168 00ac 2246     		mov	r2, r4
 169 00ae 4FF40061 		mov	r1, #2048
 170 00b2 5046     		mov	r0, r10
 171 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL3:
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 565:Core/Src/main.c ****   HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_RESET);
 173              		.loc 1 565 3 view .LVU43
 174 00b8 2246     		mov	r2, r4
 175 00ba 8021     		movs	r1, #128
 176 00bc 8448     		ldr	r0, .L3+8
 177 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccBVRzdb.s 			page 14


 178              	.LVL4:
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /*Configure GPIO pins : SAI1_MCK_Pin SAI1_FS_Pin SAI1_SCK_Pin SAI1_SD_Pin
 568:Core/Src/main.c ****                            AUDIO_DIN_Pin */
 569:Core/Src/main.c ****   GPIO_InitStruct.Pin = SAI1_MCK_Pin|SAI1_FS_Pin|SAI1_SCK_Pin|SAI1_SD_Pin
 179              		.loc 1 569 3 view .LVU44
 180              		.loc 1 569 23 is_stmt 0 view .LVU45
 181 00c2 F423     		movs	r3, #244
 182 00c4 0793     		str	r3, [sp, #28]
 570:Core/Src/main.c ****                           |AUDIO_DIN_Pin;
 571:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 183              		.loc 1 571 3 is_stmt 1 view .LVU46
 184              		.loc 1 571 24 is_stmt 0 view .LVU47
 185 00c6 0226     		movs	r6, #2
 186 00c8 0896     		str	r6, [sp, #32]
 572:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 572 3 is_stmt 1 view .LVU48
 188              		.loc 1 572 24 is_stmt 0 view .LVU49
 189 00ca 0994     		str	r4, [sp, #36]
 573:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 190              		.loc 1 573 3 is_stmt 1 view .LVU50
 191              		.loc 1 573 25 is_stmt 0 view .LVU51
 192 00cc 4FF00309 		mov	r9, #3
 193 00d0 CDF82890 		str	r9, [sp, #40]
 574:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_SAI1;
 194              		.loc 1 574 3 is_stmt 1 view .LVU52
 195              		.loc 1 574 29 is_stmt 0 view .LVU53
 196 00d4 0D23     		movs	r3, #13
 197 00d6 0B93     		str	r3, [sp, #44]
 575:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 198              		.loc 1 575 3 is_stmt 1 view .LVU54
 199 00d8 07A9     		add	r1, sp, #28
 200 00da 3846     		mov	r0, r7
 201 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL5:
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****   /*Configure GPIO pin : AUDIO_RST_Pin */
 578:Core/Src/main.c ****   GPIO_InitStruct.Pin = AUDIO_RST_Pin;
 203              		.loc 1 578 3 view .LVU55
 204              		.loc 1 578 23 is_stmt 0 view .LVU56
 205 00e0 0823     		movs	r3, #8
 206 00e2 0793     		str	r3, [sp, #28]
 579:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 579 3 is_stmt 1 view .LVU57
 208              		.loc 1 579 24 is_stmt 0 view .LVU58
 209 00e4 0125     		movs	r5, #1
 210 00e6 0895     		str	r5, [sp, #32]
 580:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 211              		.loc 1 580 3 is_stmt 1 view .LVU59
 212              		.loc 1 580 24 is_stmt 0 view .LVU60
 213 00e8 0994     		str	r4, [sp, #36]
 581:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 214              		.loc 1 581 3 is_stmt 1 view .LVU61
 215              		.loc 1 581 25 is_stmt 0 view .LVU62
 216 00ea 0A96     		str	r6, [sp, #40]
 582:Core/Src/main.c ****   HAL_GPIO_Init(AUDIO_RST_GPIO_Port, &GPIO_InitStruct);
 217              		.loc 1 582 3 is_stmt 1 view .LVU63
ARM GAS  /tmp/ccBVRzdb.s 			page 15


 218 00ec 07A9     		add	r1, sp, #28
 219 00ee 3846     		mov	r0, r7
 220 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL6:
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /*Configure GPIO pins : MFX_IRQ_OUT_Pin OTG_FS_OverCurrent_Pin */
 585:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_IRQ_OUT_Pin|OTG_FS_OverCurrent_Pin;
 222              		.loc 1 585 3 view .LVU64
 223              		.loc 1 585 23 is_stmt 0 view .LVU65
 224 00f4 4FF41053 		mov	r3, #9216
 225 00f8 0793     		str	r3, [sp, #28]
 586:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 226              		.loc 1 586 3 is_stmt 1 view .LVU66
 227              		.loc 1 586 24 is_stmt 0 view .LVU67
 228 00fa 4FF4901B 		mov	fp, #1179648
 229 00fe CDF820B0 		str	fp, [sp, #32]
 587:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 230              		.loc 1 587 3 is_stmt 1 view .LVU68
 231              		.loc 1 587 24 is_stmt 0 view .LVU69
 232 0102 0994     		str	r4, [sp, #36]
 588:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 233              		.loc 1 588 3 is_stmt 1 view .LVU70
 234 0104 07A9     		add	r1, sp, #28
 235 0106 5046     		mov	r0, r10
 236 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 237              	.LVL7:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c ****   /*Configure GPIO pins : PC0 MAG_INT_Pin MAG_DRDY_Pin PC6
 591:Core/Src/main.c ****                            PC7 PC8 PC9 */
 592:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|MAG_INT_Pin|MAG_DRDY_Pin|GPIO_PIN_6
 238              		.loc 1 592 3 view .LVU71
 239              		.loc 1 592 23 is_stmt 0 view .LVU72
 240 010c 40F2C733 		movw	r3, #967
 241 0110 0793     		str	r3, [sp, #28]
 593:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 594:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 242              		.loc 1 594 3 is_stmt 1 view .LVU73
 243              		.loc 1 594 24 is_stmt 0 view .LVU74
 244 0112 0894     		str	r4, [sp, #32]
 595:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 595 3 is_stmt 1 view .LVU75
 246              		.loc 1 595 24 is_stmt 0 view .LVU76
 247 0114 0994     		str	r4, [sp, #36]
 596:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 248              		.loc 1 596 3 is_stmt 1 view .LVU77
 249 0116 07A9     		add	r1, sp, #28
 250 0118 5046     		mov	r0, r10
 251 011a FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL8:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /*Configure GPIO pins : VLCD_Pin SEG22_Pin SEG1_Pin */
 599:Core/Src/main.c ****   GPIO_InitStruct.Pin = VLCD_Pin|SEG22_Pin|SEG1_Pin;
 253              		.loc 1 599 3 view .LVU78
 254              		.loc 1 599 23 is_stmt 0 view .LVU79
 255 011e 3823     		movs	r3, #56
 256 0120 0793     		str	r3, [sp, #28]
 600:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccBVRzdb.s 			page 16


 257              		.loc 1 600 3 is_stmt 1 view .LVU80
 258              		.loc 1 600 24 is_stmt 0 view .LVU81
 259 0122 0896     		str	r6, [sp, #32]
 601:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 601 3 is_stmt 1 view .LVU82
 261              		.loc 1 601 24 is_stmt 0 view .LVU83
 262 0124 0994     		str	r4, [sp, #36]
 602:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 263              		.loc 1 602 3 is_stmt 1 view .LVU84
 264              		.loc 1 602 25 is_stmt 0 view .LVU85
 265 0126 0A94     		str	r4, [sp, #40]
 603:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 266              		.loc 1 603 3 is_stmt 1 view .LVU86
 267              		.loc 1 603 29 is_stmt 0 view .LVU87
 268 0128 0B23     		movs	r3, #11
 269 012a 0B93     		str	r3, [sp, #44]
 604:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 270              		.loc 1 604 3 is_stmt 1 view .LVU88
 271 012c 07A9     		add	r1, sp, #28
 272 012e 5046     		mov	r0, r10
 273 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 274              	.LVL9:
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 */
 607:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 275              		.loc 1 607 3 view .LVU89
 276              		.loc 1 607 23 is_stmt 0 view .LVU90
 277 0134 0723     		movs	r3, #7
 278 0136 0793     		str	r3, [sp, #28]
 608:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 279              		.loc 1 608 3 is_stmt 1 view .LVU91
 280              		.loc 1 608 24 is_stmt 0 view .LVU92
 281 0138 0894     		str	r4, [sp, #32]
 609:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 282              		.loc 1 609 3 is_stmt 1 view .LVU93
 283              		.loc 1 609 24 is_stmt 0 view .LVU94
 284 013a 0995     		str	r5, [sp, #36]
 610:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 285              		.loc 1 610 3 is_stmt 1 view .LVU95
 286 013c 07A9     		add	r1, sp, #28
 287 013e 4FF09040 		mov	r0, #1207959552
 288 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL10:
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /*Configure GPIO pin : JOY_UP_Pin */
 613:Core/Src/main.c ****   GPIO_InitStruct.Pin = JOY_UP_Pin;
 290              		.loc 1 613 3 view .LVU96
 291              		.loc 1 613 23 is_stmt 0 view .LVU97
 292 0146 0823     		movs	r3, #8
 293 0148 0793     		str	r3, [sp, #28]
 614:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 294              		.loc 1 614 3 is_stmt 1 view .LVU98
 295              		.loc 1 614 24 is_stmt 0 view .LVU99
 296 014a 0894     		str	r4, [sp, #32]
 615:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 297              		.loc 1 615 3 is_stmt 1 view .LVU100
 298              		.loc 1 615 24 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccBVRzdb.s 			page 17


 299 014c 0996     		str	r6, [sp, #36]
 616:Core/Src/main.c ****   HAL_GPIO_Init(JOY_UP_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 616 3 is_stmt 1 view .LVU102
 301 014e 07A9     		add	r1, sp, #28
 302 0150 4FF09040 		mov	r0, #1207959552
 303 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL11:
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /*Configure GPIO pin : MFX_WAKEUP_Pin */
 619:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_WAKEUP_Pin;
 305              		.loc 1 619 3 view .LVU103
 306              		.loc 1 619 23 is_stmt 0 view .LVU104
 307 0158 1023     		movs	r3, #16
 308 015a 0793     		str	r3, [sp, #28]
 620:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 309              		.loc 1 620 3 is_stmt 1 view .LVU105
 310              		.loc 1 620 24 is_stmt 0 view .LVU106
 311 015c CDF820B0 		str	fp, [sp, #32]
 621:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 312              		.loc 1 621 3 is_stmt 1 view .LVU107
 313              		.loc 1 621 24 is_stmt 0 view .LVU108
 314 0160 0994     		str	r4, [sp, #36]
 622:Core/Src/main.c ****   HAL_GPIO_Init(MFX_WAKEUP_GPIO_Port, &GPIO_InitStruct);
 315              		.loc 1 622 3 is_stmt 1 view .LVU109
 316 0162 07A9     		add	r1, sp, #28
 317 0164 4FF09040 		mov	r0, #1207959552
 318 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL12:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 625:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 320              		.loc 1 625 3 view .LVU110
 321              		.loc 1 625 23 is_stmt 0 view .LVU111
 322 016c 2023     		movs	r3, #32
 323 016e 0793     		str	r3, [sp, #28]
 626:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 324              		.loc 1 626 3 is_stmt 1 view .LVU112
 325              		.loc 1 626 24 is_stmt 0 view .LVU113
 326 0170 0895     		str	r5, [sp, #32]
 627:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 627 3 is_stmt 1 view .LVU114
 328              		.loc 1 627 24 is_stmt 0 view .LVU115
 329 0172 0994     		str	r4, [sp, #36]
 628:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 330              		.loc 1 628 3 is_stmt 1 view .LVU116
 331              		.loc 1 628 25 is_stmt 0 view .LVU117
 332 0174 0A94     		str	r4, [sp, #40]
 629:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 333              		.loc 1 629 3 is_stmt 1 view .LVU118
 334 0176 07A9     		add	r1, sp, #28
 335 0178 4FF09040 		mov	r0, #1207959552
 336 017c FFF7FEFF 		bl	HAL_GPIO_Init
 337              	.LVL13:
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /*Configure GPIO pins : SEG21_Pin SEG2_Pin SEG20_Pin SEG3_Pin
 632:Core/Src/main.c ****                            SEG19_Pin SEG4_Pin SEG11_Pin SEG12_Pin
 633:Core/Src/main.c ****                            COM3_Pin */
ARM GAS  /tmp/ccBVRzdb.s 			page 18


 634:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG21_Pin|SEG2_Pin|SEG20_Pin|SEG3_Pin
 338              		.loc 1 634 3 view .LVU119
 339              		.loc 1 634 23 is_stmt 0 view .LVU120
 340 0180 4FF23323 		movw	r3, #62003
 341 0184 0793     		str	r3, [sp, #28]
 635:Core/Src/main.c ****                           |SEG19_Pin|SEG4_Pin|SEG11_Pin|SEG12_Pin
 636:Core/Src/main.c ****                           |COM3_Pin;
 637:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 342              		.loc 1 637 3 is_stmt 1 view .LVU121
 343              		.loc 1 637 24 is_stmt 0 view .LVU122
 344 0186 0896     		str	r6, [sp, #32]
 638:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 638 3 is_stmt 1 view .LVU123
 346              		.loc 1 638 24 is_stmt 0 view .LVU124
 347 0188 0994     		str	r4, [sp, #36]
 639:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 348              		.loc 1 639 3 is_stmt 1 view .LVU125
 349              		.loc 1 639 25 is_stmt 0 view .LVU126
 350 018a 0A94     		str	r4, [sp, #40]
 640:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 351              		.loc 1 640 3 is_stmt 1 view .LVU127
 352              		.loc 1 640 29 is_stmt 0 view .LVU128
 353 018c 0B23     		movs	r3, #11
 354 018e 0B93     		str	r3, [sp, #44]
 641:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 355              		.loc 1 641 3 is_stmt 1 view .LVU129
 356 0190 07A9     		add	r1, sp, #28
 357 0192 4046     		mov	r0, r8
 358 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL14:
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pin : LD_R_Pin */
 644:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD_R_Pin;
 360              		.loc 1 644 3 view .LVU130
 361              		.loc 1 644 23 is_stmt 0 view .LVU131
 362 0198 0423     		movs	r3, #4
 363 019a 0793     		str	r3, [sp, #28]
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 364              		.loc 1 645 3 is_stmt 1 view .LVU132
 365              		.loc 1 645 24 is_stmt 0 view .LVU133
 366 019c 0895     		str	r5, [sp, #32]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 367              		.loc 1 646 3 is_stmt 1 view .LVU134
 368              		.loc 1 646 24 is_stmt 0 view .LVU135
 369 019e 0995     		str	r5, [sp, #36]
 647:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 370              		.loc 1 647 3 is_stmt 1 view .LVU136
 371              		.loc 1 647 25 is_stmt 0 view .LVU137
 372 01a0 CDF82890 		str	r9, [sp, #40]
 648:Core/Src/main.c ****   HAL_GPIO_Init(LD_R_GPIO_Port, &GPIO_InitStruct);
 373              		.loc 1 648 3 is_stmt 1 view .LVU138
 374 01a4 07A9     		add	r1, sp, #28
 375 01a6 4046     		mov	r0, r8
 376 01a8 FFF7FEFF 		bl	HAL_GPIO_Init
 377              	.LVL15:
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /*Configure GPIO pin : PE8 */
ARM GAS  /tmp/ccBVRzdb.s 			page 19


 651:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 378              		.loc 1 651 3 view .LVU139
 379              		.loc 1 651 23 is_stmt 0 view .LVU140
 380 01ac 4FF48073 		mov	r3, #256
 381 01b0 0793     		str	r3, [sp, #28]
 652:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 382              		.loc 1 652 3 is_stmt 1 view .LVU141
 383              		.loc 1 652 24 is_stmt 0 view .LVU142
 384 01b2 0894     		str	r4, [sp, #32]
 653:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 385              		.loc 1 653 3 is_stmt 1 view .LVU143
 386              		.loc 1 653 24 is_stmt 0 view .LVU144
 387 01b4 0995     		str	r5, [sp, #36]
 654:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 388              		.loc 1 654 3 is_stmt 1 view .LVU145
 389 01b6 07A9     		add	r1, sp, #28
 390 01b8 3846     		mov	r0, r7
 391 01ba FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL16:
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   /*Configure GPIO pins : PE9 PE10 PE11 PE12
 657:Core/Src/main.c ****                            XL_CS_Pin */
 658:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
 393              		.loc 1 658 3 view .LVU146
 394              		.loc 1 658 23 is_stmt 0 view .LVU147
 395 01be 41F60163 		movw	r3, #7681
 396 01c2 0793     		str	r3, [sp, #28]
 659:Core/Src/main.c ****                           |XL_CS_Pin;
 660:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 397              		.loc 1 660 3 is_stmt 1 view .LVU148
 398              		.loc 1 660 24 is_stmt 0 view .LVU149
 399 01c4 0895     		str	r5, [sp, #32]
 661:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 400              		.loc 1 661 3 is_stmt 1 view .LVU150
 401              		.loc 1 661 24 is_stmt 0 view .LVU151
 402 01c6 0994     		str	r4, [sp, #36]
 662:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 403              		.loc 1 662 3 is_stmt 1 view .LVU152
 404              		.loc 1 662 25 is_stmt 0 view .LVU153
 405 01c8 0A94     		str	r4, [sp, #40]
 663:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 406              		.loc 1 663 3 is_stmt 1 view .LVU154
 407 01ca 07A9     		add	r1, sp, #28
 408 01cc 3846     		mov	r0, r7
 409 01ce FFF7FEFF 		bl	HAL_GPIO_Init
 410              	.LVL17:
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /*Configure GPIO pins : MFX_I2C_SLC_Pin MFX_I2C_SDA_Pin */
 666:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_I2C_SLC_Pin|MFX_I2C_SDA_Pin;
 411              		.loc 1 666 3 view .LVU155
 412              		.loc 1 666 23 is_stmt 0 view .LVU156
 413 01d2 4FF44063 		mov	r3, #3072
 414 01d6 0793     		str	r3, [sp, #28]
 667:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 415              		.loc 1 667 3 is_stmt 1 view .LVU157
 416              		.loc 1 667 24 is_stmt 0 view .LVU158
 417 01d8 1223     		movs	r3, #18
ARM GAS  /tmp/ccBVRzdb.s 			page 20


 418 01da 0893     		str	r3, [sp, #32]
 668:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 668 3 is_stmt 1 view .LVU159
 420              		.loc 1 668 24 is_stmt 0 view .LVU160
 421 01dc 0994     		str	r4, [sp, #36]
 669:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 422              		.loc 1 669 3 is_stmt 1 view .LVU161
 423              		.loc 1 669 25 is_stmt 0 view .LVU162
 424 01de CDF82890 		str	r9, [sp, #40]
 670:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 425              		.loc 1 670 3 is_stmt 1 view .LVU163
 426              		.loc 1 670 29 is_stmt 0 view .LVU164
 427 01e2 0423     		movs	r3, #4
 428 01e4 0B93     		str	r3, [sp, #44]
 671:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 429              		.loc 1 671 3 is_stmt 1 view .LVU165
 430 01e6 07A9     		add	r1, sp, #28
 431 01e8 4046     		mov	r0, r8
 432 01ea FFF7FEFF 		bl	HAL_GPIO_Init
 433              	.LVL18:
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****   /*Configure GPIO pins : SEG18_Pin SEG5_Pin SEG17_Pin SEG6_Pin
 674:Core/Src/main.c ****                            SEG16_Pin SEG7_Pin SEG15_Pin SEG8_Pin */
 675:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG18_Pin|SEG5_Pin|SEG17_Pin|SEG6_Pin
 434              		.loc 1 675 3 view .LVU166
 435              		.loc 1 675 23 is_stmt 0 view .LVU167
 436 01ee 4FF47F43 		mov	r3, #65280
 437 01f2 0793     		str	r3, [sp, #28]
 676:Core/Src/main.c ****                           |SEG16_Pin|SEG7_Pin|SEG15_Pin|SEG8_Pin;
 677:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 438              		.loc 1 677 3 is_stmt 1 view .LVU168
 439              		.loc 1 677 24 is_stmt 0 view .LVU169
 440 01f4 0896     		str	r6, [sp, #32]
 678:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 441              		.loc 1 678 3 is_stmt 1 view .LVU170
 442              		.loc 1 678 24 is_stmt 0 view .LVU171
 443 01f6 0994     		str	r4, [sp, #36]
 679:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 444              		.loc 1 679 3 is_stmt 1 view .LVU172
 445              		.loc 1 679 25 is_stmt 0 view .LVU173
 446 01f8 0A94     		str	r4, [sp, #40]
 680:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 447              		.loc 1 680 3 is_stmt 1 view .LVU174
 448              		.loc 1 680 29 is_stmt 0 view .LVU175
 449 01fa 0B23     		movs	r3, #11
 450 01fc 0B93     		str	r3, [sp, #44]
 681:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 681 3 is_stmt 1 view .LVU176
 452 01fe 07A9     		add	r1, sp, #28
 453 0200 3348     		ldr	r0, .L3+8
 454 0202 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL19:
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   /*Configure GPIO pins : COM0_Pin SEG10_Pin */
 684:Core/Src/main.c ****   GPIO_InitStruct.Pin = COM0_Pin|SEG10_Pin;
 456              		.loc 1 684 3 view .LVU177
 457              		.loc 1 684 23 is_stmt 0 view .LVU178
ARM GAS  /tmp/ccBVRzdb.s 			page 21


 458 0206 4FF40143 		mov	r3, #33024
 459 020a 0793     		str	r3, [sp, #28]
 685:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 685 3 is_stmt 1 view .LVU179
 461              		.loc 1 685 24 is_stmt 0 view .LVU180
 462 020c 0896     		str	r6, [sp, #32]
 686:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 686 3 is_stmt 1 view .LVU181
 464              		.loc 1 686 24 is_stmt 0 view .LVU182
 465 020e 0994     		str	r4, [sp, #36]
 687:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 687 3 is_stmt 1 view .LVU183
 467              		.loc 1 687 25 is_stmt 0 view .LVU184
 468 0210 0A94     		str	r4, [sp, #40]
 688:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 469              		.loc 1 688 3 is_stmt 1 view .LVU185
 470              		.loc 1 688 29 is_stmt 0 view .LVU186
 471 0212 0B23     		movs	r3, #11
 472 0214 0B93     		str	r3, [sp, #44]
 689:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 473              		.loc 1 689 3 is_stmt 1 view .LVU187
 474 0216 07A9     		add	r1, sp, #28
 475 0218 4FF09040 		mov	r0, #1207959552
 476 021c FFF7FEFF 		bl	HAL_GPIO_Init
 477              	.LVL20:
 690:Core/Src/main.c **** 
 691:Core/Src/main.c ****   /*Configure GPIO pin : PA9 */
 692:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 478              		.loc 1 692 3 view .LVU188
 479              		.loc 1 692 23 is_stmt 0 view .LVU189
 480 0220 4FF40073 		mov	r3, #512
 481 0224 0793     		str	r3, [sp, #28]
 693:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 482              		.loc 1 693 3 is_stmt 1 view .LVU190
 483              		.loc 1 693 24 is_stmt 0 view .LVU191
 484 0226 0894     		str	r4, [sp, #32]
 694:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 485              		.loc 1 694 3 is_stmt 1 view .LVU192
 486              		.loc 1 694 24 is_stmt 0 view .LVU193
 487 0228 0994     		str	r4, [sp, #36]
 695:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 488              		.loc 1 695 3 is_stmt 1 view .LVU194
 489 022a 07A9     		add	r1, sp, #28
 490 022c 4FF09040 		mov	r0, #1207959552
 491 0230 FFF7FEFF 		bl	HAL_GPIO_Init
 492              	.LVL21:
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /*Configure GPIO pins : PA10 PA11 PA12 */
 698:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 493              		.loc 1 698 3 view .LVU195
 494              		.loc 1 698 23 is_stmt 0 view .LVU196
 495 0234 4FF4E053 		mov	r3, #7168
 496 0238 0793     		str	r3, [sp, #28]
 699:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 497              		.loc 1 699 3 is_stmt 1 view .LVU197
 498              		.loc 1 699 24 is_stmt 0 view .LVU198
 499 023a 0896     		str	r6, [sp, #32]
ARM GAS  /tmp/ccBVRzdb.s 			page 22


 700:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 500              		.loc 1 700 3 is_stmt 1 view .LVU199
 501              		.loc 1 700 24 is_stmt 0 view .LVU200
 502 023c 0994     		str	r4, [sp, #36]
 701:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 503              		.loc 1 701 3 is_stmt 1 view .LVU201
 504              		.loc 1 701 25 is_stmt 0 view .LVU202
 505 023e CDF82890 		str	r9, [sp, #40]
 702:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 506              		.loc 1 702 3 is_stmt 1 view .LVU203
 507              		.loc 1 702 29 is_stmt 0 view .LVU204
 508 0242 0A23     		movs	r3, #10
 509 0244 0B93     		str	r3, [sp, #44]
 703:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 510              		.loc 1 703 3 is_stmt 1 view .LVU205
 511 0246 07A9     		add	r1, sp, #28
 512 0248 4FF09040 		mov	r0, #1207959552
 513 024c FFF7FEFF 		bl	HAL_GPIO_Init
 514              	.LVL22:
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 706:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 515              		.loc 1 706 3 view .LVU206
 516              		.loc 1 706 23 is_stmt 0 view .LVU207
 517 0250 4FF40063 		mov	r3, #2048
 518 0254 0793     		str	r3, [sp, #28]
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 519              		.loc 1 707 3 is_stmt 1 view .LVU208
 520              		.loc 1 707 24 is_stmt 0 view .LVU209
 521 0256 0895     		str	r5, [sp, #32]
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 522              		.loc 1 708 3 is_stmt 1 view .LVU210
 523              		.loc 1 708 24 is_stmt 0 view .LVU211
 524 0258 0994     		str	r4, [sp, #36]
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 525              		.loc 1 709 3 is_stmt 1 view .LVU212
 526              		.loc 1 709 25 is_stmt 0 view .LVU213
 527 025a 0A94     		str	r4, [sp, #40]
 710:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 528              		.loc 1 710 3 is_stmt 1 view .LVU214
 529 025c 07A9     		add	r1, sp, #28
 530 025e 5046     		mov	r0, r10
 531 0260 FFF7FEFF 		bl	HAL_GPIO_Init
 532              	.LVL23:
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /*Configure GPIO pins : EXT_RST_Pin GYRO_INT1_Pin */
 713:Core/Src/main.c ****   GPIO_InitStruct.Pin = EXT_RST_Pin|GYRO_INT1_Pin;
 533              		.loc 1 713 3 view .LVU215
 534              		.loc 1 713 23 is_stmt 0 view .LVU216
 535 0264 0523     		movs	r3, #5
 536 0266 0793     		str	r3, [sp, #28]
 714:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 537              		.loc 1 714 3 is_stmt 1 view .LVU217
 538              		.loc 1 714 24 is_stmt 0 view .LVU218
 539 0268 CDF820B0 		str	fp, [sp, #32]
 715:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 540              		.loc 1 715 3 is_stmt 1 view .LVU219
ARM GAS  /tmp/ccBVRzdb.s 			page 23


 541              		.loc 1 715 24 is_stmt 0 view .LVU220
 542 026c 0994     		str	r4, [sp, #36]
 716:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 543              		.loc 1 716 3 is_stmt 1 view .LVU221
 544 026e 07A9     		add	r1, sp, #28
 545 0270 1748     		ldr	r0, .L3+8
 546 0272 FFF7FEFF 		bl	HAL_GPIO_Init
 547              	.LVL24:
 717:Core/Src/main.c **** 
 718:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_CS_Pin */
 719:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_CS_Pin;
 548              		.loc 1 719 3 view .LVU222
 549              		.loc 1 719 23 is_stmt 0 view .LVU223
 550 0276 8023     		movs	r3, #128
 551 0278 0793     		str	r3, [sp, #28]
 720:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 552              		.loc 1 720 3 is_stmt 1 view .LVU224
 553              		.loc 1 720 24 is_stmt 0 view .LVU225
 554 027a 0895     		str	r5, [sp, #32]
 721:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 555              		.loc 1 721 3 is_stmt 1 view .LVU226
 556              		.loc 1 721 24 is_stmt 0 view .LVU227
 557 027c 0994     		str	r4, [sp, #36]
 722:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 558              		.loc 1 722 3 is_stmt 1 view .LVU228
 559              		.loc 1 722 25 is_stmt 0 view .LVU229
 560 027e CDF82890 		str	r9, [sp, #40]
 723:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_CS_GPIO_Port, &GPIO_InitStruct);
 561              		.loc 1 723 3 is_stmt 1 view .LVU230
 562 0282 07A9     		add	r1, sp, #28
 563 0284 1248     		ldr	r0, .L3+8
 564 0286 FFF7FEFF 		bl	HAL_GPIO_Init
 565              	.LVL25:
 724:Core/Src/main.c **** 
 725:Core/Src/main.c ****   /*Configure GPIO pin : M3V3_REG_ON_Pin */
 726:Core/Src/main.c ****   GPIO_InitStruct.Pin = M3V3_REG_ON_Pin;
 566              		.loc 1 726 3 view .LVU231
 567              		.loc 1 726 23 is_stmt 0 view .LVU232
 568 028a 0823     		movs	r3, #8
 569 028c 0793     		str	r3, [sp, #28]
 727:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 570              		.loc 1 727 3 is_stmt 1 view .LVU233
 571              		.loc 1 727 24 is_stmt 0 view .LVU234
 572 028e 0895     		str	r5, [sp, #32]
 728:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 573              		.loc 1 728 3 is_stmt 1 view .LVU235
 574              		.loc 1 728 24 is_stmt 0 view .LVU236
 575 0290 0994     		str	r4, [sp, #36]
 729:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 576              		.loc 1 729 3 is_stmt 1 view .LVU237
 577              		.loc 1 729 25 is_stmt 0 view .LVU238
 578 0292 0A94     		str	r4, [sp, #40]
 730:Core/Src/main.c ****   HAL_GPIO_Init(M3V3_REG_ON_GPIO_Port, &GPIO_InitStruct);
 579              		.loc 1 730 3 is_stmt 1 view .LVU239
 580 0294 07A9     		add	r1, sp, #28
 581 0296 4046     		mov	r0, r8
 582 0298 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccBVRzdb.s 			page 24


 583              	.LVL26:
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_INT2_Pin */
 733:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_INT2_Pin;
 584              		.loc 1 733 3 view .LVU240
 585              		.loc 1 733 23 is_stmt 0 view .LVU241
 586 029c 4FF48073 		mov	r3, #256
 587 02a0 0793     		str	r3, [sp, #28]
 734:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 588              		.loc 1 734 3 is_stmt 1 view .LVU242
 589              		.loc 1 734 24 is_stmt 0 view .LVU243
 590 02a2 CDF820B0 		str	fp, [sp, #32]
 735:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 591              		.loc 1 735 3 is_stmt 1 view .LVU244
 592              		.loc 1 735 24 is_stmt 0 view .LVU245
 593 02a6 0994     		str	r4, [sp, #36]
 736:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_INT2_GPIO_Port, &GPIO_InitStruct);
 594              		.loc 1 736 3 is_stmt 1 view .LVU246
 595 02a8 07A9     		add	r1, sp, #28
 596 02aa 4046     		mov	r0, r8
 597 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 598              	.LVL27:
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /*Configure GPIO pin : XL_INT_Pin */
 739:Core/Src/main.c ****   GPIO_InitStruct.Pin = XL_INT_Pin;
 599              		.loc 1 739 3 view .LVU247
 600              		.loc 1 739 23 is_stmt 0 view .LVU248
 601 02b0 0796     		str	r6, [sp, #28]
 740:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 602              		.loc 1 740 3 is_stmt 1 view .LVU249
 603              		.loc 1 740 24 is_stmt 0 view .LVU250
 604 02b2 CDF820B0 		str	fp, [sp, #32]
 741:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 605              		.loc 1 741 3 is_stmt 1 view .LVU251
 606              		.loc 1 741 24 is_stmt 0 view .LVU252
 607 02b6 0994     		str	r4, [sp, #36]
 742:Core/Src/main.c ****   HAL_GPIO_Init(XL_INT_GPIO_Port, &GPIO_InitStruct);
 608              		.loc 1 742 3 is_stmt 1 view .LVU253
 609 02b8 07A9     		add	r1, sp, #28
 610 02ba 3846     		mov	r0, r7
 611 02bc FFF7FEFF 		bl	HAL_GPIO_Init
 612              	.LVL28:
 743:Core/Src/main.c **** 
 744:Core/Src/main.c **** }
 613              		.loc 1 744 1 is_stmt 0 view .LVU254
 614 02c0 0DB0     		add	sp, sp, #52
 615              	.LCFI2:
 616              		.cfi_def_cfa_offset 36
 617              		@ sp needed
 618 02c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 619              	.L4:
 620 02c6 00BF     		.align	2
 621              	.L3:
 622 02c8 00100240 		.word	1073876992
 623 02cc 00100048 		.word	1207963648
 624 02d0 000C0048 		.word	1207962624
 625 02d4 00040048 		.word	1207960576
ARM GAS  /tmp/ccBVRzdb.s 			page 25


 626 02d8 00080048 		.word	1207961600
 627              		.cfi_endproc
 628              	.LFE213:
 630              		.section	.text.MX_DMA_Init,"ax",%progbits
 631              		.align	1
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	MX_DMA_Init:
 638              	.LFB212:
 516:Core/Src/main.c **** 
 639              		.loc 1 516 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 00B5     		push	{lr}
 644              	.LCFI3:
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 14, -4
 647 0002 83B0     		sub	sp, sp, #12
 648              	.LCFI4:
 649              		.cfi_def_cfa_offset 16
 519:Core/Src/main.c **** 
 650              		.loc 1 519 3 view .LVU256
 651              	.LBB33:
 519:Core/Src/main.c **** 
 652              		.loc 1 519 3 view .LVU257
 519:Core/Src/main.c **** 
 653              		.loc 1 519 3 view .LVU258
 654 0004 124B     		ldr	r3, .L7
 655 0006 9A6C     		ldr	r2, [r3, #72]
 656 0008 42F00102 		orr	r2, r2, #1
 657 000c 9A64     		str	r2, [r3, #72]
 519:Core/Src/main.c **** 
 658              		.loc 1 519 3 view .LVU259
 659 000e 9B6C     		ldr	r3, [r3, #72]
 660 0010 03F00103 		and	r3, r3, #1
 661 0014 0193     		str	r3, [sp, #4]
 519:Core/Src/main.c **** 
 662              		.loc 1 519 3 view .LVU260
 663 0016 019B     		ldr	r3, [sp, #4]
 664              	.LBE33:
 519:Core/Src/main.c **** 
 665              		.loc 1 519 3 view .LVU261
 523:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 666              		.loc 1 523 3 view .LVU262
 667 0018 0022     		movs	r2, #0
 668 001a 1146     		mov	r1, r2
 669 001c 0C20     		movs	r0, #12
 670 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 671              	.LVL29:
 524:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 672              		.loc 1 524 3 view .LVU263
 673 0022 0C20     		movs	r0, #12
 674 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 675              	.LVL30:
ARM GAS  /tmp/ccBVRzdb.s 			page 26


 526:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 676              		.loc 1 526 3 view .LVU264
 677 0028 0022     		movs	r2, #0
 678 002a 1146     		mov	r1, r2
 679 002c 0D20     		movs	r0, #13
 680 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 681              	.LVL31:
 527:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 682              		.loc 1 527 3 view .LVU265
 683 0032 0D20     		movs	r0, #13
 684 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 685              	.LVL32:
 529:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 686              		.loc 1 529 3 view .LVU266
 687 0038 0022     		movs	r2, #0
 688 003a 1146     		mov	r1, r2
 689 003c 0E20     		movs	r0, #14
 690 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 691              	.LVL33:
 530:Core/Src/main.c **** 
 692              		.loc 1 530 3 view .LVU267
 693 0042 0E20     		movs	r0, #14
 694 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 695              	.LVL34:
 532:Core/Src/main.c **** 
 696              		.loc 1 532 1 is_stmt 0 view .LVU268
 697 0048 03B0     		add	sp, sp, #12
 698              	.LCFI5:
 699              		.cfi_def_cfa_offset 4
 700              		@ sp needed
 701 004a 5DF804FB 		ldr	pc, [sp], #4
 702              	.L8:
 703 004e 00BF     		.align	2
 704              	.L7:
 705 0050 00100240 		.word	1073876992
 706              		.cfi_endproc
 707              	.LFE212:
 709              		.section	.text.tud_mount_cb,"ax",%progbits
 710              		.align	1
 711              		.weak	tud_mount_cb
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	tud_mount_cb:
 718              	.LFB214:
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 747:Core/Src/main.c **** 
 748:Core/Src/main.c **** //--------------------------------------------------------------------+
 749:Core/Src/main.c **** // Device callbacks
 750:Core/Src/main.c **** //--------------------------------------------------------------------+
 751:Core/Src/main.c **** 
 752:Core/Src/main.c **** // Invoked when device is mounted
 753:Core/Src/main.c **** void tud_mount_cb(void)
 754:Core/Src/main.c **** {
 719              		.loc 1 754 1 is_stmt 1 view -0
ARM GAS  /tmp/ccBVRzdb.s 			page 27


 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 755:Core/Src/main.c ****   blink_interval_ms = BLINK_MOUNTED;
 724              		.loc 1 755 3 view .LVU270
 725              		.loc 1 755 21 is_stmt 0 view .LVU271
 726 0000 024B     		ldr	r3, .L10
 727 0002 4FF47A72 		mov	r2, #1000
 728 0006 1A60     		str	r2, [r3]
 756:Core/Src/main.c **** }
 729              		.loc 1 756 1 view .LVU272
 730 0008 7047     		bx	lr
 731              	.L11:
 732 000a 00BF     		.align	2
 733              	.L10:
 734 000c 00000000 		.word	.LANCHOR0
 735              		.cfi_endproc
 736              	.LFE214:
 738              		.section	.text.tud_umount_cb,"ax",%progbits
 739              		.align	1
 740              		.weak	tud_umount_cb
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	tud_umount_cb:
 747              	.LFB215:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c **** // Invoked when device is unmounted
 759:Core/Src/main.c **** void tud_umount_cb(void)
 760:Core/Src/main.c **** {
 748              		.loc 1 760 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 761:Core/Src/main.c ****   blink_interval_ms = BLINK_NOT_MOUNTED;
 753              		.loc 1 761 3 view .LVU274
 754              		.loc 1 761 21 is_stmt 0 view .LVU275
 755 0000 014B     		ldr	r3, .L13
 756 0002 FA22     		movs	r2, #250
 757 0004 1A60     		str	r2, [r3]
 762:Core/Src/main.c **** }
 758              		.loc 1 762 1 view .LVU276
 759 0006 7047     		bx	lr
 760              	.L14:
 761              		.align	2
 762              	.L13:
 763 0008 00000000 		.word	.LANCHOR0
 764              		.cfi_endproc
 765              	.LFE215:
 767              		.section	.text.tud_suspend_cb,"ax",%progbits
 768              		.align	1
 769              		.weak	tud_suspend_cb
 770              		.syntax unified
 771              		.thumb
ARM GAS  /tmp/ccBVRzdb.s 			page 28


 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	tud_suspend_cb:
 776              	.LVL35:
 777              	.LFB216:
 763:Core/Src/main.c **** 
 764:Core/Src/main.c **** // Invoked when usb bus is suspended
 765:Core/Src/main.c **** // remote_wakeup_en : if host allow us  to perform remote wakeup
 766:Core/Src/main.c **** // Within 7ms, device must draw an average of current less than 2.5 mA from bus
 767:Core/Src/main.c **** void tud_suspend_cb(bool remote_wakeup_en)
 768:Core/Src/main.c **** {
 778              		.loc 1 768 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 769:Core/Src/main.c ****   (void) remote_wakeup_en;
 783              		.loc 1 769 3 view .LVU278
 770:Core/Src/main.c ****   blink_interval_ms = BLINK_SUSPENDED;
 784              		.loc 1 770 3 view .LVU279
 785              		.loc 1 770 21 is_stmt 0 view .LVU280
 786 0000 024B     		ldr	r3, .L16
 787 0002 40F6C412 		movw	r2, #2500
 788 0006 1A60     		str	r2, [r3]
 771:Core/Src/main.c **** }
 789              		.loc 1 771 1 view .LVU281
 790 0008 7047     		bx	lr
 791              	.L17:
 792 000a 00BF     		.align	2
 793              	.L16:
 794 000c 00000000 		.word	.LANCHOR0
 795              		.cfi_endproc
 796              	.LFE216:
 798              		.section	.text.tud_resume_cb,"ax",%progbits
 799              		.align	1
 800              		.weak	tud_resume_cb
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	tud_resume_cb:
 807              	.LFB217:
 772:Core/Src/main.c **** 
 773:Core/Src/main.c **** // Invoked when usb bus is resumed
 774:Core/Src/main.c **** void tud_resume_cb(void)
 775:Core/Src/main.c **** {
 808              		.loc 1 775 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812 0000 08B5     		push	{r3, lr}
 813              	.LCFI6:
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 3, -8
 816              		.cfi_offset 14, -4
 776:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 817              		.loc 1 776 3 view .LVU283
ARM GAS  /tmp/ccBVRzdb.s 			page 29


 818              		.loc 1 776 23 is_stmt 0 view .LVU284
 819 0002 FFF7FEFF 		bl	tud_mounted
 820              	.LVL36:
 821              		.loc 1 776 53 view .LVU285
 822 0006 20B1     		cbz	r0, .L20
 823 0008 4FF47A72 		mov	r2, #1000
 824              	.L19:
 825              		.loc 1 776 21 discriminator 4 view .LVU286
 826 000c 024B     		ldr	r3, .L22
 827 000e 1A60     		str	r2, [r3]
 777:Core/Src/main.c **** }
 828              		.loc 1 777 1 discriminator 4 view .LVU287
 829 0010 08BD     		pop	{r3, pc}
 830              	.L20:
 776:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 831              		.loc 1 776 53 view .LVU288
 832 0012 FA22     		movs	r2, #250
 833 0014 FAE7     		b	.L19
 834              	.L23:
 835 0016 00BF     		.align	2
 836              	.L22:
 837 0018 00000000 		.word	.LANCHOR0
 838              		.cfi_endproc
 839              	.LFE217:
 841              		.section	.text.MIDI_TASK,"ax",%progbits
 842              		.align	1
 843              		.global	MIDI_TASK
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	MIDI_TASK:
 850              	.LVL37:
 851              	.LFB218:
 778:Core/Src/main.c **** 
 779:Core/Src/main.c **** /* LOUIS IMPLEMENTATION OF MIDI TASK*/
 780:Core/Src/main.c **** void MIDI_TASK(octave_num){
 852              		.loc 1 780 27 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		.loc 1 780 27 is_stmt 0 view .LVU290
 857 0000 10B5     		push	{r4, lr}
 858              	.LCFI7:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 4, -8
 861              		.cfi_offset 14, -4
 862 0002 82B0     		sub	sp, sp, #8
 863              	.LCFI8:
 864              		.cfi_def_cfa_offset 16
 781:Core/Src/main.c ****   uint8_t const cable_num = 0; // MIDI jack associated with USB endpoint
 865              		.loc 1 781 3 is_stmt 1 view .LVU291
 866              	.LVL38:
 782:Core/Src/main.c ****   uint8_t const channel   = 0; // 0 for channel 1
 867              		.loc 1 782 3 view .LVU292
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****   // The MIDI interface always creates input and output port/jack descriptors
ARM GAS  /tmp/ccBVRzdb.s 			page 30


 785:Core/Src/main.c ****   // regardless of these being used or not. Therefore incoming traffic should be read
 786:Core/Src/main.c ****   // (possibly just discarded) to avoid the sender blocking in IO
 787:Core/Src/main.c ****   uint8_t packet[4];
 868              		.loc 1 787 3 view .LVU293
 788:Core/Src/main.c ****   while ( tud_midi_available() ) tud_midi_packet_read(packet);
 869              		.loc 1 788 3 view .LVU294
 870              		.loc 1 788 9 is_stmt 0 view .LVU295
 871 0004 03E0     		b	.L25
 872              	.LVL39:
 873              	.L26:
 874              		.loc 1 788 34 is_stmt 1 view .LVU296
 875              	.LBB34:
 876              	.LBI34:
 877              		.file 2 "tinyusb/src/class/midi/midi_device.h"
   1:tinyusb/src/class/midi/midi_device.h **** /*
   2:tinyusb/src/class/midi/midi_device.h ****  * The MIT License (MIT)
   3:tinyusb/src/class/midi/midi_device.h ****  *
   4:tinyusb/src/class/midi/midi_device.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/class/midi/midi_device.h ****  *
   6:tinyusb/src/class/midi/midi_device.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/class/midi/midi_device.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/class/midi/midi_device.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/class/midi/midi_device.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/class/midi/midi_device.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/class/midi/midi_device.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/class/midi/midi_device.h ****  *
  13:tinyusb/src/class/midi/midi_device.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/class/midi/midi_device.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/class/midi/midi_device.h ****  *
  16:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tinyusb/src/class/midi/midi_device.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/class/midi/midi_device.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/class/midi/midi_device.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/class/midi/midi_device.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/class/midi/midi_device.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE.
  23:tinyusb/src/class/midi/midi_device.h ****  *
  24:tinyusb/src/class/midi/midi_device.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/class/midi/midi_device.h ****  */
  26:tinyusb/src/class/midi/midi_device.h **** 
  27:tinyusb/src/class/midi/midi_device.h **** #ifndef _TUSB_MIDI_DEVICE_H_
  28:tinyusb/src/class/midi/midi_device.h **** #define _TUSB_MIDI_DEVICE_H_
  29:tinyusb/src/class/midi/midi_device.h **** 
  30:tinyusb/src/class/midi/midi_device.h **** #include "class/audio/audio.h"
  31:tinyusb/src/class/midi/midi_device.h **** #include "midi.h"
  32:tinyusb/src/class/midi/midi_device.h **** 
  33:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  34:tinyusb/src/class/midi/midi_device.h **** // Class Driver Configuration
  35:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  36:tinyusb/src/class/midi/midi_device.h **** 
  37:tinyusb/src/class/midi/midi_device.h **** #if !defined(CFG_TUD_MIDI_EP_BUFSIZE) && defined(CFG_TUD_MIDI_EPSIZE)
  38:tinyusb/src/class/midi/midi_device.h ****   #warning CFG_TUD_MIDI_EPSIZE is renamed to CFG_TUD_MIDI_EP_BUFSIZE, please update to use the new 
  39:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE    CFG_TUD_MIDI_EPSIZE
  40:tinyusb/src/class/midi/midi_device.h **** #endif
  41:tinyusb/src/class/midi/midi_device.h **** 
  42:tinyusb/src/class/midi/midi_device.h **** #ifndef CFG_TUD_MIDI_EP_BUFSIZE
  43:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE     (TUD_OPT_HIGH_SPEED ? 512 : 64)
ARM GAS  /tmp/ccBVRzdb.s 			page 31


  44:tinyusb/src/class/midi/midi_device.h **** #endif
  45:tinyusb/src/class/midi/midi_device.h **** 
  46:tinyusb/src/class/midi/midi_device.h **** #ifdef __cplusplus
  47:tinyusb/src/class/midi/midi_device.h ****  extern "C" {
  48:tinyusb/src/class/midi/midi_device.h **** #endif
  49:tinyusb/src/class/midi/midi_device.h **** 
  50:tinyusb/src/class/midi/midi_device.h **** /** \addtogroup MIDI_Serial Serial
  51:tinyusb/src/class/midi/midi_device.h ****  *  @{
  52:tinyusb/src/class/midi/midi_device.h ****  *  \defgroup   MIDI_Serial_Device Device
  53:tinyusb/src/class/midi/midi_device.h ****  *  @{ */
  54:tinyusb/src/class/midi/midi_device.h **** 
  55:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  56:tinyusb/src/class/midi/midi_device.h **** // Application API (Multiple Interfaces)
  57:tinyusb/src/class/midi/midi_device.h **** // CFG_TUD_MIDI > 1
  58:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  59:tinyusb/src/class/midi/midi_device.h **** 
  60:tinyusb/src/class/midi/midi_device.h **** // Check if midi interface is mounted
  61:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_mounted      (uint8_t itf);
  62:tinyusb/src/class/midi/midi_device.h **** 
  63:tinyusb/src/class/midi/midi_device.h **** // Get the number of bytes available for reading
  64:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_available    (uint8_t itf, uint8_t cable_num);
  65:tinyusb/src/class/midi/midi_device.h **** 
  66:tinyusb/src/class/midi/midi_device.h **** // Read byte stream              (legacy)
  67:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_read  (uint8_t itf, uint8_t cable_num, void* buffer, uint32_t bufsize);
  68:tinyusb/src/class/midi/midi_device.h **** 
  69:tinyusb/src/class/midi/midi_device.h **** // Write byte Stream             (legacy)
  70:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_write (uint8_t itf, uint8_t cable_num, uint8_t const* buffer, uint32_t b
  71:tinyusb/src/class/midi/midi_device.h **** 
  72:tinyusb/src/class/midi/midi_device.h **** // Read event packet             (4 bytes)
  73:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_read  (uint8_t itf, uint8_t packet[4]);
  74:tinyusb/src/class/midi/midi_device.h **** 
  75:tinyusb/src/class/midi/midi_device.h **** // Write event packet            (4 bytes)
  76:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_write (uint8_t itf, uint8_t const packet[4]);
  77:tinyusb/src/class/midi/midi_device.h **** 
  78:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  79:tinyusb/src/class/midi/midi_device.h **** // Application API (Single Interface)
  80:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  81:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_mounted      (void);
  82:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available    (void);
  83:tinyusb/src/class/midi/midi_device.h **** 
  84:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read  (void* buffer, uint32_t bufsize);
  85:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
  86:tinyusb/src/class/midi/midi_device.h **** 
  87:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_read  (uint8_t packet[4]);
  88:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_write (uint8_t const packet[4]);
  89:tinyusb/src/class/midi/midi_device.h **** 
  90:tinyusb/src/class/midi/midi_device.h **** //------------- Deprecated API name  -------------//
  91:tinyusb/src/class/midi/midi_device.h **** // TODO remove after 0.10.0 release
  92:tinyusb/src/class/midi/midi_device.h **** 
  93:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_read() is renamed to tud_midi_stream_read()")
  94:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_read (void* buffer, uint32_t bufsize)
  95:tinyusb/src/class/midi/midi_device.h **** {
  96:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_read(buffer, bufsize);
  97:tinyusb/src/class/midi/midi_device.h **** }
  98:tinyusb/src/class/midi/midi_device.h **** 
  99:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_write() is renamed to tud_midi_stream_write()")
 100:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_write(uint8_t cable_num, uint8_t const* buffer, uint32_t bufsize)
ARM GAS  /tmp/ccBVRzdb.s 			page 32


 101:tinyusb/src/class/midi/midi_device.h **** {
 102:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_write(cable_num, buffer, bufsize);
 103:tinyusb/src/class/midi/midi_device.h **** }
 104:tinyusb/src/class/midi/midi_device.h **** 
 105:tinyusb/src/class/midi/midi_device.h **** 
 106:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_send() is renamed to tud_midi_packet_write()")
 107:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_send(uint8_t packet[4])
 108:tinyusb/src/class/midi/midi_device.h **** {
 109:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_write(packet);
 110:tinyusb/src/class/midi/midi_device.h **** }
 111:tinyusb/src/class/midi/midi_device.h **** 
 112:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_receive() is renamed to tud_midi_packet_read()")
 113:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_receive(uint8_t packet[4])
 114:tinyusb/src/class/midi/midi_device.h **** {
 115:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_read(packet);
 116:tinyusb/src/class/midi/midi_device.h **** }
 117:tinyusb/src/class/midi/midi_device.h **** 
 118:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 119:tinyusb/src/class/midi/midi_device.h **** // Application Callback API (weak is optional)
 120:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 121:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_WEAK void tud_midi_rx_cb(uint8_t itf);
 122:tinyusb/src/class/midi/midi_device.h **** 
 123:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 124:tinyusb/src/class/midi/midi_device.h **** // Inline Functions
 125:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 126:tinyusb/src/class/midi/midi_device.h **** 
 127:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_mounted (void)
 128:tinyusb/src/class/midi/midi_device.h **** {
 129:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_mounted(0);
 130:tinyusb/src/class/midi/midi_device.h **** }
 131:tinyusb/src/class/midi/midi_device.h **** 
 132:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available (void)
 133:tinyusb/src/class/midi/midi_device.h **** {
 134:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_available(0, 0);
 135:tinyusb/src/class/midi/midi_device.h **** }
 136:tinyusb/src/class/midi/midi_device.h **** 
 137:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read (void* buffer, uint32_t bufsize)
 138:tinyusb/src/class/midi/midi_device.h **** {
 139:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_read(0, 0, buffer, bufsize);
 140:tinyusb/src/class/midi/midi_device.h **** }
 141:tinyusb/src/class/midi/midi_device.h **** 
 142:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
 143:tinyusb/src/class/midi/midi_device.h **** {
 144:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_write(0, cable_num, buffer, bufsize);
 145:tinyusb/src/class/midi/midi_device.h **** }
 146:tinyusb/src/class/midi/midi_device.h **** 
 147:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_packet_read (uint8_t packet[4])
 878              		.loc 2 147 20 view .LVU297
 879              	.LBB35:
 148:tinyusb/src/class/midi/midi_device.h **** {
 149:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_packet_read(0, packet);
 880              		.loc 2 149 3 view .LVU298
 881              		.loc 2 149 10 is_stmt 0 view .LVU299
 882 0006 01A9     		add	r1, sp, #4
 883              	.LVL40:
 884              		.loc 2 149 10 view .LVU300
 885 0008 0020     		movs	r0, #0
ARM GAS  /tmp/ccBVRzdb.s 			page 33


 886 000a FFF7FEFF 		bl	tud_midi_n_packet_read
 887              	.LVL41:
 888              	.L25:
 889              		.loc 2 149 10 view .LVU301
 890              	.LBE35:
 891              	.LBE34:
 892              		.loc 1 788 9 is_stmt 1 discriminator 1 view .LVU302
 893              	.LBB36:
 894              	.LBI36:
 132:tinyusb/src/class/midi/midi_device.h **** {
 895              		.loc 2 132 24 discriminator 1 view .LVU303
 896              	.LBB37:
 134:tinyusb/src/class/midi/midi_device.h **** }
 897              		.loc 2 134 3 discriminator 1 view .LVU304
 134:tinyusb/src/class/midi/midi_device.h **** }
 898              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU305
 899 000e 0021     		movs	r1, #0
 900 0010 0846     		mov	r0, r1
 901 0012 FFF7FEFF 		bl	tud_midi_n_available
 902              	.LVL42:
 903              	.LBE37:
 904              	.LBE36:
 905              		.loc 1 788 9 discriminator 1 view .LVU306
 906 0016 0028     		cmp	r0, #0
 907 0018 F5D1     		bne	.L26
 908              	.LBB38:
 789:Core/Src/main.c **** 
 790:Core/Src/main.c ****   // delay necessary?
 791:Core/Src/main.c ****   //HAL_Delay(286);
 792:Core/Src/main.c **** 
 793:Core/Src/main.c ****   uint8_t note_on[3];
 794:Core/Src/main.c ****   uint8_t note_off[3];
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****   for(int i=0;i<12;i++){
 909              		.loc 1 796 11 view .LVU307
 910 001a 0024     		movs	r4, #0
 911 001c 11E0     		b	.L27
 912              	.LVL43:
 913              	.L28:
 914              	.LBB39:
 797:Core/Src/main.c ****     if (KEYPRESS >> i & 0x1 == 1){
 798:Core/Src/main.c ****       uint8_t note_on[3] = { 0x90 | channel, 12*i + 24, 127 };
 799:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 800:Core/Src/main.c ****     }
 801:Core/Src/main.c ****     else {
 802:Core/Src/main.c ****       uint8_t note_off[3] = { 0x80 | channel, (12*i + 24), 0};
 915              		.loc 1 802 7 is_stmt 1 view .LVU308
 916              		.loc 1 802 15 is_stmt 0 view .LVU309
 917 001e 8023     		movs	r3, #128
 918 0020 8DF80030 		strb	r3, [sp]
 919              		.loc 1 802 53 view .LVU310
 920 0024 04EB4403 		add	r3, r4, r4, lsl #1
 921 0028 9B00     		lsls	r3, r3, #2
 922 002a 1833     		adds	r3, r3, #24
 923              		.loc 1 802 15 view .LVU311
 924 002c 8DF80130 		strb	r3, [sp, #1]
 925 0030 0020     		movs	r0, #0
ARM GAS  /tmp/ccBVRzdb.s 			page 34


 926 0032 8DF80200 		strb	r0, [sp, #2]
 803:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_off, 3);
 927              		.loc 1 803 7 is_stmt 1 view .LVU312
 928              	.LVL44:
 929              	.LBB40:
 930              	.LBI40:
 142:tinyusb/src/class/midi/midi_device.h **** {
 931              		.loc 2 142 24 view .LVU313
 932              	.LBB41:
 144:tinyusb/src/class/midi/midi_device.h **** }
 933              		.loc 2 144 3 view .LVU314
 144:tinyusb/src/class/midi/midi_device.h **** }
 934              		.loc 2 144 10 is_stmt 0 view .LVU315
 935 0036 0323     		movs	r3, #3
 936 0038 6A46     		mov	r2, sp
 937 003a 0146     		mov	r1, r0
 938 003c FFF7FEFF 		bl	tud_midi_n_stream_write
 939              	.LVL45:
 940              	.L29:
 144:tinyusb/src/class/midi/midi_device.h **** }
 941              		.loc 2 144 10 view .LVU316
 942              	.LBE41:
 943              	.LBE40:
 944              	.LBE39:
 796:Core/Src/main.c ****     if (KEYPRESS >> i & 0x1 == 1){
 945              		.loc 1 796 20 is_stmt 1 discriminator 2 view .LVU317
 796:Core/Src/main.c ****     if (KEYPRESS >> i & 0x1 == 1){
 946              		.loc 1 796 21 is_stmt 0 discriminator 2 view .LVU318
 947 0040 0134     		adds	r4, r4, #1
 948              	.LVL46:
 949              	.L27:
 796:Core/Src/main.c ****     if (KEYPRESS >> i & 0x1 == 1){
 950              		.loc 1 796 15 is_stmt 1 discriminator 1 view .LVU319
 796:Core/Src/main.c ****     if (KEYPRESS >> i & 0x1 == 1){
 951              		.loc 1 796 3 is_stmt 0 discriminator 1 view .LVU320
 952 0042 0B2C     		cmp	r4, #11
 953 0044 18DC     		bgt	.L32
 797:Core/Src/main.c ****       uint8_t note_on[3] = { 0x90 | channel, 12*i + 24, 127 };
 954              		.loc 1 797 5 is_stmt 1 view .LVU321
 797:Core/Src/main.c ****       uint8_t note_on[3] = { 0x90 | channel, 12*i + 24, 127 };
 955              		.loc 1 797 18 is_stmt 0 view .LVU322
 956 0046 0D4B     		ldr	r3, .L33
 957 0048 1B88     		ldrh	r3, [r3]
 958 004a 2341     		asrs	r3, r3, r4
 797:Core/Src/main.c ****       uint8_t note_on[3] = { 0x90 | channel, 12*i + 24, 127 };
 959              		.loc 1 797 8 view .LVU323
 960 004c 13F0010F 		tst	r3, #1
 961 0050 E5D0     		beq	.L28
 962              	.LBB42:
 798:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 963              		.loc 1 798 7 is_stmt 1 view .LVU324
 798:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 964              		.loc 1 798 15 is_stmt 0 view .LVU325
 965 0052 9023     		movs	r3, #144
 966 0054 8DF80030 		strb	r3, [sp]
 798:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 967              		.loc 1 798 51 view .LVU326
ARM GAS  /tmp/ccBVRzdb.s 			page 35


 968 0058 04EB4403 		add	r3, r4, r4, lsl #1
 969 005c 9B00     		lsls	r3, r3, #2
 970 005e 1833     		adds	r3, r3, #24
 798:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 971              		.loc 1 798 15 view .LVU327
 972 0060 8DF80130 		strb	r3, [sp, #1]
 973 0064 7F23     		movs	r3, #127
 974 0066 8DF80230 		strb	r3, [sp, #2]
 799:Core/Src/main.c ****     }
 975              		.loc 1 799 7 is_stmt 1 view .LVU328
 976              	.LVL47:
 977              	.LBB43:
 978              	.LBI43:
 142:tinyusb/src/class/midi/midi_device.h **** {
 979              		.loc 2 142 24 view .LVU329
 980              	.LBB44:
 144:tinyusb/src/class/midi/midi_device.h **** }
 981              		.loc 2 144 3 view .LVU330
 144:tinyusb/src/class/midi/midi_device.h **** }
 982              		.loc 2 144 10 is_stmt 0 view .LVU331
 983 006a 0323     		movs	r3, #3
 984 006c 6A46     		mov	r2, sp
 985 006e 0021     		movs	r1, #0
 986 0070 0846     		mov	r0, r1
 987 0072 FFF7FEFF 		bl	tud_midi_n_stream_write
 988              	.LVL48:
 144:tinyusb/src/class/midi/midi_device.h **** }
 989              		.loc 2 144 10 view .LVU332
 990              	.LBE44:
 991              	.LBE43:
 992              	.LBE42:
 993 0076 E3E7     		b	.L29
 994              	.L32:
 995              	.LBE38:
 804:Core/Src/main.c ****     }
 805:Core/Src/main.c ****   }
 806:Core/Src/main.c **** 
 807:Core/Src/main.c **** }
 996              		.loc 1 807 1 view .LVU333
 997 0078 02B0     		add	sp, sp, #8
 998              	.LCFI9:
 999              		.cfi_def_cfa_offset 8
 1000              		@ sp needed
 1001 007a 10BD     		pop	{r4, pc}
 1002              	.LVL49:
 1003              	.L34:
 1004              		.loc 1 807 1 view .LVU334
 1005              		.align	2
 1006              	.L33:
 1007 007c 00000000 		.word	.LANCHOR1
 1008              		.cfi_endproc
 1009              	.LFE218:
 1011              		.section	.text.midi_task,"ax",%progbits
 1012              		.align	1
 1013              		.global	midi_task
 1014              		.syntax unified
 1015              		.thumb
ARM GAS  /tmp/ccBVRzdb.s 			page 36


 1016              		.thumb_func
 1017              		.fpu fpv4-sp-d16
 1019              	midi_task:
 1020              	.LFB219:
 808:Core/Src/main.c **** 
 809:Core/Src/main.c **** // MIDI TASK-- SEPARATE FILE
 810:Core/Src/main.c **** 
 811:Core/Src/main.c **** void midi_task(void)
 812:Core/Src/main.c **** {
 1021              		.loc 1 812 1 is_stmt 1 view -0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 16
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025 0000 30B5     		push	{r4, r5, lr}
 1026              	.LCFI10:
 1027              		.cfi_def_cfa_offset 12
 1028              		.cfi_offset 4, -12
 1029              		.cfi_offset 5, -8
 1030              		.cfi_offset 14, -4
 1031 0002 85B0     		sub	sp, sp, #20
 1032              	.LCFI11:
 1033              		.cfi_def_cfa_offset 32
 813:Core/Src/main.c ****   static uint32_t start_ms = 0;
 1034              		.loc 1 813 3 view .LVU336
 814:Core/Src/main.c **** 
 815:Core/Src/main.c ****   uint8_t const cable_num = 0; // MIDI jack associated with USB endpoint
 1035              		.loc 1 815 3 view .LVU337
 1036              	.LVL50:
 816:Core/Src/main.c ****   uint8_t const channel   = 0; // 0 for channel 1
 1037              		.loc 1 816 3 view .LVU338
 817:Core/Src/main.c **** 
 818:Core/Src/main.c ****   // The MIDI interface always creates input and output port/jack descriptors
 819:Core/Src/main.c ****   // regardless of these being used or not. Therefore incoming traffic should be read
 820:Core/Src/main.c ****   // (possibly just discarded) to avoid the sender blocking in IO
 821:Core/Src/main.c ****   uint8_t packet[4];
 1038              		.loc 1 821 3 view .LVU339
 822:Core/Src/main.c ****   while ( tud_midi_available() ) tud_midi_packet_read(packet);
 1039              		.loc 1 822 3 view .LVU340
 1040              		.loc 1 822 9 is_stmt 0 view .LVU341
 1041 0004 03E0     		b	.L36
 1042              	.L37:
 1043              		.loc 1 822 34 is_stmt 1 view .LVU342
 1044              	.LVL51:
 1045              	.LBB45:
 1046              	.LBI45:
 147:tinyusb/src/class/midi/midi_device.h **** {
 1047              		.loc 2 147 20 view .LVU343
 1048              	.LBB46:
 1049              		.loc 2 149 3 view .LVU344
 1050              		.loc 2 149 10 is_stmt 0 view .LVU345
 1051 0006 03A9     		add	r1, sp, #12
 1052              	.LVL52:
 1053              		.loc 2 149 10 view .LVU346
 1054 0008 0020     		movs	r0, #0
 1055 000a FFF7FEFF 		bl	tud_midi_n_packet_read
 1056              	.LVL53:
 1057              	.L36:
ARM GAS  /tmp/ccBVRzdb.s 			page 37


 1058              		.loc 2 149 10 view .LVU347
 1059              	.LBE46:
 1060              	.LBE45:
 1061              		.loc 1 822 9 is_stmt 1 discriminator 1 view .LVU348
 1062              	.LBB47:
 1063              	.LBI47:
 132:tinyusb/src/class/midi/midi_device.h **** {
 1064              		.loc 2 132 24 discriminator 1 view .LVU349
 1065              	.LBB48:
 134:tinyusb/src/class/midi/midi_device.h **** }
 1066              		.loc 2 134 3 discriminator 1 view .LVU350
 134:tinyusb/src/class/midi/midi_device.h **** }
 1067              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU351
 1068 000e 0021     		movs	r1, #0
 1069 0010 0846     		mov	r0, r1
 1070 0012 FFF7FEFF 		bl	tud_midi_n_available
 1071              	.LVL54:
 1072              	.LBE48:
 1073              	.LBE47:
 1074              		.loc 1 822 9 discriminator 1 view .LVU352
 1075 0016 0028     		cmp	r0, #0
 1076 0018 F5D1     		bne	.L37
 823:Core/Src/main.c **** 
 824:Core/Src/main.c ****   // send note periodically
 825:Core/Src/main.c ****   /* CONSIDER USING DELAY WITH SYSTICK HANDLER*/
 826:Core/Src/main.c ****   
 827:Core/Src/main.c ****   HAL_Delay(286);
 1077              		.loc 1 827 3 is_stmt 1 view .LVU353
 1078 001a 4FF48F70 		mov	r0, #286
 1079 001e FFF7FEFF 		bl	HAL_Delay
 1080              	.LVL55:
 828:Core/Src/main.c **** 
 829:Core/Src/main.c ****   /*BELOW IS TINYUSB IMPLEMENTATION USING INTERRUPT*/
 830:Core/Src/main.c ****   /*
 831:Core/Src/main.c ****   if (board_millis() - start_ms < 286) return; // not enough time
 832:Core/Src/main.c ****   start_ms += 286;
 833:Core/Src/main.c ****   */
 834:Core/Src/main.c **** 
 835:Core/Src/main.c ****   // Previous positions in the note sequence.
 836:Core/Src/main.c ****   int previous = (int) (note_pos - 1);
 1081              		.loc 1 836 3 view .LVU354
 1082              		.loc 1 836 34 is_stmt 0 view .LVU355
 1083 0022 174B     		ldr	r3, .L43
 1084 0024 1B68     		ldr	r3, [r3]
 1085              	.LVL56:
 837:Core/Src/main.c **** 
 838:Core/Src/main.c ****   // If we currently are at position 0, set the
 839:Core/Src/main.c ****   // previous position to the last note in the sequence.
 840:Core/Src/main.c ****   if (previous < 0) previous = sizeof(note_sequence) - 1;
 1086              		.loc 1 840 3 is_stmt 1 view .LVU356
 1087              		.loc 1 840 6 is_stmt 0 view .LVU357
 1088 0026 5D1E     		subs	r5, r3, #1
 1089              	.LVL57:
 1090              		.loc 1 840 6 view .LVU358
 1091 0028 28D4     		bmi	.L42
 1092              	.LVL58:
 1093              	.L38:
ARM GAS  /tmp/ccBVRzdb.s 			page 38


 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   // Send Note On for current position at full velocity (127) on channel 1.
 843:Core/Src/main.c ****   uint8_t note_on[3] = { 0x90 | channel, note_sequence[note_pos], 127 };
 1094              		.loc 1 843 3 is_stmt 1 view .LVU359
 1095              		.loc 1 843 11 is_stmt 0 view .LVU360
 1096 002a 9022     		movs	r2, #144
 1097 002c 8DF80820 		strb	r2, [sp, #8]
 1098              		.loc 1 843 55 view .LVU361
 1099 0030 144C     		ldr	r4, .L43+4
 1100 0032 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1101              		.loc 1 843 11 view .LVU362
 1102 0034 8DF80930 		strb	r3, [sp, #9]
 1103 0038 7F23     		movs	r3, #127
 1104 003a 8DF80A30 		strb	r3, [sp, #10]
 844:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_on, 3);
 1105              		.loc 1 844 3 is_stmt 1 view .LVU363
 1106              	.LVL59:
 1107              	.LBB49:
 1108              	.LBI49:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1109              		.loc 2 142 24 view .LVU364
 1110              	.LBB50:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1111              		.loc 2 144 3 view .LVU365
 144:tinyusb/src/class/midi/midi_device.h **** }
 1112              		.loc 2 144 10 is_stmt 0 view .LVU366
 1113 003e 0323     		movs	r3, #3
 1114 0040 02AA     		add	r2, sp, #8
 1115              	.LVL60:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1116              		.loc 2 144 10 view .LVU367
 1117 0042 0021     		movs	r1, #0
 1118 0044 0846     		mov	r0, r1
 1119 0046 FFF7FEFF 		bl	tud_midi_n_stream_write
 1120              	.LVL61:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1121              		.loc 2 144 10 view .LVU368
 1122              	.LBE50:
 1123              	.LBE49:
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****   // Send Note Off for previous note.
 847:Core/Src/main.c ****   uint8_t note_off[3] = { 0x80 | channel, note_sequence[previous], 0};
 1124              		.loc 1 847 3 is_stmt 1 view .LVU369
 1125              		.loc 1 847 11 is_stmt 0 view .LVU370
 1126 004a 8023     		movs	r3, #128
 1127 004c 8DF80430 		strb	r3, [sp, #4]
 1128              		.loc 1 847 56 view .LVU371
 1129 0050 635D     		ldrb	r3, [r4, r5]	@ zero_extendqisi2
 1130              		.loc 1 847 11 view .LVU372
 1131 0052 8DF80530 		strb	r3, [sp, #5]
 1132 0056 0020     		movs	r0, #0
 1133 0058 8DF80600 		strb	r0, [sp, #6]
 848:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_off, 3);
 1134              		.loc 1 848 3 is_stmt 1 view .LVU373
 1135              	.LVL62:
 1136              	.LBB51:
 1137              	.LBI51:
ARM GAS  /tmp/ccBVRzdb.s 			page 39


 142:tinyusb/src/class/midi/midi_device.h **** {
 1138              		.loc 2 142 24 view .LVU374
 1139              	.LBB52:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1140              		.loc 2 144 3 view .LVU375
 144:tinyusb/src/class/midi/midi_device.h **** }
 1141              		.loc 2 144 10 is_stmt 0 view .LVU376
 1142 005c 0323     		movs	r3, #3
 1143 005e 01AA     		add	r2, sp, #4
 1144              	.LVL63:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1145              		.loc 2 144 10 view .LVU377
 1146 0060 0146     		mov	r1, r0
 1147 0062 FFF7FEFF 		bl	tud_midi_n_stream_write
 1148              	.LVL64:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1149              		.loc 2 144 10 view .LVU378
 1150              	.LBE52:
 1151              	.LBE51:
 849:Core/Src/main.c **** 
 850:Core/Src/main.c ****   // Increment position
 851:Core/Src/main.c ****   note_pos++;
 1152              		.loc 1 851 3 is_stmt 1 view .LVU379
 1153              		.loc 1 851 11 is_stmt 0 view .LVU380
 1154 0066 064A     		ldr	r2, .L43
 1155 0068 1368     		ldr	r3, [r2]
 1156 006a 0133     		adds	r3, r3, #1
 1157 006c 1360     		str	r3, [r2]
 852:Core/Src/main.c **** 
 853:Core/Src/main.c ****   // If we are at the end of the sequence, start over.
 854:Core/Src/main.c ****   if (note_pos >= sizeof(note_sequence)) note_pos = 0;
 1158              		.loc 1 854 3 is_stmt 1 view .LVU381
 1159              		.loc 1 854 6 is_stmt 0 view .LVU382
 1160 006e 3F2B     		cmp	r3, #63
 1161 0070 02D9     		bls	.L35
 1162              		.loc 1 854 42 is_stmt 1 discriminator 1 view .LVU383
 1163              		.loc 1 854 51 is_stmt 0 discriminator 1 view .LVU384
 1164 0072 1346     		mov	r3, r2
 1165 0074 0022     		movs	r2, #0
 1166 0076 1A60     		str	r2, [r3]
 1167              	.L35:
 855:Core/Src/main.c **** }
 1168              		.loc 1 855 1 view .LVU385
 1169 0078 05B0     		add	sp, sp, #20
 1170              	.LCFI12:
 1171              		.cfi_remember_state
 1172              		.cfi_def_cfa_offset 12
 1173              		@ sp needed
 1174 007a 30BD     		pop	{r4, r5, pc}
 1175              	.LVL65:
 1176              	.L42:
 1177              	.LCFI13:
 1178              		.cfi_restore_state
 840:Core/Src/main.c **** 
 1179              		.loc 1 840 30 view .LVU386
 1180 007c 3F25     		movs	r5, #63
 1181              	.LVL66:
ARM GAS  /tmp/ccBVRzdb.s 			page 40


 840:Core/Src/main.c **** 
 1182              		.loc 1 840 30 view .LVU387
 1183 007e D4E7     		b	.L38
 1184              	.L44:
 1185              		.align	2
 1186              	.L43:
 1187 0080 00000000 		.word	.LANCHOR2
 1188 0084 00000000 		.word	.LANCHOR3
 1189              		.cfi_endproc
 1190              	.LFE219:
 1192              		.section	.text.READ_KEYPRESS,"ax",%progbits
 1193              		.align	1
 1194              		.global	READ_KEYPRESS
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu fpv4-sp-d16
 1200              	READ_KEYPRESS:
 1201              	.LVL67:
 1202              	.LFB220:
 856:Core/Src/main.c **** 
 857:Core/Src/main.c **** /* READ ALL CURRENTLY PRESSED KEYS */
 858:Core/Src/main.c **** void READ_KEYPRESS(uint32_t adc1_val[], uint32_t adc2_val[]) {
 1203              		.loc 1 858 62 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 859:Core/Src/main.c ****    KEYPRESS = 0x0;
 1208              		.loc 1 859 4 view .LVU389
 1209              		.loc 1 859 13 is_stmt 0 view .LVU390
 1210 0000 0023     		movs	r3, #0
 1211 0002 164A     		ldr	r2, .L55
 1212 0004 1380     		strh	r3, [r2]	@ movhi
 860:Core/Src/main.c ****    for (int i = 0; i < 12; i++) {
 1213              		.loc 1 860 4 is_stmt 1 view .LVU391
 1214              	.LBB53:
 1215              		.loc 1 860 9 view .LVU392
 1216              	.LVL68:
 1217              		.loc 1 860 20 view .LVU393
 1218              		.loc 1 860 4 is_stmt 0 view .LVU394
 1219 0006 0B2B     		cmp	r3, #11
 1220 0008 27DC     		bgt	.L53
 1221              	.LBE53:
 858:Core/Src/main.c ****    KEYPRESS = 0x0;
 1222              		.loc 1 858 62 view .LVU395
 1223 000a 10B4     		push	{r4}
 1224              	.LCFI14:
 1225              		.cfi_def_cfa_offset 4
 1226              		.cfi_offset 4, -4
 1227 000c 12E0     		b	.L49
 1228              	.L47:
 1229              	.LBB54:
 861:Core/Src/main.c ****         if (i < 6) {
 862:Core/Src/main.c ****             if (adc1_val[i] > 600) KEYPRESS |= 0b1 << i;
 863:Core/Src/main.c ****         } else {
 864:Core/Src/main.c ****             if (adc2_val[i - 6] > 600) KEYPRESS |= 0b1 << i;
ARM GAS  /tmp/ccBVRzdb.s 			page 41


 1230              		.loc 1 864 13 is_stmt 1 view .LVU396
 1231              		.loc 1 864 25 is_stmt 0 view .LVU397
 1232 000e 03F18042 		add	r2, r3, #1073741824
 1233 0012 063A     		subs	r2, r2, #6
 1234 0014 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1235              		.loc 1 864 16 view .LVU398
 1236 0018 B2F5167F 		cmp	r2, #600
 1237 001c 07D9     		bls	.L48
 1238              		.loc 1 864 40 is_stmt 1 discriminator 1 view .LVU399
 1239              		.loc 1 864 56 is_stmt 0 discriminator 1 view .LVU400
 1240 001e 0122     		movs	r2, #1
 1241 0020 9A40     		lsls	r2, r2, r3
 1242              		.loc 1 864 49 discriminator 1 view .LVU401
 1243 0022 0E4C     		ldr	r4, .L55
 1244 0024 B4F800C0 		ldrh	ip, [r4]
 1245 0028 42EA0C02 		orr	r2, r2, ip
 1246 002c 2280     		strh	r2, [r4]	@ movhi
 1247              	.L48:
 860:Core/Src/main.c ****         if (i < 6) {
 1248              		.loc 1 860 28 is_stmt 1 discriminator 2 view .LVU402
 860:Core/Src/main.c ****         if (i < 6) {
 1249              		.loc 1 860 29 is_stmt 0 discriminator 2 view .LVU403
 1250 002e 0133     		adds	r3, r3, #1
 1251              	.LVL69:
 860:Core/Src/main.c ****         if (i < 6) {
 1252              		.loc 1 860 20 is_stmt 1 discriminator 2 view .LVU404
 860:Core/Src/main.c ****         if (i < 6) {
 1253              		.loc 1 860 4 is_stmt 0 discriminator 2 view .LVU405
 1254 0030 0B2B     		cmp	r3, #11
 1255 0032 0FDC     		bgt	.L54
 1256              	.L49:
 861:Core/Src/main.c ****         if (i < 6) {
 1257              		.loc 1 861 9 is_stmt 1 view .LVU406
 861:Core/Src/main.c ****         if (i < 6) {
 1258              		.loc 1 861 12 is_stmt 0 view .LVU407
 1259 0034 052B     		cmp	r3, #5
 1260 0036 EADC     		bgt	.L47
 862:Core/Src/main.c ****         } else {
 1261              		.loc 1 862 13 is_stmt 1 view .LVU408
 862:Core/Src/main.c ****         } else {
 1262              		.loc 1 862 25 is_stmt 0 view .LVU409
 1263 0038 50F82320 		ldr	r2, [r0, r3, lsl #2]
 862:Core/Src/main.c ****         } else {
 1264              		.loc 1 862 16 view .LVU410
 1265 003c B2F5167F 		cmp	r2, #600
 1266 0040 F5D9     		bls	.L48
 862:Core/Src/main.c ****         } else {
 1267              		.loc 1 862 36 is_stmt 1 discriminator 1 view .LVU411
 862:Core/Src/main.c ****         } else {
 1268              		.loc 1 862 52 is_stmt 0 discriminator 1 view .LVU412
 1269 0042 0122     		movs	r2, #1
 1270 0044 9A40     		lsls	r2, r2, r3
 862:Core/Src/main.c ****         } else {
 1271              		.loc 1 862 45 discriminator 1 view .LVU413
 1272 0046 054C     		ldr	r4, .L55
 1273 0048 B4F800C0 		ldrh	ip, [r4]
 1274 004c 42EA0C02 		orr	r2, r2, ip
ARM GAS  /tmp/ccBVRzdb.s 			page 42


 1275 0050 2280     		strh	r2, [r4]	@ movhi
 1276 0052 ECE7     		b	.L48
 1277              	.L54:
 862:Core/Src/main.c ****         } else {
 1278              		.loc 1 862 45 discriminator 1 view .LVU414
 1279              	.LBE54:
 865:Core/Src/main.c ****         }
 866:Core/Src/main.c ****     }
 867:Core/Src/main.c **** }
 1280              		.loc 1 867 1 view .LVU415
 1281 0054 5DF8044B 		ldr	r4, [sp], #4
 1282              	.LCFI15:
 1283              		.cfi_restore 4
 1284              		.cfi_def_cfa_offset 0
 1285 0058 7047     		bx	lr
 1286              	.L53:
 1287              		.loc 1 867 1 view .LVU416
 1288 005a 7047     		bx	lr
 1289              	.L56:
 1290              		.align	2
 1291              	.L55:
 1292 005c 00000000 		.word	.LANCHOR1
 1293              		.cfi_endproc
 1294              	.LFE220:
 1296              		.section	.text.HALL_TO_DAC,"ax",%progbits
 1297              		.align	1
 1298              		.global	HALL_TO_DAC
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	HALL_TO_DAC:
 1305              	.LVL70:
 1306              	.LFB221:
 868:Core/Src/main.c **** 
 869:Core/Src/main.c **** /* HALL EFFECT TO DAC OUTPUT CONVERSION */
 870:Core/Src/main.c **** 
 871:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num) {
 1307              		.loc 1 871 79 is_stmt 1 view -0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 872:Core/Src/main.c ****     int channel_num = 12;
 1312              		.loc 1 872 5 view .LVU418
 873:Core/Src/main.c ****     
 874:Core/Src/main.c ****    for (int i = 0; i < 12; i++) {
 1313              		.loc 1 874 4 view .LVU419
 1314              	.LBB55:
 1315              		.loc 1 874 9 view .LVU420
 1316              		.loc 1 874 13 is_stmt 0 view .LVU421
 1317 0000 0023     		movs	r3, #0
 1318              	.LVL71:
 1319              		.loc 1 874 20 is_stmt 1 view .LVU422
 1320              		.loc 1 874 4 is_stmt 0 view .LVU423
 1321 0002 0B2B     		cmp	r3, #11
 1322 0004 00F33281 		bgt	.L263
ARM GAS  /tmp/ccBVRzdb.s 			page 43


 1323              	.LBE55:
 871:Core/Src/main.c ****     int channel_num = 12;
 1324              		.loc 1 871 79 view .LVU424
 1325 0008 10B4     		push	{r4}
 1326              	.LCFI16:
 1327              		.cfi_def_cfa_offset 4
 1328              		.cfi_offset 4, -4
 1329 000a 0BE0     		b	.L62
 1330              	.L59:
 1331              	.LBB56:
 875:Core/Src/main.c ****         if (i < 6) {
 876:Core/Src/main.c ****             if (adc1_val[i] > 600) {
 877:Core/Src/main.c ****                 channel_num = i;
 878:Core/Src/main.c ****                 break;
 879:Core/Src/main.c ****             }
 880:Core/Src/main.c ****         } else {
 881:Core/Src/main.c ****             if (adc2_val[i - 6] > 600) {
 1332              		.loc 1 881 13 is_stmt 1 view .LVU425
 1333              		.loc 1 881 25 is_stmt 0 view .LVU426
 1334 000c 03F1804C 		add	ip, r3, #1073741824
 1335 0010 ACF1060C 		sub	ip, ip, #6
 1336 0014 51F82C40 		ldr	r4, [r1, ip, lsl #2]
 1337              		.loc 1 881 16 view .LVU427
 1338 0018 B4F5167F 		cmp	r4, #600
 1339 001c 0BD8     		bhi	.L60
 1340              	.L61:
 874:Core/Src/main.c ****         if (i < 6) {
 1341              		.loc 1 874 28 is_stmt 1 discriminator 2 view .LVU428
 874:Core/Src/main.c ****         if (i < 6) {
 1342              		.loc 1 874 29 is_stmt 0 discriminator 2 view .LVU429
 1343 001e 0133     		adds	r3, r3, #1
 1344              	.LVL72:
 874:Core/Src/main.c ****         if (i < 6) {
 1345              		.loc 1 874 20 is_stmt 1 discriminator 2 view .LVU430
 874:Core/Src/main.c ****         if (i < 6) {
 1346              		.loc 1 874 4 is_stmt 0 discriminator 2 view .LVU431
 1347 0020 0B2B     		cmp	r3, #11
 1348 0022 07DC     		bgt	.L264
 1349              	.L62:
 875:Core/Src/main.c ****         if (i < 6) {
 1350              		.loc 1 875 9 is_stmt 1 view .LVU432
 875:Core/Src/main.c ****         if (i < 6) {
 1351              		.loc 1 875 12 is_stmt 0 view .LVU433
 1352 0024 052B     		cmp	r3, #5
 1353 0026 F1DC     		bgt	.L59
 876:Core/Src/main.c ****                 channel_num = i;
 1354              		.loc 1 876 13 is_stmt 1 view .LVU434
 876:Core/Src/main.c ****                 channel_num = i;
 1355              		.loc 1 876 25 is_stmt 0 view .LVU435
 1356 0028 50F82340 		ldr	r4, [r0, r3, lsl #2]
 876:Core/Src/main.c ****                 channel_num = i;
 1357              		.loc 1 876 16 view .LVU436
 1358 002c B4F5167F 		cmp	r4, #600
 1359 0030 F5D9     		bls	.L61
 1360 0032 00E0     		b	.L60
 1361              	.L264:
 876:Core/Src/main.c ****                 channel_num = i;
ARM GAS  /tmp/ccBVRzdb.s 			page 44


 1362              		.loc 1 876 16 view .LVU437
 1363              	.LBE56:
 872:Core/Src/main.c ****     
 1364              		.loc 1 872 9 view .LVU438
 1365 0034 0C23     		movs	r3, #12
 1366              	.LVL73:
 1367              	.L60:
 882:Core/Src/main.c ****                 channel_num = i;
 883:Core/Src/main.c ****                 break;
 884:Core/Src/main.c ****             }
 885:Core/Src/main.c ****         }
 886:Core/Src/main.c ****     }
 887:Core/Src/main.c ****     
 888:Core/Src/main.c ****     if (octave_num == 0) { // 0-50
 1368              		.loc 1 888 5 is_stmt 1 view .LVU439
 1369              		.loc 1 888 8 is_stmt 0 view .LVU440
 1370 0036 2ABB     		cbnz	r2, .L63
 889:Core/Src/main.c ****         if (channel_num == 0) {
 1371              		.loc 1 889 9 is_stmt 1 view .LVU441
 1372              		.loc 1 889 12 is_stmt 0 view .LVU442
 1373 0038 002B     		cmp	r3, #0
 1374 003a 00F09D80 		beq	.L68
 890:Core/Src/main.c ****             return 3;
 891:Core/Src/main.c ****         } else if (channel_num == 1) {
 1375              		.loc 1 891 16 is_stmt 1 view .LVU443
 1376              		.loc 1 891 19 is_stmt 0 view .LVU444
 1377 003e 012B     		cmp	r3, #1
 1378 0040 00F09E80 		beq	.L69
 892:Core/Src/main.c ****             return 7;
 893:Core/Src/main.c ****         } else if (channel_num == 2) {
 1379              		.loc 1 893 16 is_stmt 1 view .LVU445
 1380              		.loc 1 893 19 is_stmt 0 view .LVU446
 1381 0044 022B     		cmp	r3, #2
 1382 0046 00F09D80 		beq	.L70
 894:Core/Src/main.c ****             return 11;
 895:Core/Src/main.c ****         } else if (channel_num == 3) {
 1383              		.loc 1 895 16 is_stmt 1 view .LVU447
 1384              		.loc 1 895 19 is_stmt 0 view .LVU448
 1385 004a 032B     		cmp	r3, #3
 1386 004c 00F09C80 		beq	.L71
 896:Core/Src/main.c ****             return 15;
 897:Core/Src/main.c ****         } else if (channel_num == 4) {
 1387              		.loc 1 897 16 is_stmt 1 view .LVU449
 1388              		.loc 1 897 19 is_stmt 0 view .LVU450
 1389 0050 042B     		cmp	r3, #4
 1390 0052 00F09B80 		beq	.L72
 898:Core/Src/main.c ****             return 19;
 899:Core/Src/main.c ****         } else if (channel_num == 5) {
 1391              		.loc 1 899 16 is_stmt 1 view .LVU451
 1392              		.loc 1 899 19 is_stmt 0 view .LVU452
 1393 0056 052B     		cmp	r3, #5
 1394 0058 00F09A80 		beq	.L73
 900:Core/Src/main.c ****             return 23;
 901:Core/Src/main.c ****         } else if (channel_num == 6) {
 1395              		.loc 1 901 16 is_stmt 1 view .LVU453
 1396              		.loc 1 901 19 is_stmt 0 view .LVU454
 1397 005c 062B     		cmp	r3, #6
ARM GAS  /tmp/ccBVRzdb.s 			page 45


 1398 005e 00F09980 		beq	.L74
 902:Core/Src/main.c ****             return 27;
 903:Core/Src/main.c ****         } else if (channel_num == 7) {
 1399              		.loc 1 903 16 is_stmt 1 view .LVU455
 1400              		.loc 1 903 19 is_stmt 0 view .LVU456
 1401 0062 072B     		cmp	r3, #7
 1402 0064 00F09880 		beq	.L75
 904:Core/Src/main.c ****             return 31;
 905:Core/Src/main.c ****         } else if (channel_num == 8) {
 1403              		.loc 1 905 16 is_stmt 1 view .LVU457
 1404              		.loc 1 905 19 is_stmt 0 view .LVU458
 1405 0068 082B     		cmp	r3, #8
 1406 006a 00F09780 		beq	.L76
 906:Core/Src/main.c ****             return 35;
 907:Core/Src/main.c ****         } else if (channel_num == 9) {
 1407              		.loc 1 907 16 is_stmt 1 view .LVU459
 1408              		.loc 1 907 19 is_stmt 0 view .LVU460
 1409 006e 092B     		cmp	r3, #9
 1410 0070 00F09680 		beq	.L77
 908:Core/Src/main.c ****             return 39;
 909:Core/Src/main.c ****         } else if (channel_num == 10) {
 1411              		.loc 1 909 16 is_stmt 1 view .LVU461
 1412              		.loc 1 909 19 is_stmt 0 view .LVU462
 1413 0074 0A2B     		cmp	r3, #10
 1414 0076 00F09580 		beq	.L78
 910:Core/Src/main.c ****             return 43;
 911:Core/Src/main.c ****         } else if (channel_num == 11) {
 1415              		.loc 1 911 16 is_stmt 1 view .LVU463
 1416              		.loc 1 911 19 is_stmt 0 view .LVU464
 1417 007a 0B2B     		cmp	r3, #11
 1418 007c 00F09480 		beq	.L79
 912:Core/Src/main.c ****             return 47;
 913:Core/Src/main.c ****         }
 914:Core/Src/main.c ****     } else if (octave_num == 1) { // 51-101
 915:Core/Src/main.c ****         if (channel_num == 0) {
 916:Core/Src/main.c ****             return 54;
 917:Core/Src/main.c ****         } else if (channel_num == 1) {
 918:Core/Src/main.c ****             return 58;
 919:Core/Src/main.c ****         } else if (channel_num == 2) {
 920:Core/Src/main.c ****             return 62;
 921:Core/Src/main.c ****         } else if (channel_num == 3) {
 922:Core/Src/main.c ****             return 66;
 923:Core/Src/main.c ****         } else if (channel_num == 4) {
 924:Core/Src/main.c ****             return 70;
 925:Core/Src/main.c ****         } else if (channel_num == 5) {
 926:Core/Src/main.c ****             return 74;
 927:Core/Src/main.c ****         } else if (channel_num == 6) {
 928:Core/Src/main.c ****             return 78;
 929:Core/Src/main.c ****         } else if (channel_num == 7) {
 930:Core/Src/main.c ****             return 82;
 931:Core/Src/main.c ****         } else if (channel_num == 8) {
 932:Core/Src/main.c ****             return 86;
 933:Core/Src/main.c ****         } else if (channel_num == 9) {
 934:Core/Src/main.c ****             return 90;
 935:Core/Src/main.c ****         } else if (channel_num == 10) {
 936:Core/Src/main.c ****             return 94;
 937:Core/Src/main.c ****         } else if (channel_num == 11) {
ARM GAS  /tmp/ccBVRzdb.s 			page 46


 938:Core/Src/main.c ****             return 98;
 939:Core/Src/main.c ****         }
 940:Core/Src/main.c ****     } else if (octave_num == 2) { // 102-152
 941:Core/Src/main.c ****         if (channel_num == 0) {
 942:Core/Src/main.c ****             return 105;
 943:Core/Src/main.c ****         } else if (channel_num == 1) {
 944:Core/Src/main.c ****             return 109;
 945:Core/Src/main.c ****         } else if (channel_num == 2) {
 946:Core/Src/main.c ****             return 113;
 947:Core/Src/main.c ****         } else if (channel_num == 3) {
 948:Core/Src/main.c ****             return 117;
 949:Core/Src/main.c ****         } else if (channel_num == 4) {
 950:Core/Src/main.c ****             return 121;
 951:Core/Src/main.c ****         } else if (channel_num == 5) {
 952:Core/Src/main.c ****             return 125;
 953:Core/Src/main.c ****         } else if (channel_num == 6) {
 954:Core/Src/main.c ****             return 129;
 955:Core/Src/main.c ****         } else if (channel_num == 7) {
 956:Core/Src/main.c ****             return 133;
 957:Core/Src/main.c ****         } else if (channel_num == 8) {
 958:Core/Src/main.c ****             return 137;
 959:Core/Src/main.c ****         } else if (channel_num == 9) {
 960:Core/Src/main.c ****             return 141;
 961:Core/Src/main.c ****         } else if (channel_num == 10) {
 962:Core/Src/main.c ****             return 145;
 963:Core/Src/main.c ****         } else if (channel_num == 11) {
 964:Core/Src/main.c ****             return 149;
 965:Core/Src/main.c ****         }
 966:Core/Src/main.c ****     } else if (octave_num == 3) { // 153-203
 967:Core/Src/main.c ****         if (channel_num == 0) {
 968:Core/Src/main.c ****             return 156;
 969:Core/Src/main.c ****         } else if (channel_num == 1) {
 970:Core/Src/main.c ****             return 160;
 971:Core/Src/main.c ****         } else if (channel_num == 2) {
 972:Core/Src/main.c ****             return 164;
 973:Core/Src/main.c ****         } else if (channel_num == 3) {
 974:Core/Src/main.c ****             return 168;
 975:Core/Src/main.c ****         } else if (channel_num == 4) {
 976:Core/Src/main.c ****             return 172;
 977:Core/Src/main.c ****         } else if (channel_num == 5) {
 978:Core/Src/main.c ****             return 176;
 979:Core/Src/main.c ****         } else if (channel_num == 6) {
 980:Core/Src/main.c ****             return 180;
 981:Core/Src/main.c ****         } else if (channel_num == 7) {
 982:Core/Src/main.c ****             return 184;
 983:Core/Src/main.c ****         } else if (channel_num == 8) {
 984:Core/Src/main.c ****             return 188;
 985:Core/Src/main.c ****         } else if (channel_num == 9) {
 986:Core/Src/main.c ****             return 192;
 987:Core/Src/main.c ****         } else if (channel_num == 10) {
 988:Core/Src/main.c ****             return 196;
 989:Core/Src/main.c ****         } else if (channel_num == 11) {
 990:Core/Src/main.c ****             return 200;
 991:Core/Src/main.c ****         }
 992:Core/Src/main.c ****     } else { // 204-255
 993:Core/Src/main.c ****         if (channel_num == 0) {
 994:Core/Src/main.c ****             return 207;
ARM GAS  /tmp/ccBVRzdb.s 			page 47


 995:Core/Src/main.c ****         } else if (channel_num == 1) {
 996:Core/Src/main.c ****             return 211;
 997:Core/Src/main.c ****         } else if (channel_num == 2) {
 998:Core/Src/main.c ****             return 215;
 999:Core/Src/main.c ****         } else if (channel_num == 3) {
1000:Core/Src/main.c ****             return 219;
1001:Core/Src/main.c ****         } else if (channel_num == 4) {
1002:Core/Src/main.c ****             return 223;
1003:Core/Src/main.c ****         } else if (channel_num == 5) {
1004:Core/Src/main.c ****             return 227;
1005:Core/Src/main.c ****         } else if (channel_num == 6) {
1006:Core/Src/main.c ****             return 231;
1007:Core/Src/main.c ****         } else if (channel_num == 7) {
1008:Core/Src/main.c ****             return 235;
1009:Core/Src/main.c ****         } else if (channel_num == 8) {
1010:Core/Src/main.c ****             return 239;
1011:Core/Src/main.c ****         } else if (channel_num == 9) {
1012:Core/Src/main.c ****             return 243;
1013:Core/Src/main.c ****         } else if (channel_num == 10) {
1014:Core/Src/main.c ****             return 247;
1015:Core/Src/main.c ****         } else if (channel_num == 11) {
1016:Core/Src/main.c ****             return 251;
1017:Core/Src/main.c ****         }
1018:Core/Src/main.c ****     }
1019:Core/Src/main.c ****     return 0x0;
 1419              		.loc 1 1019 12 view .LVU465
 1420 0080 0020     		movs	r0, #0
 1421              	.LVL74:
 1422              		.loc 1 1019 12 view .LVU466
 1423 0082 7AE0     		b	.L64
 1424              	.LVL75:
 1425              	.L63:
 914:Core/Src/main.c ****         if (channel_num == 0) {
 1426              		.loc 1 914 12 is_stmt 1 view .LVU467
 914:Core/Src/main.c ****         if (channel_num == 0) {
 1427              		.loc 1 914 15 is_stmt 0 view .LVU468
 1428 0084 012A     		cmp	r2, #1
 1429 0086 29D0     		beq	.L265
 940:Core/Src/main.c ****         if (channel_num == 0) {
 1430              		.loc 1 940 12 is_stmt 1 view .LVU469
 940:Core/Src/main.c ****         if (channel_num == 0) {
 1431              		.loc 1 940 15 is_stmt 0 view .LVU470
 1432 0088 022A     		cmp	r2, #2
 1433 008a 41D0     		beq	.L266
 966:Core/Src/main.c ****         if (channel_num == 0) {
 1434              		.loc 1 966 12 is_stmt 1 view .LVU471
 966:Core/Src/main.c ****         if (channel_num == 0) {
 1435              		.loc 1 966 15 is_stmt 0 view .LVU472
 1436 008c 032A     		cmp	r2, #3
 1437 008e 59D0     		beq	.L267
 993:Core/Src/main.c ****             return 207;
 1438              		.loc 1 993 9 is_stmt 1 view .LVU473
 993:Core/Src/main.c ****             return 207;
 1439              		.loc 1 993 12 is_stmt 0 view .LVU474
 1440 0090 002B     		cmp	r3, #0
 1441 0092 00F0D380 		beq	.L116
 995:Core/Src/main.c ****             return 211;
ARM GAS  /tmp/ccBVRzdb.s 			page 48


 1442              		.loc 1 995 16 is_stmt 1 view .LVU475
 995:Core/Src/main.c ****             return 211;
 1443              		.loc 1 995 19 is_stmt 0 view .LVU476
 1444 0096 012B     		cmp	r3, #1
 1445 0098 00F0D280 		beq	.L117
 997:Core/Src/main.c ****             return 215;
 1446              		.loc 1 997 16 is_stmt 1 view .LVU477
 997:Core/Src/main.c ****             return 215;
 1447              		.loc 1 997 19 is_stmt 0 view .LVU478
 1448 009c 022B     		cmp	r3, #2
 1449 009e 00F0D180 		beq	.L118
 999:Core/Src/main.c ****             return 219;
 1450              		.loc 1 999 16 is_stmt 1 view .LVU479
 999:Core/Src/main.c ****             return 219;
 1451              		.loc 1 999 19 is_stmt 0 view .LVU480
 1452 00a2 032B     		cmp	r3, #3
 1453 00a4 00F0D080 		beq	.L119
1001:Core/Src/main.c ****             return 223;
 1454              		.loc 1 1001 16 is_stmt 1 view .LVU481
1001:Core/Src/main.c ****             return 223;
 1455              		.loc 1 1001 19 is_stmt 0 view .LVU482
 1456 00a8 042B     		cmp	r3, #4
 1457 00aa 00F0CF80 		beq	.L120
1003:Core/Src/main.c ****             return 227;
 1458              		.loc 1 1003 16 is_stmt 1 view .LVU483
1003:Core/Src/main.c ****             return 227;
 1459              		.loc 1 1003 19 is_stmt 0 view .LVU484
 1460 00ae 052B     		cmp	r3, #5
 1461 00b0 00F0CE80 		beq	.L121
1005:Core/Src/main.c ****             return 231;
 1462              		.loc 1 1005 16 is_stmt 1 view .LVU485
1005:Core/Src/main.c ****             return 231;
 1463              		.loc 1 1005 19 is_stmt 0 view .LVU486
 1464 00b4 062B     		cmp	r3, #6
 1465 00b6 00F0CD80 		beq	.L122
1007:Core/Src/main.c ****             return 235;
 1466              		.loc 1 1007 16 is_stmt 1 view .LVU487
1007:Core/Src/main.c ****             return 235;
 1467              		.loc 1 1007 19 is_stmt 0 view .LVU488
 1468 00ba 072B     		cmp	r3, #7
 1469 00bc 00F0CC80 		beq	.L123
1009:Core/Src/main.c ****             return 239;
 1470              		.loc 1 1009 16 is_stmt 1 view .LVU489
1009:Core/Src/main.c ****             return 239;
 1471              		.loc 1 1009 19 is_stmt 0 view .LVU490
 1472 00c0 082B     		cmp	r3, #8
 1473 00c2 00F0CB80 		beq	.L124
1011:Core/Src/main.c ****             return 243;
 1474              		.loc 1 1011 16 is_stmt 1 view .LVU491
1011:Core/Src/main.c ****             return 243;
 1475              		.loc 1 1011 19 is_stmt 0 view .LVU492
 1476 00c6 092B     		cmp	r3, #9
 1477 00c8 00F0CA80 		beq	.L125
1013:Core/Src/main.c ****             return 247;
 1478              		.loc 1 1013 16 is_stmt 1 view .LVU493
1013:Core/Src/main.c ****             return 247;
 1479              		.loc 1 1013 19 is_stmt 0 view .LVU494
ARM GAS  /tmp/ccBVRzdb.s 			page 49


 1480 00cc 0A2B     		cmp	r3, #10
 1481 00ce 00F0C980 		beq	.L126
1015:Core/Src/main.c ****             return 251;
 1482              		.loc 1 1015 16 is_stmt 1 view .LVU495
1015:Core/Src/main.c ****             return 251;
 1483              		.loc 1 1015 19 is_stmt 0 view .LVU496
 1484 00d2 0B2B     		cmp	r3, #11
 1485 00d4 00F0C880 		beq	.L127
 1486              		.loc 1 1019 12 view .LVU497
 1487 00d8 0020     		movs	r0, #0
 1488              	.LVL76:
 1489              		.loc 1 1019 12 view .LVU498
 1490 00da 4EE0     		b	.L64
 1491              	.LVL77:
 1492              	.L265:
 915:Core/Src/main.c ****             return 54;
 1493              		.loc 1 915 9 is_stmt 1 view .LVU499
 915:Core/Src/main.c ****             return 54;
 1494              		.loc 1 915 12 is_stmt 0 view .LVU500
 1495 00dc 002B     		cmp	r3, #0
 1496 00de 65D0     		beq	.L80
 917:Core/Src/main.c ****             return 58;
 1497              		.loc 1 917 16 is_stmt 1 view .LVU501
 917:Core/Src/main.c ****             return 58;
 1498              		.loc 1 917 19 is_stmt 0 view .LVU502
 1499 00e0 012B     		cmp	r3, #1
 1500 00e2 65D0     		beq	.L81
 919:Core/Src/main.c ****             return 62;
 1501              		.loc 1 919 16 is_stmt 1 view .LVU503
 919:Core/Src/main.c ****             return 62;
 1502              		.loc 1 919 19 is_stmt 0 view .LVU504
 1503 00e4 022B     		cmp	r3, #2
 1504 00e6 65D0     		beq	.L82
 921:Core/Src/main.c ****             return 66;
 1505              		.loc 1 921 16 is_stmt 1 view .LVU505
 921:Core/Src/main.c ****             return 66;
 1506              		.loc 1 921 19 is_stmt 0 view .LVU506
 1507 00e8 032B     		cmp	r3, #3
 1508 00ea 65D0     		beq	.L83
 923:Core/Src/main.c ****             return 70;
 1509              		.loc 1 923 16 is_stmt 1 view .LVU507
 923:Core/Src/main.c ****             return 70;
 1510              		.loc 1 923 19 is_stmt 0 view .LVU508
 1511 00ec 042B     		cmp	r3, #4
 1512 00ee 65D0     		beq	.L84
 925:Core/Src/main.c ****             return 74;
 1513              		.loc 1 925 16 is_stmt 1 view .LVU509
 925:Core/Src/main.c ****             return 74;
 1514              		.loc 1 925 19 is_stmt 0 view .LVU510
 1515 00f0 052B     		cmp	r3, #5
 1516 00f2 65D0     		beq	.L85
 927:Core/Src/main.c ****             return 78;
 1517              		.loc 1 927 16 is_stmt 1 view .LVU511
 927:Core/Src/main.c ****             return 78;
 1518              		.loc 1 927 19 is_stmt 0 view .LVU512
 1519 00f4 062B     		cmp	r3, #6
 1520 00f6 65D0     		beq	.L86
ARM GAS  /tmp/ccBVRzdb.s 			page 50


 929:Core/Src/main.c ****             return 82;
 1521              		.loc 1 929 16 is_stmt 1 view .LVU513
 929:Core/Src/main.c ****             return 82;
 1522              		.loc 1 929 19 is_stmt 0 view .LVU514
 1523 00f8 072B     		cmp	r3, #7
 1524 00fa 65D0     		beq	.L87
 931:Core/Src/main.c ****             return 86;
 1525              		.loc 1 931 16 is_stmt 1 view .LVU515
 931:Core/Src/main.c ****             return 86;
 1526              		.loc 1 931 19 is_stmt 0 view .LVU516
 1527 00fc 082B     		cmp	r3, #8
 1528 00fe 65D0     		beq	.L88
 933:Core/Src/main.c ****             return 90;
 1529              		.loc 1 933 16 is_stmt 1 view .LVU517
 933:Core/Src/main.c ****             return 90;
 1530              		.loc 1 933 19 is_stmt 0 view .LVU518
 1531 0100 092B     		cmp	r3, #9
 1532 0102 65D0     		beq	.L89
 935:Core/Src/main.c ****             return 94;
 1533              		.loc 1 935 16 is_stmt 1 view .LVU519
 935:Core/Src/main.c ****             return 94;
 1534              		.loc 1 935 19 is_stmt 0 view .LVU520
 1535 0104 0A2B     		cmp	r3, #10
 1536 0106 65D0     		beq	.L90
 937:Core/Src/main.c ****             return 98;
 1537              		.loc 1 937 16 is_stmt 1 view .LVU521
 937:Core/Src/main.c ****             return 98;
 1538              		.loc 1 937 19 is_stmt 0 view .LVU522
 1539 0108 0B2B     		cmp	r3, #11
 1540 010a 65D0     		beq	.L91
 1541              		.loc 1 1019 12 view .LVU523
 1542 010c 0020     		movs	r0, #0
 1543              	.LVL78:
 1544              		.loc 1 1019 12 view .LVU524
 1545 010e 34E0     		b	.L64
 1546              	.LVL79:
 1547              	.L266:
 941:Core/Src/main.c ****             return 105;
 1548              		.loc 1 941 9 is_stmt 1 view .LVU525
 941:Core/Src/main.c ****             return 105;
 1549              		.loc 1 941 12 is_stmt 0 view .LVU526
 1550 0110 002B     		cmp	r3, #0
 1551 0112 63D0     		beq	.L92
 943:Core/Src/main.c ****             return 109;
 1552              		.loc 1 943 16 is_stmt 1 view .LVU527
 943:Core/Src/main.c ****             return 109;
 1553              		.loc 1 943 19 is_stmt 0 view .LVU528
 1554 0114 012B     		cmp	r3, #1
 1555 0116 63D0     		beq	.L93
 945:Core/Src/main.c ****             return 113;
 1556              		.loc 1 945 16 is_stmt 1 view .LVU529
 945:Core/Src/main.c ****             return 113;
 1557              		.loc 1 945 19 is_stmt 0 view .LVU530
 1558 0118 022B     		cmp	r3, #2
 1559 011a 63D0     		beq	.L94
 947:Core/Src/main.c ****             return 117;
 1560              		.loc 1 947 16 is_stmt 1 view .LVU531
ARM GAS  /tmp/ccBVRzdb.s 			page 51


 947:Core/Src/main.c ****             return 117;
 1561              		.loc 1 947 19 is_stmt 0 view .LVU532
 1562 011c 032B     		cmp	r3, #3
 1563 011e 63D0     		beq	.L95
 949:Core/Src/main.c ****             return 121;
 1564              		.loc 1 949 16 is_stmt 1 view .LVU533
 949:Core/Src/main.c ****             return 121;
 1565              		.loc 1 949 19 is_stmt 0 view .LVU534
 1566 0120 042B     		cmp	r3, #4
 1567 0122 63D0     		beq	.L96
 951:Core/Src/main.c ****             return 125;
 1568              		.loc 1 951 16 is_stmt 1 view .LVU535
 951:Core/Src/main.c ****             return 125;
 1569              		.loc 1 951 19 is_stmt 0 view .LVU536
 1570 0124 052B     		cmp	r3, #5
 1571 0126 63D0     		beq	.L97
 953:Core/Src/main.c ****             return 129;
 1572              		.loc 1 953 16 is_stmt 1 view .LVU537
 953:Core/Src/main.c ****             return 129;
 1573              		.loc 1 953 19 is_stmt 0 view .LVU538
 1574 0128 062B     		cmp	r3, #6
 1575 012a 63D0     		beq	.L98
 955:Core/Src/main.c ****             return 133;
 1576              		.loc 1 955 16 is_stmt 1 view .LVU539
 955:Core/Src/main.c ****             return 133;
 1577              		.loc 1 955 19 is_stmt 0 view .LVU540
 1578 012c 072B     		cmp	r3, #7
 1579 012e 63D0     		beq	.L99
 957:Core/Src/main.c ****             return 137;
 1580              		.loc 1 957 16 is_stmt 1 view .LVU541
 957:Core/Src/main.c ****             return 137;
 1581              		.loc 1 957 19 is_stmt 0 view .LVU542
 1582 0130 082B     		cmp	r3, #8
 1583 0132 63D0     		beq	.L100
 959:Core/Src/main.c ****             return 141;
 1584              		.loc 1 959 16 is_stmt 1 view .LVU543
 959:Core/Src/main.c ****             return 141;
 1585              		.loc 1 959 19 is_stmt 0 view .LVU544
 1586 0134 092B     		cmp	r3, #9
 1587 0136 63D0     		beq	.L101
 961:Core/Src/main.c ****             return 145;
 1588              		.loc 1 961 16 is_stmt 1 view .LVU545
 961:Core/Src/main.c ****             return 145;
 1589              		.loc 1 961 19 is_stmt 0 view .LVU546
 1590 0138 0A2B     		cmp	r3, #10
 1591 013a 63D0     		beq	.L102
 963:Core/Src/main.c ****             return 149;
 1592              		.loc 1 963 16 is_stmt 1 view .LVU547
 963:Core/Src/main.c ****             return 149;
 1593              		.loc 1 963 19 is_stmt 0 view .LVU548
 1594 013c 0B2B     		cmp	r3, #11
 1595 013e 63D0     		beq	.L103
 1596              		.loc 1 1019 12 view .LVU549
 1597 0140 0020     		movs	r0, #0
 1598              	.LVL80:
 1599              		.loc 1 1019 12 view .LVU550
 1600 0142 1AE0     		b	.L64
ARM GAS  /tmp/ccBVRzdb.s 			page 52


 1601              	.LVL81:
 1602              	.L267:
 967:Core/Src/main.c ****             return 156;
 1603              		.loc 1 967 9 is_stmt 1 view .LVU551
 967:Core/Src/main.c ****             return 156;
 1604              		.loc 1 967 12 is_stmt 0 view .LVU552
 1605 0144 002B     		cmp	r3, #0
 1606 0146 61D0     		beq	.L104
 969:Core/Src/main.c ****             return 160;
 1607              		.loc 1 969 16 is_stmt 1 view .LVU553
 969:Core/Src/main.c ****             return 160;
 1608              		.loc 1 969 19 is_stmt 0 view .LVU554
 1609 0148 012B     		cmp	r3, #1
 1610 014a 61D0     		beq	.L105
 971:Core/Src/main.c ****             return 164;
 1611              		.loc 1 971 16 is_stmt 1 view .LVU555
 971:Core/Src/main.c ****             return 164;
 1612              		.loc 1 971 19 is_stmt 0 view .LVU556
 1613 014c 022B     		cmp	r3, #2
 1614 014e 61D0     		beq	.L106
 973:Core/Src/main.c ****             return 168;
 1615              		.loc 1 973 16 is_stmt 1 view .LVU557
 973:Core/Src/main.c ****             return 168;
 1616              		.loc 1 973 19 is_stmt 0 view .LVU558
 1617 0150 032B     		cmp	r3, #3
 1618 0152 61D0     		beq	.L107
 975:Core/Src/main.c ****             return 172;
 1619              		.loc 1 975 16 is_stmt 1 view .LVU559
 975:Core/Src/main.c ****             return 172;
 1620              		.loc 1 975 19 is_stmt 0 view .LVU560
 1621 0154 042B     		cmp	r3, #4
 1622 0156 61D0     		beq	.L108
 977:Core/Src/main.c ****             return 176;
 1623              		.loc 1 977 16 is_stmt 1 view .LVU561
 977:Core/Src/main.c ****             return 176;
 1624              		.loc 1 977 19 is_stmt 0 view .LVU562
 1625 0158 052B     		cmp	r3, #5
 1626 015a 61D0     		beq	.L109
 979:Core/Src/main.c ****             return 180;
 1627              		.loc 1 979 16 is_stmt 1 view .LVU563
 979:Core/Src/main.c ****             return 180;
 1628              		.loc 1 979 19 is_stmt 0 view .LVU564
 1629 015c 062B     		cmp	r3, #6
 1630 015e 61D0     		beq	.L110
 981:Core/Src/main.c ****             return 184;
 1631              		.loc 1 981 16 is_stmt 1 view .LVU565
 981:Core/Src/main.c ****             return 184;
 1632              		.loc 1 981 19 is_stmt 0 view .LVU566
 1633 0160 072B     		cmp	r3, #7
 1634 0162 61D0     		beq	.L111
 983:Core/Src/main.c ****             return 188;
 1635              		.loc 1 983 16 is_stmt 1 view .LVU567
 983:Core/Src/main.c ****             return 188;
 1636              		.loc 1 983 19 is_stmt 0 view .LVU568
 1637 0164 082B     		cmp	r3, #8
 1638 0166 61D0     		beq	.L112
 985:Core/Src/main.c ****             return 192;
ARM GAS  /tmp/ccBVRzdb.s 			page 53


 1639              		.loc 1 985 16 is_stmt 1 view .LVU569
 985:Core/Src/main.c ****             return 192;
 1640              		.loc 1 985 19 is_stmt 0 view .LVU570
 1641 0168 092B     		cmp	r3, #9
 1642 016a 61D0     		beq	.L113
 987:Core/Src/main.c ****             return 196;
 1643              		.loc 1 987 16 is_stmt 1 view .LVU571
 987:Core/Src/main.c ****             return 196;
 1644              		.loc 1 987 19 is_stmt 0 view .LVU572
 1645 016c 0A2B     		cmp	r3, #10
 1646 016e 61D0     		beq	.L114
 989:Core/Src/main.c ****             return 200;
 1647              		.loc 1 989 16 is_stmt 1 view .LVU573
 989:Core/Src/main.c ****             return 200;
 1648              		.loc 1 989 19 is_stmt 0 view .LVU574
 1649 0170 0B2B     		cmp	r3, #11
 1650 0172 61D0     		beq	.L115
 1651              		.loc 1 1019 12 view .LVU575
 1652 0174 0020     		movs	r0, #0
 1653              	.LVL82:
 1654              		.loc 1 1019 12 view .LVU576
 1655 0176 00E0     		b	.L64
 1656              	.LVL83:
 1657              	.L68:
 890:Core/Src/main.c ****         } else if (channel_num == 1) {
 1658              		.loc 1 890 20 view .LVU577
 1659 0178 0320     		movs	r0, #3
 1660              	.LVL84:
 1661              	.L64:
1020:Core/Src/main.c **** }
 1662              		.loc 1 1020 1 view .LVU578
 1663 017a 5DF8044B 		ldr	r4, [sp], #4
 1664              	.LCFI17:
 1665              		.cfi_remember_state
 1666              		.cfi_restore 4
 1667              		.cfi_def_cfa_offset 0
 1668 017e 7047     		bx	lr
 1669              	.LVL85:
 1670              	.L69:
 1671              	.LCFI18:
 1672              		.cfi_restore_state
 892:Core/Src/main.c ****         } else if (channel_num == 2) {
 1673              		.loc 1 892 20 view .LVU579
 1674 0180 0720     		movs	r0, #7
 1675              	.LVL86:
 892:Core/Src/main.c ****         } else if (channel_num == 2) {
 1676              		.loc 1 892 20 view .LVU580
 1677 0182 FAE7     		b	.L64
 1678              	.LVL87:
 1679              	.L70:
 894:Core/Src/main.c ****         } else if (channel_num == 3) {
 1680              		.loc 1 894 20 view .LVU581
 1681 0184 0B20     		movs	r0, #11
 1682              	.LVL88:
 894:Core/Src/main.c ****         } else if (channel_num == 3) {
 1683              		.loc 1 894 20 view .LVU582
 1684 0186 F8E7     		b	.L64
ARM GAS  /tmp/ccBVRzdb.s 			page 54


 1685              	.LVL89:
 1686              	.L71:
 896:Core/Src/main.c ****         } else if (channel_num == 4) {
 1687              		.loc 1 896 20 view .LVU583
 1688 0188 0F20     		movs	r0, #15
 1689              	.LVL90:
 896:Core/Src/main.c ****         } else if (channel_num == 4) {
 1690              		.loc 1 896 20 view .LVU584
 1691 018a F6E7     		b	.L64
 1692              	.LVL91:
 1693              	.L72:
 898:Core/Src/main.c ****         } else if (channel_num == 5) {
 1694              		.loc 1 898 20 view .LVU585
 1695 018c 1320     		movs	r0, #19
 1696              	.LVL92:
 898:Core/Src/main.c ****         } else if (channel_num == 5) {
 1697              		.loc 1 898 20 view .LVU586
 1698 018e F4E7     		b	.L64
 1699              	.LVL93:
 1700              	.L73:
 900:Core/Src/main.c ****         } else if (channel_num == 6) {
 1701              		.loc 1 900 20 view .LVU587
 1702 0190 1720     		movs	r0, #23
 1703              	.LVL94:
 900:Core/Src/main.c ****         } else if (channel_num == 6) {
 1704              		.loc 1 900 20 view .LVU588
 1705 0192 F2E7     		b	.L64
 1706              	.LVL95:
 1707              	.L74:
 902:Core/Src/main.c ****         } else if (channel_num == 7) {
 1708              		.loc 1 902 20 view .LVU589
 1709 0194 1B20     		movs	r0, #27
 1710              	.LVL96:
 902:Core/Src/main.c ****         } else if (channel_num == 7) {
 1711              		.loc 1 902 20 view .LVU590
 1712 0196 F0E7     		b	.L64
 1713              	.LVL97:
 1714              	.L75:
 904:Core/Src/main.c ****         } else if (channel_num == 8) {
 1715              		.loc 1 904 20 view .LVU591
 1716 0198 1F20     		movs	r0, #31
 1717              	.LVL98:
 904:Core/Src/main.c ****         } else if (channel_num == 8) {
 1718              		.loc 1 904 20 view .LVU592
 1719 019a EEE7     		b	.L64
 1720              	.LVL99:
 1721              	.L76:
 906:Core/Src/main.c ****         } else if (channel_num == 9) {
 1722              		.loc 1 906 20 view .LVU593
 1723 019c 2320     		movs	r0, #35
 1724              	.LVL100:
 906:Core/Src/main.c ****         } else if (channel_num == 9) {
 1725              		.loc 1 906 20 view .LVU594
 1726 019e ECE7     		b	.L64
 1727              	.LVL101:
 1728              	.L77:
 908:Core/Src/main.c ****         } else if (channel_num == 10) {
ARM GAS  /tmp/ccBVRzdb.s 			page 55


 1729              		.loc 1 908 20 view .LVU595
 1730 01a0 2720     		movs	r0, #39
 1731              	.LVL102:
 908:Core/Src/main.c ****         } else if (channel_num == 10) {
 1732              		.loc 1 908 20 view .LVU596
 1733 01a2 EAE7     		b	.L64
 1734              	.LVL103:
 1735              	.L78:
 910:Core/Src/main.c ****         } else if (channel_num == 11) {
 1736              		.loc 1 910 20 view .LVU597
 1737 01a4 2B20     		movs	r0, #43
 1738              	.LVL104:
 910:Core/Src/main.c ****         } else if (channel_num == 11) {
 1739              		.loc 1 910 20 view .LVU598
 1740 01a6 E8E7     		b	.L64
 1741              	.LVL105:
 1742              	.L79:
 912:Core/Src/main.c ****         }
 1743              		.loc 1 912 20 view .LVU599
 1744 01a8 2F20     		movs	r0, #47
 1745              	.LVL106:
 912:Core/Src/main.c ****         }
 1746              		.loc 1 912 20 view .LVU600
 1747 01aa E6E7     		b	.L64
 1748              	.LVL107:
 1749              	.L80:
 916:Core/Src/main.c ****         } else if (channel_num == 1) {
 1750              		.loc 1 916 20 view .LVU601
 1751 01ac 3620     		movs	r0, #54
 1752              	.LVL108:
 916:Core/Src/main.c ****         } else if (channel_num == 1) {
 1753              		.loc 1 916 20 view .LVU602
 1754 01ae E4E7     		b	.L64
 1755              	.LVL109:
 1756              	.L81:
 918:Core/Src/main.c ****         } else if (channel_num == 2) {
 1757              		.loc 1 918 20 view .LVU603
 1758 01b0 3A20     		movs	r0, #58
 1759              	.LVL110:
 918:Core/Src/main.c ****         } else if (channel_num == 2) {
 1760              		.loc 1 918 20 view .LVU604
 1761 01b2 E2E7     		b	.L64
 1762              	.LVL111:
 1763              	.L82:
 920:Core/Src/main.c ****         } else if (channel_num == 3) {
 1764              		.loc 1 920 20 view .LVU605
 1765 01b4 3E20     		movs	r0, #62
 1766              	.LVL112:
 920:Core/Src/main.c ****         } else if (channel_num == 3) {
 1767              		.loc 1 920 20 view .LVU606
 1768 01b6 E0E7     		b	.L64
 1769              	.LVL113:
 1770              	.L83:
 922:Core/Src/main.c ****         } else if (channel_num == 4) {
 1771              		.loc 1 922 20 view .LVU607
 1772 01b8 4220     		movs	r0, #66
 1773              	.LVL114:
ARM GAS  /tmp/ccBVRzdb.s 			page 56


 922:Core/Src/main.c ****         } else if (channel_num == 4) {
 1774              		.loc 1 922 20 view .LVU608
 1775 01ba DEE7     		b	.L64
 1776              	.LVL115:
 1777              	.L84:
 924:Core/Src/main.c ****         } else if (channel_num == 5) {
 1778              		.loc 1 924 20 view .LVU609
 1779 01bc 4620     		movs	r0, #70
 1780              	.LVL116:
 924:Core/Src/main.c ****         } else if (channel_num == 5) {
 1781              		.loc 1 924 20 view .LVU610
 1782 01be DCE7     		b	.L64
 1783              	.LVL117:
 1784              	.L85:
 926:Core/Src/main.c ****         } else if (channel_num == 6) {
 1785              		.loc 1 926 20 view .LVU611
 1786 01c0 4A20     		movs	r0, #74
 1787              	.LVL118:
 926:Core/Src/main.c ****         } else if (channel_num == 6) {
 1788              		.loc 1 926 20 view .LVU612
 1789 01c2 DAE7     		b	.L64
 1790              	.LVL119:
 1791              	.L86:
 928:Core/Src/main.c ****         } else if (channel_num == 7) {
 1792              		.loc 1 928 20 view .LVU613
 1793 01c4 4E20     		movs	r0, #78
 1794              	.LVL120:
 928:Core/Src/main.c ****         } else if (channel_num == 7) {
 1795              		.loc 1 928 20 view .LVU614
 1796 01c6 D8E7     		b	.L64
 1797              	.LVL121:
 1798              	.L87:
 930:Core/Src/main.c ****         } else if (channel_num == 8) {
 1799              		.loc 1 930 20 view .LVU615
 1800 01c8 5220     		movs	r0, #82
 1801              	.LVL122:
 930:Core/Src/main.c ****         } else if (channel_num == 8) {
 1802              		.loc 1 930 20 view .LVU616
 1803 01ca D6E7     		b	.L64
 1804              	.LVL123:
 1805              	.L88:
 932:Core/Src/main.c ****         } else if (channel_num == 9) {
 1806              		.loc 1 932 20 view .LVU617
 1807 01cc 5620     		movs	r0, #86
 1808              	.LVL124:
 932:Core/Src/main.c ****         } else if (channel_num == 9) {
 1809              		.loc 1 932 20 view .LVU618
 1810 01ce D4E7     		b	.L64
 1811              	.LVL125:
 1812              	.L89:
 934:Core/Src/main.c ****         } else if (channel_num == 10) {
 1813              		.loc 1 934 20 view .LVU619
 1814 01d0 5A20     		movs	r0, #90
 1815              	.LVL126:
 934:Core/Src/main.c ****         } else if (channel_num == 10) {
 1816              		.loc 1 934 20 view .LVU620
 1817 01d2 D2E7     		b	.L64
ARM GAS  /tmp/ccBVRzdb.s 			page 57


 1818              	.LVL127:
 1819              	.L90:
 936:Core/Src/main.c ****         } else if (channel_num == 11) {
 1820              		.loc 1 936 20 view .LVU621
 1821 01d4 5E20     		movs	r0, #94
 1822              	.LVL128:
 936:Core/Src/main.c ****         } else if (channel_num == 11) {
 1823              		.loc 1 936 20 view .LVU622
 1824 01d6 D0E7     		b	.L64
 1825              	.LVL129:
 1826              	.L91:
 938:Core/Src/main.c ****         }
 1827              		.loc 1 938 20 view .LVU623
 1828 01d8 6220     		movs	r0, #98
 1829              	.LVL130:
 938:Core/Src/main.c ****         }
 1830              		.loc 1 938 20 view .LVU624
 1831 01da CEE7     		b	.L64
 1832              	.LVL131:
 1833              	.L92:
 942:Core/Src/main.c ****         } else if (channel_num == 1) {
 1834              		.loc 1 942 20 view .LVU625
 1835 01dc 6920     		movs	r0, #105
 1836              	.LVL132:
 942:Core/Src/main.c ****         } else if (channel_num == 1) {
 1837              		.loc 1 942 20 view .LVU626
 1838 01de CCE7     		b	.L64
 1839              	.LVL133:
 1840              	.L93:
 944:Core/Src/main.c ****         } else if (channel_num == 2) {
 1841              		.loc 1 944 20 view .LVU627
 1842 01e0 6D20     		movs	r0, #109
 1843              	.LVL134:
 944:Core/Src/main.c ****         } else if (channel_num == 2) {
 1844              		.loc 1 944 20 view .LVU628
 1845 01e2 CAE7     		b	.L64
 1846              	.LVL135:
 1847              	.L94:
 946:Core/Src/main.c ****         } else if (channel_num == 3) {
 1848              		.loc 1 946 20 view .LVU629
 1849 01e4 7120     		movs	r0, #113
 1850              	.LVL136:
 946:Core/Src/main.c ****         } else if (channel_num == 3) {
 1851              		.loc 1 946 20 view .LVU630
 1852 01e6 C8E7     		b	.L64
 1853              	.LVL137:
 1854              	.L95:
 948:Core/Src/main.c ****         } else if (channel_num == 4) {
 1855              		.loc 1 948 20 view .LVU631
 1856 01e8 7520     		movs	r0, #117
 1857              	.LVL138:
 948:Core/Src/main.c ****         } else if (channel_num == 4) {
 1858              		.loc 1 948 20 view .LVU632
 1859 01ea C6E7     		b	.L64
 1860              	.LVL139:
 1861              	.L96:
 950:Core/Src/main.c ****         } else if (channel_num == 5) {
ARM GAS  /tmp/ccBVRzdb.s 			page 58


 1862              		.loc 1 950 20 view .LVU633
 1863 01ec 7920     		movs	r0, #121
 1864              	.LVL140:
 950:Core/Src/main.c ****         } else if (channel_num == 5) {
 1865              		.loc 1 950 20 view .LVU634
 1866 01ee C4E7     		b	.L64
 1867              	.LVL141:
 1868              	.L97:
 952:Core/Src/main.c ****         } else if (channel_num == 6) {
 1869              		.loc 1 952 20 view .LVU635
 1870 01f0 7D20     		movs	r0, #125
 1871              	.LVL142:
 952:Core/Src/main.c ****         } else if (channel_num == 6) {
 1872              		.loc 1 952 20 view .LVU636
 1873 01f2 C2E7     		b	.L64
 1874              	.LVL143:
 1875              	.L98:
 954:Core/Src/main.c ****         } else if (channel_num == 7) {
 1876              		.loc 1 954 20 view .LVU637
 1877 01f4 8120     		movs	r0, #129
 1878              	.LVL144:
 954:Core/Src/main.c ****         } else if (channel_num == 7) {
 1879              		.loc 1 954 20 view .LVU638
 1880 01f6 C0E7     		b	.L64
 1881              	.LVL145:
 1882              	.L99:
 956:Core/Src/main.c ****         } else if (channel_num == 8) {
 1883              		.loc 1 956 20 view .LVU639
 1884 01f8 8520     		movs	r0, #133
 1885              	.LVL146:
 956:Core/Src/main.c ****         } else if (channel_num == 8) {
 1886              		.loc 1 956 20 view .LVU640
 1887 01fa BEE7     		b	.L64
 1888              	.LVL147:
 1889              	.L100:
 958:Core/Src/main.c ****         } else if (channel_num == 9) {
 1890              		.loc 1 958 20 view .LVU641
 1891 01fc 8920     		movs	r0, #137
 1892              	.LVL148:
 958:Core/Src/main.c ****         } else if (channel_num == 9) {
 1893              		.loc 1 958 20 view .LVU642
 1894 01fe BCE7     		b	.L64
 1895              	.LVL149:
 1896              	.L101:
 960:Core/Src/main.c ****         } else if (channel_num == 10) {
 1897              		.loc 1 960 20 view .LVU643
 1898 0200 8D20     		movs	r0, #141
 1899              	.LVL150:
 960:Core/Src/main.c ****         } else if (channel_num == 10) {
 1900              		.loc 1 960 20 view .LVU644
 1901 0202 BAE7     		b	.L64
 1902              	.LVL151:
 1903              	.L102:
 962:Core/Src/main.c ****         } else if (channel_num == 11) {
 1904              		.loc 1 962 20 view .LVU645
 1905 0204 9120     		movs	r0, #145
 1906              	.LVL152:
ARM GAS  /tmp/ccBVRzdb.s 			page 59


 962:Core/Src/main.c ****         } else if (channel_num == 11) {
 1907              		.loc 1 962 20 view .LVU646
 1908 0206 B8E7     		b	.L64
 1909              	.LVL153:
 1910              	.L103:
 964:Core/Src/main.c ****         }
 1911              		.loc 1 964 20 view .LVU647
 1912 0208 9520     		movs	r0, #149
 1913              	.LVL154:
 964:Core/Src/main.c ****         }
 1914              		.loc 1 964 20 view .LVU648
 1915 020a B6E7     		b	.L64
 1916              	.LVL155:
 1917              	.L104:
 968:Core/Src/main.c ****         } else if (channel_num == 1) {
 1918              		.loc 1 968 20 view .LVU649
 1919 020c 9C20     		movs	r0, #156
 1920              	.LVL156:
 968:Core/Src/main.c ****         } else if (channel_num == 1) {
 1921              		.loc 1 968 20 view .LVU650
 1922 020e B4E7     		b	.L64
 1923              	.LVL157:
 1924              	.L105:
 970:Core/Src/main.c ****         } else if (channel_num == 2) {
 1925              		.loc 1 970 20 view .LVU651
 1926 0210 A020     		movs	r0, #160
 1927              	.LVL158:
 970:Core/Src/main.c ****         } else if (channel_num == 2) {
 1928              		.loc 1 970 20 view .LVU652
 1929 0212 B2E7     		b	.L64
 1930              	.LVL159:
 1931              	.L106:
 972:Core/Src/main.c ****         } else if (channel_num == 3) {
 1932              		.loc 1 972 20 view .LVU653
 1933 0214 A420     		movs	r0, #164
 1934              	.LVL160:
 972:Core/Src/main.c ****         } else if (channel_num == 3) {
 1935              		.loc 1 972 20 view .LVU654
 1936 0216 B0E7     		b	.L64
 1937              	.LVL161:
 1938              	.L107:
 974:Core/Src/main.c ****         } else if (channel_num == 4) {
 1939              		.loc 1 974 20 view .LVU655
 1940 0218 A820     		movs	r0, #168
 1941              	.LVL162:
 974:Core/Src/main.c ****         } else if (channel_num == 4) {
 1942              		.loc 1 974 20 view .LVU656
 1943 021a AEE7     		b	.L64
 1944              	.LVL163:
 1945              	.L108:
 976:Core/Src/main.c ****         } else if (channel_num == 5) {
 1946              		.loc 1 976 20 view .LVU657
 1947 021c AC20     		movs	r0, #172
 1948              	.LVL164:
 976:Core/Src/main.c ****         } else if (channel_num == 5) {
 1949              		.loc 1 976 20 view .LVU658
 1950 021e ACE7     		b	.L64
ARM GAS  /tmp/ccBVRzdb.s 			page 60


 1951              	.LVL165:
 1952              	.L109:
 978:Core/Src/main.c ****         } else if (channel_num == 6) {
 1953              		.loc 1 978 20 view .LVU659
 1954 0220 B020     		movs	r0, #176
 1955              	.LVL166:
 978:Core/Src/main.c ****         } else if (channel_num == 6) {
 1956              		.loc 1 978 20 view .LVU660
 1957 0222 AAE7     		b	.L64
 1958              	.LVL167:
 1959              	.L110:
 980:Core/Src/main.c ****         } else if (channel_num == 7) {
 1960              		.loc 1 980 20 view .LVU661
 1961 0224 B420     		movs	r0, #180
 1962              	.LVL168:
 980:Core/Src/main.c ****         } else if (channel_num == 7) {
 1963              		.loc 1 980 20 view .LVU662
 1964 0226 A8E7     		b	.L64
 1965              	.LVL169:
 1966              	.L111:
 982:Core/Src/main.c ****         } else if (channel_num == 8) {
 1967              		.loc 1 982 20 view .LVU663
 1968 0228 B820     		movs	r0, #184
 1969              	.LVL170:
 982:Core/Src/main.c ****         } else if (channel_num == 8) {
 1970              		.loc 1 982 20 view .LVU664
 1971 022a A6E7     		b	.L64
 1972              	.LVL171:
 1973              	.L112:
 984:Core/Src/main.c ****         } else if (channel_num == 9) {
 1974              		.loc 1 984 20 view .LVU665
 1975 022c BC20     		movs	r0, #188
 1976              	.LVL172:
 984:Core/Src/main.c ****         } else if (channel_num == 9) {
 1977              		.loc 1 984 20 view .LVU666
 1978 022e A4E7     		b	.L64
 1979              	.LVL173:
 1980              	.L113:
 986:Core/Src/main.c ****         } else if (channel_num == 10) {
 1981              		.loc 1 986 20 view .LVU667
 1982 0230 C020     		movs	r0, #192
 1983              	.LVL174:
 986:Core/Src/main.c ****         } else if (channel_num == 10) {
 1984              		.loc 1 986 20 view .LVU668
 1985 0232 A2E7     		b	.L64
 1986              	.LVL175:
 1987              	.L114:
 988:Core/Src/main.c ****         } else if (channel_num == 11) {
 1988              		.loc 1 988 20 view .LVU669
 1989 0234 C420     		movs	r0, #196
 1990              	.LVL176:
 988:Core/Src/main.c ****         } else if (channel_num == 11) {
 1991              		.loc 1 988 20 view .LVU670
 1992 0236 A0E7     		b	.L64
 1993              	.LVL177:
 1994              	.L115:
 990:Core/Src/main.c ****         }
ARM GAS  /tmp/ccBVRzdb.s 			page 61


 1995              		.loc 1 990 20 view .LVU671
 1996 0238 C820     		movs	r0, #200
 1997              	.LVL178:
 990:Core/Src/main.c ****         }
 1998              		.loc 1 990 20 view .LVU672
 1999 023a 9EE7     		b	.L64
 2000              	.LVL179:
 2001              	.L116:
 994:Core/Src/main.c ****         } else if (channel_num == 1) {
 2002              		.loc 1 994 20 view .LVU673
 2003 023c CF20     		movs	r0, #207
 2004              	.LVL180:
 994:Core/Src/main.c ****         } else if (channel_num == 1) {
 2005              		.loc 1 994 20 view .LVU674
 2006 023e 9CE7     		b	.L64
 2007              	.LVL181:
 2008              	.L117:
 996:Core/Src/main.c ****         } else if (channel_num == 2) {
 2009              		.loc 1 996 20 view .LVU675
 2010 0240 D320     		movs	r0, #211
 2011              	.LVL182:
 996:Core/Src/main.c ****         } else if (channel_num == 2) {
 2012              		.loc 1 996 20 view .LVU676
 2013 0242 9AE7     		b	.L64
 2014              	.LVL183:
 2015              	.L118:
 998:Core/Src/main.c ****         } else if (channel_num == 3) {
 2016              		.loc 1 998 20 view .LVU677
 2017 0244 D720     		movs	r0, #215
 2018              	.LVL184:
 998:Core/Src/main.c ****         } else if (channel_num == 3) {
 2019              		.loc 1 998 20 view .LVU678
 2020 0246 98E7     		b	.L64
 2021              	.LVL185:
 2022              	.L119:
1000:Core/Src/main.c ****         } else if (channel_num == 4) {
 2023              		.loc 1 1000 20 view .LVU679
 2024 0248 DB20     		movs	r0, #219
 2025              	.LVL186:
1000:Core/Src/main.c ****         } else if (channel_num == 4) {
 2026              		.loc 1 1000 20 view .LVU680
 2027 024a 96E7     		b	.L64
 2028              	.LVL187:
 2029              	.L120:
1002:Core/Src/main.c ****         } else if (channel_num == 5) {
 2030              		.loc 1 1002 20 view .LVU681
 2031 024c DF20     		movs	r0, #223
 2032              	.LVL188:
1002:Core/Src/main.c ****         } else if (channel_num == 5) {
 2033              		.loc 1 1002 20 view .LVU682
 2034 024e 94E7     		b	.L64
 2035              	.LVL189:
 2036              	.L121:
1004:Core/Src/main.c ****         } else if (channel_num == 6) {
 2037              		.loc 1 1004 20 view .LVU683
 2038 0250 E320     		movs	r0, #227
 2039              	.LVL190:
ARM GAS  /tmp/ccBVRzdb.s 			page 62


1004:Core/Src/main.c ****         } else if (channel_num == 6) {
 2040              		.loc 1 1004 20 view .LVU684
 2041 0252 92E7     		b	.L64
 2042              	.LVL191:
 2043              	.L122:
1006:Core/Src/main.c ****         } else if (channel_num == 7) {
 2044              		.loc 1 1006 20 view .LVU685
 2045 0254 E720     		movs	r0, #231
 2046              	.LVL192:
1006:Core/Src/main.c ****         } else if (channel_num == 7) {
 2047              		.loc 1 1006 20 view .LVU686
 2048 0256 90E7     		b	.L64
 2049              	.LVL193:
 2050              	.L123:
1008:Core/Src/main.c ****         } else if (channel_num == 8) {
 2051              		.loc 1 1008 20 view .LVU687
 2052 0258 EB20     		movs	r0, #235
 2053              	.LVL194:
1008:Core/Src/main.c ****         } else if (channel_num == 8) {
 2054              		.loc 1 1008 20 view .LVU688
 2055 025a 8EE7     		b	.L64
 2056              	.LVL195:
 2057              	.L124:
1010:Core/Src/main.c ****         } else if (channel_num == 9) {
 2058              		.loc 1 1010 20 view .LVU689
 2059 025c EF20     		movs	r0, #239
 2060              	.LVL196:
1010:Core/Src/main.c ****         } else if (channel_num == 9) {
 2061              		.loc 1 1010 20 view .LVU690
 2062 025e 8CE7     		b	.L64
 2063              	.LVL197:
 2064              	.L125:
1012:Core/Src/main.c ****         } else if (channel_num == 10) {
 2065              		.loc 1 1012 20 view .LVU691
 2066 0260 F320     		movs	r0, #243
 2067              	.LVL198:
1012:Core/Src/main.c ****         } else if (channel_num == 10) {
 2068              		.loc 1 1012 20 view .LVU692
 2069 0262 8AE7     		b	.L64
 2070              	.LVL199:
 2071              	.L126:
1014:Core/Src/main.c ****         } else if (channel_num == 11) {
 2072              		.loc 1 1014 20 view .LVU693
 2073 0264 F720     		movs	r0, #247
 2074              	.LVL200:
1014:Core/Src/main.c ****         } else if (channel_num == 11) {
 2075              		.loc 1 1014 20 view .LVU694
 2076 0266 88E7     		b	.L64
 2077              	.LVL201:
 2078              	.L127:
1016:Core/Src/main.c ****         }
 2079              		.loc 1 1016 20 view .LVU695
 2080 0268 FB20     		movs	r0, #251
 2081              	.LVL202:
1016:Core/Src/main.c ****         }
 2082              		.loc 1 1016 20 view .LVU696
 2083 026a 86E7     		b	.L64
ARM GAS  /tmp/ccBVRzdb.s 			page 63


 2084              	.LVL203:
 2085              	.L263:
 2086              	.LCFI19:
 2087              		.cfi_def_cfa_offset 0
 2088              		.cfi_restore 4
 872:Core/Src/main.c ****     
 2089              		.loc 1 872 9 view .LVU697
 2090 026c 0C23     		movs	r3, #12
 2091              	.LVL204:
 888:Core/Src/main.c ****         if (channel_num == 0) {
 2092              		.loc 1 888 5 is_stmt 1 view .LVU698
 888:Core/Src/main.c ****         if (channel_num == 0) {
 2093              		.loc 1 888 8 is_stmt 0 view .LVU699
 2094 026e 2ABB     		cbnz	r2, .L133
 889:Core/Src/main.c ****             return 3;
 2095              		.loc 1 889 9 is_stmt 1 view .LVU700
 889:Core/Src/main.c ****             return 3;
 2096              		.loc 1 889 12 is_stmt 0 view .LVU701
 2097 0270 002B     		cmp	r3, #0
 2098 0272 00F09D80 		beq	.L134
 891:Core/Src/main.c ****             return 7;
 2099              		.loc 1 891 16 is_stmt 1 view .LVU702
 891:Core/Src/main.c ****             return 7;
 2100              		.loc 1 891 19 is_stmt 0 view .LVU703
 2101 0276 012B     		cmp	r3, #1
 2102 0278 00F09C80 		beq	.L136
 893:Core/Src/main.c ****             return 11;
 2103              		.loc 1 893 16 is_stmt 1 view .LVU704
 893:Core/Src/main.c ****             return 11;
 2104              		.loc 1 893 19 is_stmt 0 view .LVU705
 2105 027c 022B     		cmp	r3, #2
 2106 027e 00F09B80 		beq	.L138
 895:Core/Src/main.c ****             return 15;
 2107              		.loc 1 895 16 is_stmt 1 view .LVU706
 895:Core/Src/main.c ****             return 15;
 2108              		.loc 1 895 19 is_stmt 0 view .LVU707
 2109 0282 032B     		cmp	r3, #3
 2110 0284 00F09A80 		beq	.L140
 897:Core/Src/main.c ****             return 19;
 2111              		.loc 1 897 16 is_stmt 1 view .LVU708
 897:Core/Src/main.c ****             return 19;
 2112              		.loc 1 897 19 is_stmt 0 view .LVU709
 2113 0288 042B     		cmp	r3, #4
 2114 028a 00F09980 		beq	.L142
 899:Core/Src/main.c ****             return 23;
 2115              		.loc 1 899 16 is_stmt 1 view .LVU710
 899:Core/Src/main.c ****             return 23;
 2116              		.loc 1 899 19 is_stmt 0 view .LVU711
 2117 028e 052B     		cmp	r3, #5
 2118 0290 00F09880 		beq	.L144
 901:Core/Src/main.c ****             return 27;
 2119              		.loc 1 901 16 is_stmt 1 view .LVU712
 901:Core/Src/main.c ****             return 27;
 2120              		.loc 1 901 19 is_stmt 0 view .LVU713
 2121 0294 062B     		cmp	r3, #6
 2122 0296 00F09780 		beq	.L146
 903:Core/Src/main.c ****             return 31;
ARM GAS  /tmp/ccBVRzdb.s 			page 64


 2123              		.loc 1 903 16 is_stmt 1 view .LVU714
 903:Core/Src/main.c ****             return 31;
 2124              		.loc 1 903 19 is_stmt 0 view .LVU715
 2125 029a 072B     		cmp	r3, #7
 2126 029c 00F09680 		beq	.L148
 905:Core/Src/main.c ****             return 35;
 2127              		.loc 1 905 16 is_stmt 1 view .LVU716
 905:Core/Src/main.c ****             return 35;
 2128              		.loc 1 905 19 is_stmt 0 view .LVU717
 2129 02a0 082B     		cmp	r3, #8
 2130 02a2 00F09580 		beq	.L150
 907:Core/Src/main.c ****             return 39;
 2131              		.loc 1 907 16 is_stmt 1 view .LVU718
 907:Core/Src/main.c ****             return 39;
 2132              		.loc 1 907 19 is_stmt 0 view .LVU719
 2133 02a6 092B     		cmp	r3, #9
 2134 02a8 00F09480 		beq	.L152
 909:Core/Src/main.c ****             return 43;
 2135              		.loc 1 909 16 is_stmt 1 view .LVU720
 909:Core/Src/main.c ****             return 43;
 2136              		.loc 1 909 19 is_stmt 0 view .LVU721
 2137 02ac 0A2B     		cmp	r3, #10
 2138 02ae 00F09380 		beq	.L154
 911:Core/Src/main.c ****             return 47;
 2139              		.loc 1 911 16 is_stmt 1 view .LVU722
 911:Core/Src/main.c ****             return 47;
 2140              		.loc 1 911 19 is_stmt 0 view .LVU723
 2141 02b2 0B2B     		cmp	r3, #11
 2142 02b4 00F09280 		beq	.L156
1019:Core/Src/main.c **** }
 2143              		.loc 1 1019 12 view .LVU724
 2144 02b8 0020     		movs	r0, #0
 2145              	.LVL205:
1019:Core/Src/main.c **** }
 2146              		.loc 1 1019 12 view .LVU725
 2147 02ba 7047     		bx	lr
 2148              	.LVL206:
 2149              	.L133:
 914:Core/Src/main.c ****         if (channel_num == 0) {
 2150              		.loc 1 914 12 is_stmt 1 view .LVU726
 914:Core/Src/main.c ****         if (channel_num == 0) {
 2151              		.loc 1 914 15 is_stmt 0 view .LVU727
 2152 02bc 012A     		cmp	r2, #1
 2153 02be 29D0     		beq	.L268
 940:Core/Src/main.c ****         if (channel_num == 0) {
 2154              		.loc 1 940 12 is_stmt 1 view .LVU728
 940:Core/Src/main.c ****         if (channel_num == 0) {
 2155              		.loc 1 940 15 is_stmt 0 view .LVU729
 2156 02c0 022A     		cmp	r2, #2
 2157 02c2 41D0     		beq	.L269
 966:Core/Src/main.c ****         if (channel_num == 0) {
 2158              		.loc 1 966 12 is_stmt 1 view .LVU730
 966:Core/Src/main.c ****         if (channel_num == 0) {
 2159              		.loc 1 966 15 is_stmt 0 view .LVU731
 2160 02c4 032A     		cmp	r2, #3
 2161 02c6 59D0     		beq	.L270
 993:Core/Src/main.c ****             return 207;
ARM GAS  /tmp/ccBVRzdb.s 			page 65


 2162              		.loc 1 993 9 is_stmt 1 view .LVU732
 993:Core/Src/main.c ****             return 207;
 2163              		.loc 1 993 12 is_stmt 0 view .LVU733
 2164 02c8 002B     		cmp	r3, #0
 2165 02ca 00F0D180 		beq	.L237
 995:Core/Src/main.c ****             return 211;
 2166              		.loc 1 995 16 is_stmt 1 view .LVU734
 995:Core/Src/main.c ****             return 211;
 2167              		.loc 1 995 19 is_stmt 0 view .LVU735
 2168 02ce 012B     		cmp	r3, #1
 2169 02d0 00F0D080 		beq	.L239
 997:Core/Src/main.c ****             return 215;
 2170              		.loc 1 997 16 is_stmt 1 view .LVU736
 997:Core/Src/main.c ****             return 215;
 2171              		.loc 1 997 19 is_stmt 0 view .LVU737
 2172 02d4 022B     		cmp	r3, #2
 2173 02d6 00F0CF80 		beq	.L241
 999:Core/Src/main.c ****             return 219;
 2174              		.loc 1 999 16 is_stmt 1 view .LVU738
 999:Core/Src/main.c ****             return 219;
 2175              		.loc 1 999 19 is_stmt 0 view .LVU739
 2176 02da 032B     		cmp	r3, #3
 2177 02dc 00F0CE80 		beq	.L243
1001:Core/Src/main.c ****             return 223;
 2178              		.loc 1 1001 16 is_stmt 1 view .LVU740
1001:Core/Src/main.c ****             return 223;
 2179              		.loc 1 1001 19 is_stmt 0 view .LVU741
 2180 02e0 042B     		cmp	r3, #4
 2181 02e2 00F0CD80 		beq	.L245
1003:Core/Src/main.c ****             return 227;
 2182              		.loc 1 1003 16 is_stmt 1 view .LVU742
1003:Core/Src/main.c ****             return 227;
 2183              		.loc 1 1003 19 is_stmt 0 view .LVU743
 2184 02e6 052B     		cmp	r3, #5
 2185 02e8 00F0CC80 		beq	.L247
1005:Core/Src/main.c ****             return 231;
 2186              		.loc 1 1005 16 is_stmt 1 view .LVU744
1005:Core/Src/main.c ****             return 231;
 2187              		.loc 1 1005 19 is_stmt 0 view .LVU745
 2188 02ec 062B     		cmp	r3, #6
 2189 02ee 00F0CB80 		beq	.L249
1007:Core/Src/main.c ****             return 235;
 2190              		.loc 1 1007 16 is_stmt 1 view .LVU746
1007:Core/Src/main.c ****             return 235;
 2191              		.loc 1 1007 19 is_stmt 0 view .LVU747
 2192 02f2 072B     		cmp	r3, #7
 2193 02f4 00F0CA80 		beq	.L251
1009:Core/Src/main.c ****             return 239;
 2194              		.loc 1 1009 16 is_stmt 1 view .LVU748
1009:Core/Src/main.c ****             return 239;
 2195              		.loc 1 1009 19 is_stmt 0 view .LVU749
 2196 02f8 082B     		cmp	r3, #8
 2197 02fa 00F0C980 		beq	.L253
1011:Core/Src/main.c ****             return 243;
 2198              		.loc 1 1011 16 is_stmt 1 view .LVU750
1011:Core/Src/main.c ****             return 243;
 2199              		.loc 1 1011 19 is_stmt 0 view .LVU751
ARM GAS  /tmp/ccBVRzdb.s 			page 66


 2200 02fe 092B     		cmp	r3, #9
 2201 0300 00F0C880 		beq	.L255
1013:Core/Src/main.c ****             return 247;
 2202              		.loc 1 1013 16 is_stmt 1 view .LVU752
1013:Core/Src/main.c ****             return 247;
 2203              		.loc 1 1013 19 is_stmt 0 view .LVU753
 2204 0304 0A2B     		cmp	r3, #10
 2205 0306 00F0C780 		beq	.L257
1015:Core/Src/main.c ****             return 251;
 2206              		.loc 1 1015 16 is_stmt 1 view .LVU754
1015:Core/Src/main.c ****             return 251;
 2207              		.loc 1 1015 19 is_stmt 0 view .LVU755
 2208 030a 0B2B     		cmp	r3, #11
 2209 030c 00F0C680 		beq	.L259
1019:Core/Src/main.c **** }
 2210              		.loc 1 1019 12 view .LVU756
 2211 0310 0020     		movs	r0, #0
 2212              	.LVL207:
1019:Core/Src/main.c **** }
 2213              		.loc 1 1019 12 view .LVU757
 2214 0312 7047     		bx	lr
 2215              	.LVL208:
 2216              	.L268:
 915:Core/Src/main.c ****             return 54;
 2217              		.loc 1 915 9 is_stmt 1 view .LVU758
 915:Core/Src/main.c ****             return 54;
 2218              		.loc 1 915 12 is_stmt 0 view .LVU759
 2219 0314 002B     		cmp	r3, #0
 2220 0316 63D0     		beq	.L161
 917:Core/Src/main.c ****             return 58;
 2221              		.loc 1 917 16 is_stmt 1 view .LVU760
 917:Core/Src/main.c ****             return 58;
 2222              		.loc 1 917 19 is_stmt 0 view .LVU761
 2223 0318 012B     		cmp	r3, #1
 2224 031a 63D0     		beq	.L163
 919:Core/Src/main.c ****             return 62;
 2225              		.loc 1 919 16 is_stmt 1 view .LVU762
 919:Core/Src/main.c ****             return 62;
 2226              		.loc 1 919 19 is_stmt 0 view .LVU763
 2227 031c 022B     		cmp	r3, #2
 2228 031e 63D0     		beq	.L165
 921:Core/Src/main.c ****             return 66;
 2229              		.loc 1 921 16 is_stmt 1 view .LVU764
 921:Core/Src/main.c ****             return 66;
 2230              		.loc 1 921 19 is_stmt 0 view .LVU765
 2231 0320 032B     		cmp	r3, #3
 2232 0322 63D0     		beq	.L167
 923:Core/Src/main.c ****             return 70;
 2233              		.loc 1 923 16 is_stmt 1 view .LVU766
 923:Core/Src/main.c ****             return 70;
 2234              		.loc 1 923 19 is_stmt 0 view .LVU767
 2235 0324 042B     		cmp	r3, #4
 2236 0326 63D0     		beq	.L169
 925:Core/Src/main.c ****             return 74;
 2237              		.loc 1 925 16 is_stmt 1 view .LVU768
 925:Core/Src/main.c ****             return 74;
 2238              		.loc 1 925 19 is_stmt 0 view .LVU769
ARM GAS  /tmp/ccBVRzdb.s 			page 67


 2239 0328 052B     		cmp	r3, #5
 2240 032a 63D0     		beq	.L171
 927:Core/Src/main.c ****             return 78;
 2241              		.loc 1 927 16 is_stmt 1 view .LVU770
 927:Core/Src/main.c ****             return 78;
 2242              		.loc 1 927 19 is_stmt 0 view .LVU771
 2243 032c 062B     		cmp	r3, #6
 2244 032e 63D0     		beq	.L173
 929:Core/Src/main.c ****             return 82;
 2245              		.loc 1 929 16 is_stmt 1 view .LVU772
 929:Core/Src/main.c ****             return 82;
 2246              		.loc 1 929 19 is_stmt 0 view .LVU773
 2247 0330 072B     		cmp	r3, #7
 2248 0332 63D0     		beq	.L175
 931:Core/Src/main.c ****             return 86;
 2249              		.loc 1 931 16 is_stmt 1 view .LVU774
 931:Core/Src/main.c ****             return 86;
 2250              		.loc 1 931 19 is_stmt 0 view .LVU775
 2251 0334 082B     		cmp	r3, #8
 2252 0336 63D0     		beq	.L177
 933:Core/Src/main.c ****             return 90;
 2253              		.loc 1 933 16 is_stmt 1 view .LVU776
 933:Core/Src/main.c ****             return 90;
 2254              		.loc 1 933 19 is_stmt 0 view .LVU777
 2255 0338 092B     		cmp	r3, #9
 2256 033a 63D0     		beq	.L179
 935:Core/Src/main.c ****             return 94;
 2257              		.loc 1 935 16 is_stmt 1 view .LVU778
 935:Core/Src/main.c ****             return 94;
 2258              		.loc 1 935 19 is_stmt 0 view .LVU779
 2259 033c 0A2B     		cmp	r3, #10
 2260 033e 63D0     		beq	.L181
 937:Core/Src/main.c ****             return 98;
 2261              		.loc 1 937 16 is_stmt 1 view .LVU780
 937:Core/Src/main.c ****             return 98;
 2262              		.loc 1 937 19 is_stmt 0 view .LVU781
 2263 0340 0B2B     		cmp	r3, #11
 2264 0342 63D0     		beq	.L183
1019:Core/Src/main.c **** }
 2265              		.loc 1 1019 12 view .LVU782
 2266 0344 0020     		movs	r0, #0
 2267              	.LVL209:
1019:Core/Src/main.c **** }
 2268              		.loc 1 1019 12 view .LVU783
 2269 0346 7047     		bx	lr
 2270              	.LVL210:
 2271              	.L269:
 941:Core/Src/main.c ****             return 105;
 2272              		.loc 1 941 9 is_stmt 1 view .LVU784
 941:Core/Src/main.c ****             return 105;
 2273              		.loc 1 941 12 is_stmt 0 view .LVU785
 2274 0348 002B     		cmp	r3, #0
 2275 034a 61D0     		beq	.L187
 943:Core/Src/main.c ****             return 109;
 2276              		.loc 1 943 16 is_stmt 1 view .LVU786
 943:Core/Src/main.c ****             return 109;
 2277              		.loc 1 943 19 is_stmt 0 view .LVU787
ARM GAS  /tmp/ccBVRzdb.s 			page 68


 2278 034c 012B     		cmp	r3, #1
 2279 034e 61D0     		beq	.L189
 945:Core/Src/main.c ****             return 113;
 2280              		.loc 1 945 16 is_stmt 1 view .LVU788
 945:Core/Src/main.c ****             return 113;
 2281              		.loc 1 945 19 is_stmt 0 view .LVU789
 2282 0350 022B     		cmp	r3, #2
 2283 0352 61D0     		beq	.L191
 947:Core/Src/main.c ****             return 117;
 2284              		.loc 1 947 16 is_stmt 1 view .LVU790
 947:Core/Src/main.c ****             return 117;
 2285              		.loc 1 947 19 is_stmt 0 view .LVU791
 2286 0354 032B     		cmp	r3, #3
 2287 0356 61D0     		beq	.L193
 949:Core/Src/main.c ****             return 121;
 2288              		.loc 1 949 16 is_stmt 1 view .LVU792
 949:Core/Src/main.c ****             return 121;
 2289              		.loc 1 949 19 is_stmt 0 view .LVU793
 2290 0358 042B     		cmp	r3, #4
 2291 035a 61D0     		beq	.L195
 951:Core/Src/main.c ****             return 125;
 2292              		.loc 1 951 16 is_stmt 1 view .LVU794
 951:Core/Src/main.c ****             return 125;
 2293              		.loc 1 951 19 is_stmt 0 view .LVU795
 2294 035c 052B     		cmp	r3, #5
 2295 035e 61D0     		beq	.L197
 953:Core/Src/main.c ****             return 129;
 2296              		.loc 1 953 16 is_stmt 1 view .LVU796
 953:Core/Src/main.c ****             return 129;
 2297              		.loc 1 953 19 is_stmt 0 view .LVU797
 2298 0360 062B     		cmp	r3, #6
 2299 0362 61D0     		beq	.L199
 955:Core/Src/main.c ****             return 133;
 2300              		.loc 1 955 16 is_stmt 1 view .LVU798
 955:Core/Src/main.c ****             return 133;
 2301              		.loc 1 955 19 is_stmt 0 view .LVU799
 2302 0364 072B     		cmp	r3, #7
 2303 0366 61D0     		beq	.L201
 957:Core/Src/main.c ****             return 137;
 2304              		.loc 1 957 16 is_stmt 1 view .LVU800
 957:Core/Src/main.c ****             return 137;
 2305              		.loc 1 957 19 is_stmt 0 view .LVU801
 2306 0368 082B     		cmp	r3, #8
 2307 036a 61D0     		beq	.L203
 959:Core/Src/main.c ****             return 141;
 2308              		.loc 1 959 16 is_stmt 1 view .LVU802
 959:Core/Src/main.c ****             return 141;
 2309              		.loc 1 959 19 is_stmt 0 view .LVU803
 2310 036c 092B     		cmp	r3, #9
 2311 036e 61D0     		beq	.L205
 961:Core/Src/main.c ****             return 145;
 2312              		.loc 1 961 16 is_stmt 1 view .LVU804
 961:Core/Src/main.c ****             return 145;
 2313              		.loc 1 961 19 is_stmt 0 view .LVU805
 2314 0370 0A2B     		cmp	r3, #10
 2315 0372 61D0     		beq	.L207
 963:Core/Src/main.c ****             return 149;
ARM GAS  /tmp/ccBVRzdb.s 			page 69


 2316              		.loc 1 963 16 is_stmt 1 view .LVU806
 963:Core/Src/main.c ****             return 149;
 2317              		.loc 1 963 19 is_stmt 0 view .LVU807
 2318 0374 0B2B     		cmp	r3, #11
 2319 0376 61D0     		beq	.L209
1019:Core/Src/main.c **** }
 2320              		.loc 1 1019 12 view .LVU808
 2321 0378 0020     		movs	r0, #0
 2322              	.LVL211:
1019:Core/Src/main.c **** }
 2323              		.loc 1 1019 12 view .LVU809
 2324 037a 7047     		bx	lr
 2325              	.LVL212:
 2326              	.L270:
 967:Core/Src/main.c ****             return 156;
 2327              		.loc 1 967 9 is_stmt 1 view .LVU810
 967:Core/Src/main.c ****             return 156;
 2328              		.loc 1 967 12 is_stmt 0 view .LVU811
 2329 037c 002B     		cmp	r3, #0
 2330 037e 5FD0     		beq	.L213
 969:Core/Src/main.c ****             return 160;
 2331              		.loc 1 969 16 is_stmt 1 view .LVU812
 969:Core/Src/main.c ****             return 160;
 2332              		.loc 1 969 19 is_stmt 0 view .LVU813
 2333 0380 012B     		cmp	r3, #1
 2334 0382 5FD0     		beq	.L215
 971:Core/Src/main.c ****             return 164;
 2335              		.loc 1 971 16 is_stmt 1 view .LVU814
 971:Core/Src/main.c ****             return 164;
 2336              		.loc 1 971 19 is_stmt 0 view .LVU815
 2337 0384 022B     		cmp	r3, #2
 2338 0386 5FD0     		beq	.L217
 973:Core/Src/main.c ****             return 168;
 2339              		.loc 1 973 16 is_stmt 1 view .LVU816
 973:Core/Src/main.c ****             return 168;
 2340              		.loc 1 973 19 is_stmt 0 view .LVU817
 2341 0388 032B     		cmp	r3, #3
 2342 038a 5FD0     		beq	.L219
 975:Core/Src/main.c ****             return 172;
 2343              		.loc 1 975 16 is_stmt 1 view .LVU818
 975:Core/Src/main.c ****             return 172;
 2344              		.loc 1 975 19 is_stmt 0 view .LVU819
 2345 038c 042B     		cmp	r3, #4
 2346 038e 5FD0     		beq	.L221
 977:Core/Src/main.c ****             return 176;
 2347              		.loc 1 977 16 is_stmt 1 view .LVU820
 977:Core/Src/main.c ****             return 176;
 2348              		.loc 1 977 19 is_stmt 0 view .LVU821
 2349 0390 052B     		cmp	r3, #5
 2350 0392 5FD0     		beq	.L223
 979:Core/Src/main.c ****             return 180;
 2351              		.loc 1 979 16 is_stmt 1 view .LVU822
 979:Core/Src/main.c ****             return 180;
 2352              		.loc 1 979 19 is_stmt 0 view .LVU823
 2353 0394 062B     		cmp	r3, #6
 2354 0396 5FD0     		beq	.L225
 981:Core/Src/main.c ****             return 184;
ARM GAS  /tmp/ccBVRzdb.s 			page 70


 2355              		.loc 1 981 16 is_stmt 1 view .LVU824
 981:Core/Src/main.c ****             return 184;
 2356              		.loc 1 981 19 is_stmt 0 view .LVU825
 2357 0398 072B     		cmp	r3, #7
 2358 039a 5FD0     		beq	.L227
 983:Core/Src/main.c ****             return 188;
 2359              		.loc 1 983 16 is_stmt 1 view .LVU826
 983:Core/Src/main.c ****             return 188;
 2360              		.loc 1 983 19 is_stmt 0 view .LVU827
 2361 039c 082B     		cmp	r3, #8
 2362 039e 5FD0     		beq	.L229
 985:Core/Src/main.c ****             return 192;
 2363              		.loc 1 985 16 is_stmt 1 view .LVU828
 985:Core/Src/main.c ****             return 192;
 2364              		.loc 1 985 19 is_stmt 0 view .LVU829
 2365 03a0 092B     		cmp	r3, #9
 2366 03a2 5FD0     		beq	.L231
 987:Core/Src/main.c ****             return 196;
 2367              		.loc 1 987 16 is_stmt 1 view .LVU830
 987:Core/Src/main.c ****             return 196;
 2368              		.loc 1 987 19 is_stmt 0 view .LVU831
 2369 03a4 0A2B     		cmp	r3, #10
 2370 03a6 5FD0     		beq	.L233
 989:Core/Src/main.c ****             return 200;
 2371              		.loc 1 989 16 is_stmt 1 view .LVU832
 989:Core/Src/main.c ****             return 200;
 2372              		.loc 1 989 19 is_stmt 0 view .LVU833
 2373 03a8 0B2B     		cmp	r3, #11
 2374 03aa 5FD0     		beq	.L235
1019:Core/Src/main.c **** }
 2375              		.loc 1 1019 12 view .LVU834
 2376 03ac 0020     		movs	r0, #0
 2377              	.LVL213:
1019:Core/Src/main.c **** }
 2378              		.loc 1 1019 12 view .LVU835
 2379 03ae 7047     		bx	lr
 2380              	.LVL214:
 2381              	.L134:
 890:Core/Src/main.c ****         } else if (channel_num == 1) {
 2382              		.loc 1 890 20 view .LVU836
 2383 03b0 0320     		movs	r0, #3
 2384              	.LVL215:
 890:Core/Src/main.c ****         } else if (channel_num == 1) {
 2385              		.loc 1 890 20 view .LVU837
 2386 03b2 7047     		bx	lr
 2387              	.LVL216:
 2388              	.L136:
 892:Core/Src/main.c ****         } else if (channel_num == 2) {
 2389              		.loc 1 892 20 view .LVU838
 2390 03b4 0720     		movs	r0, #7
 2391              	.LVL217:
 892:Core/Src/main.c ****         } else if (channel_num == 2) {
 2392              		.loc 1 892 20 view .LVU839
 2393 03b6 7047     		bx	lr
 2394              	.LVL218:
 2395              	.L138:
 894:Core/Src/main.c ****         } else if (channel_num == 3) {
ARM GAS  /tmp/ccBVRzdb.s 			page 71


 2396              		.loc 1 894 20 view .LVU840
 2397 03b8 0B20     		movs	r0, #11
 2398              	.LVL219:
 894:Core/Src/main.c ****         } else if (channel_num == 3) {
 2399              		.loc 1 894 20 view .LVU841
 2400 03ba 7047     		bx	lr
 2401              	.LVL220:
 2402              	.L140:
 896:Core/Src/main.c ****         } else if (channel_num == 4) {
 2403              		.loc 1 896 20 view .LVU842
 2404 03bc 0F20     		movs	r0, #15
 2405              	.LVL221:
 896:Core/Src/main.c ****         } else if (channel_num == 4) {
 2406              		.loc 1 896 20 view .LVU843
 2407 03be 7047     		bx	lr
 2408              	.LVL222:
 2409              	.L142:
 898:Core/Src/main.c ****         } else if (channel_num == 5) {
 2410              		.loc 1 898 20 view .LVU844
 2411 03c0 1320     		movs	r0, #19
 2412              	.LVL223:
 898:Core/Src/main.c ****         } else if (channel_num == 5) {
 2413              		.loc 1 898 20 view .LVU845
 2414 03c2 7047     		bx	lr
 2415              	.LVL224:
 2416              	.L144:
 900:Core/Src/main.c ****         } else if (channel_num == 6) {
 2417              		.loc 1 900 20 view .LVU846
 2418 03c4 1720     		movs	r0, #23
 2419              	.LVL225:
 900:Core/Src/main.c ****         } else if (channel_num == 6) {
 2420              		.loc 1 900 20 view .LVU847
 2421 03c6 7047     		bx	lr
 2422              	.LVL226:
 2423              	.L146:
 902:Core/Src/main.c ****         } else if (channel_num == 7) {
 2424              		.loc 1 902 20 view .LVU848
 2425 03c8 1B20     		movs	r0, #27
 2426              	.LVL227:
 902:Core/Src/main.c ****         } else if (channel_num == 7) {
 2427              		.loc 1 902 20 view .LVU849
 2428 03ca 7047     		bx	lr
 2429              	.LVL228:
 2430              	.L148:
 904:Core/Src/main.c ****         } else if (channel_num == 8) {
 2431              		.loc 1 904 20 view .LVU850
 2432 03cc 1F20     		movs	r0, #31
 2433              	.LVL229:
 904:Core/Src/main.c ****         } else if (channel_num == 8) {
 2434              		.loc 1 904 20 view .LVU851
 2435 03ce 7047     		bx	lr
 2436              	.LVL230:
 2437              	.L150:
 906:Core/Src/main.c ****         } else if (channel_num == 9) {
 2438              		.loc 1 906 20 view .LVU852
 2439 03d0 2320     		movs	r0, #35
 2440              	.LVL231:
ARM GAS  /tmp/ccBVRzdb.s 			page 72


 906:Core/Src/main.c ****         } else if (channel_num == 9) {
 2441              		.loc 1 906 20 view .LVU853
 2442 03d2 7047     		bx	lr
 2443              	.LVL232:
 2444              	.L152:
 908:Core/Src/main.c ****         } else if (channel_num == 10) {
 2445              		.loc 1 908 20 view .LVU854
 2446 03d4 2720     		movs	r0, #39
 2447              	.LVL233:
 908:Core/Src/main.c ****         } else if (channel_num == 10) {
 2448              		.loc 1 908 20 view .LVU855
 2449 03d6 7047     		bx	lr
 2450              	.LVL234:
 2451              	.L154:
 910:Core/Src/main.c ****         } else if (channel_num == 11) {
 2452              		.loc 1 910 20 view .LVU856
 2453 03d8 2B20     		movs	r0, #43
 2454              	.LVL235:
 910:Core/Src/main.c ****         } else if (channel_num == 11) {
 2455              		.loc 1 910 20 view .LVU857
 2456 03da 7047     		bx	lr
 2457              	.LVL236:
 2458              	.L156:
 912:Core/Src/main.c ****         }
 2459              		.loc 1 912 20 view .LVU858
 2460 03dc 2F20     		movs	r0, #47
 2461              	.LVL237:
 912:Core/Src/main.c ****         }
 2462              		.loc 1 912 20 view .LVU859
 2463 03de 7047     		bx	lr
 2464              	.LVL238:
 2465              	.L161:
 916:Core/Src/main.c ****         } else if (channel_num == 1) {
 2466              		.loc 1 916 20 view .LVU860
 2467 03e0 3620     		movs	r0, #54
 2468              	.LVL239:
 916:Core/Src/main.c ****         } else if (channel_num == 1) {
 2469              		.loc 1 916 20 view .LVU861
 2470 03e2 7047     		bx	lr
 2471              	.LVL240:
 2472              	.L163:
 918:Core/Src/main.c ****         } else if (channel_num == 2) {
 2473              		.loc 1 918 20 view .LVU862
 2474 03e4 3A20     		movs	r0, #58
 2475              	.LVL241:
 918:Core/Src/main.c ****         } else if (channel_num == 2) {
 2476              		.loc 1 918 20 view .LVU863
 2477 03e6 7047     		bx	lr
 2478              	.LVL242:
 2479              	.L165:
 920:Core/Src/main.c ****         } else if (channel_num == 3) {
 2480              		.loc 1 920 20 view .LVU864
 2481 03e8 3E20     		movs	r0, #62
 2482              	.LVL243:
 920:Core/Src/main.c ****         } else if (channel_num == 3) {
 2483              		.loc 1 920 20 view .LVU865
 2484 03ea 7047     		bx	lr
ARM GAS  /tmp/ccBVRzdb.s 			page 73


 2485              	.LVL244:
 2486              	.L167:
 922:Core/Src/main.c ****         } else if (channel_num == 4) {
 2487              		.loc 1 922 20 view .LVU866
 2488 03ec 4220     		movs	r0, #66
 2489              	.LVL245:
 922:Core/Src/main.c ****         } else if (channel_num == 4) {
 2490              		.loc 1 922 20 view .LVU867
 2491 03ee 7047     		bx	lr
 2492              	.LVL246:
 2493              	.L169:
 924:Core/Src/main.c ****         } else if (channel_num == 5) {
 2494              		.loc 1 924 20 view .LVU868
 2495 03f0 4620     		movs	r0, #70
 2496              	.LVL247:
 924:Core/Src/main.c ****         } else if (channel_num == 5) {
 2497              		.loc 1 924 20 view .LVU869
 2498 03f2 7047     		bx	lr
 2499              	.LVL248:
 2500              	.L171:
 926:Core/Src/main.c ****         } else if (channel_num == 6) {
 2501              		.loc 1 926 20 view .LVU870
 2502 03f4 4A20     		movs	r0, #74
 2503              	.LVL249:
 926:Core/Src/main.c ****         } else if (channel_num == 6) {
 2504              		.loc 1 926 20 view .LVU871
 2505 03f6 7047     		bx	lr
 2506              	.LVL250:
 2507              	.L173:
 928:Core/Src/main.c ****         } else if (channel_num == 7) {
 2508              		.loc 1 928 20 view .LVU872
 2509 03f8 4E20     		movs	r0, #78
 2510              	.LVL251:
 928:Core/Src/main.c ****         } else if (channel_num == 7) {
 2511              		.loc 1 928 20 view .LVU873
 2512 03fa 7047     		bx	lr
 2513              	.LVL252:
 2514              	.L175:
 930:Core/Src/main.c ****         } else if (channel_num == 8) {
 2515              		.loc 1 930 20 view .LVU874
 2516 03fc 5220     		movs	r0, #82
 2517              	.LVL253:
 930:Core/Src/main.c ****         } else if (channel_num == 8) {
 2518              		.loc 1 930 20 view .LVU875
 2519 03fe 7047     		bx	lr
 2520              	.LVL254:
 2521              	.L177:
 932:Core/Src/main.c ****         } else if (channel_num == 9) {
 2522              		.loc 1 932 20 view .LVU876
 2523 0400 5620     		movs	r0, #86
 2524              	.LVL255:
 932:Core/Src/main.c ****         } else if (channel_num == 9) {
 2525              		.loc 1 932 20 view .LVU877
 2526 0402 7047     		bx	lr
 2527              	.LVL256:
 2528              	.L179:
 934:Core/Src/main.c ****         } else if (channel_num == 10) {
ARM GAS  /tmp/ccBVRzdb.s 			page 74


 2529              		.loc 1 934 20 view .LVU878
 2530 0404 5A20     		movs	r0, #90
 2531              	.LVL257:
 934:Core/Src/main.c ****         } else if (channel_num == 10) {
 2532              		.loc 1 934 20 view .LVU879
 2533 0406 7047     		bx	lr
 2534              	.LVL258:
 2535              	.L181:
 936:Core/Src/main.c ****         } else if (channel_num == 11) {
 2536              		.loc 1 936 20 view .LVU880
 2537 0408 5E20     		movs	r0, #94
 2538              	.LVL259:
 936:Core/Src/main.c ****         } else if (channel_num == 11) {
 2539              		.loc 1 936 20 view .LVU881
 2540 040a 7047     		bx	lr
 2541              	.LVL260:
 2542              	.L183:
 938:Core/Src/main.c ****         }
 2543              		.loc 1 938 20 view .LVU882
 2544 040c 6220     		movs	r0, #98
 2545              	.LVL261:
 938:Core/Src/main.c ****         }
 2546              		.loc 1 938 20 view .LVU883
 2547 040e 7047     		bx	lr
 2548              	.LVL262:
 2549              	.L187:
 942:Core/Src/main.c ****         } else if (channel_num == 1) {
 2550              		.loc 1 942 20 view .LVU884
 2551 0410 6920     		movs	r0, #105
 2552              	.LVL263:
 942:Core/Src/main.c ****         } else if (channel_num == 1) {
 2553              		.loc 1 942 20 view .LVU885
 2554 0412 7047     		bx	lr
 2555              	.LVL264:
 2556              	.L189:
 944:Core/Src/main.c ****         } else if (channel_num == 2) {
 2557              		.loc 1 944 20 view .LVU886
 2558 0414 6D20     		movs	r0, #109
 2559              	.LVL265:
 944:Core/Src/main.c ****         } else if (channel_num == 2) {
 2560              		.loc 1 944 20 view .LVU887
 2561 0416 7047     		bx	lr
 2562              	.LVL266:
 2563              	.L191:
 946:Core/Src/main.c ****         } else if (channel_num == 3) {
 2564              		.loc 1 946 20 view .LVU888
 2565 0418 7120     		movs	r0, #113
 2566              	.LVL267:
 946:Core/Src/main.c ****         } else if (channel_num == 3) {
 2567              		.loc 1 946 20 view .LVU889
 2568 041a 7047     		bx	lr
 2569              	.LVL268:
 2570              	.L193:
 948:Core/Src/main.c ****         } else if (channel_num == 4) {
 2571              		.loc 1 948 20 view .LVU890
 2572 041c 7520     		movs	r0, #117
 2573              	.LVL269:
ARM GAS  /tmp/ccBVRzdb.s 			page 75


 948:Core/Src/main.c ****         } else if (channel_num == 4) {
 2574              		.loc 1 948 20 view .LVU891
 2575 041e 7047     		bx	lr
 2576              	.LVL270:
 2577              	.L195:
 950:Core/Src/main.c ****         } else if (channel_num == 5) {
 2578              		.loc 1 950 20 view .LVU892
 2579 0420 7920     		movs	r0, #121
 2580              	.LVL271:
 950:Core/Src/main.c ****         } else if (channel_num == 5) {
 2581              		.loc 1 950 20 view .LVU893
 2582 0422 7047     		bx	lr
 2583              	.LVL272:
 2584              	.L197:
 952:Core/Src/main.c ****         } else if (channel_num == 6) {
 2585              		.loc 1 952 20 view .LVU894
 2586 0424 7D20     		movs	r0, #125
 2587              	.LVL273:
 952:Core/Src/main.c ****         } else if (channel_num == 6) {
 2588              		.loc 1 952 20 view .LVU895
 2589 0426 7047     		bx	lr
 2590              	.LVL274:
 2591              	.L199:
 954:Core/Src/main.c ****         } else if (channel_num == 7) {
 2592              		.loc 1 954 20 view .LVU896
 2593 0428 8120     		movs	r0, #129
 2594              	.LVL275:
 954:Core/Src/main.c ****         } else if (channel_num == 7) {
 2595              		.loc 1 954 20 view .LVU897
 2596 042a 7047     		bx	lr
 2597              	.LVL276:
 2598              	.L201:
 956:Core/Src/main.c ****         } else if (channel_num == 8) {
 2599              		.loc 1 956 20 view .LVU898
 2600 042c 8520     		movs	r0, #133
 2601              	.LVL277:
 956:Core/Src/main.c ****         } else if (channel_num == 8) {
 2602              		.loc 1 956 20 view .LVU899
 2603 042e 7047     		bx	lr
 2604              	.LVL278:
 2605              	.L203:
 958:Core/Src/main.c ****         } else if (channel_num == 9) {
 2606              		.loc 1 958 20 view .LVU900
 2607 0430 8920     		movs	r0, #137
 2608              	.LVL279:
 958:Core/Src/main.c ****         } else if (channel_num == 9) {
 2609              		.loc 1 958 20 view .LVU901
 2610 0432 7047     		bx	lr
 2611              	.LVL280:
 2612              	.L205:
 960:Core/Src/main.c ****         } else if (channel_num == 10) {
 2613              		.loc 1 960 20 view .LVU902
 2614 0434 8D20     		movs	r0, #141
 2615              	.LVL281:
 960:Core/Src/main.c ****         } else if (channel_num == 10) {
 2616              		.loc 1 960 20 view .LVU903
 2617 0436 7047     		bx	lr
ARM GAS  /tmp/ccBVRzdb.s 			page 76


 2618              	.LVL282:
 2619              	.L207:
 962:Core/Src/main.c ****         } else if (channel_num == 11) {
 2620              		.loc 1 962 20 view .LVU904
 2621 0438 9120     		movs	r0, #145
 2622              	.LVL283:
 962:Core/Src/main.c ****         } else if (channel_num == 11) {
 2623              		.loc 1 962 20 view .LVU905
 2624 043a 7047     		bx	lr
 2625              	.LVL284:
 2626              	.L209:
 964:Core/Src/main.c ****         }
 2627              		.loc 1 964 20 view .LVU906
 2628 043c 9520     		movs	r0, #149
 2629              	.LVL285:
 964:Core/Src/main.c ****         }
 2630              		.loc 1 964 20 view .LVU907
 2631 043e 7047     		bx	lr
 2632              	.LVL286:
 2633              	.L213:
 968:Core/Src/main.c ****         } else if (channel_num == 1) {
 2634              		.loc 1 968 20 view .LVU908
 2635 0440 9C20     		movs	r0, #156
 2636              	.LVL287:
 968:Core/Src/main.c ****         } else if (channel_num == 1) {
 2637              		.loc 1 968 20 view .LVU909
 2638 0442 7047     		bx	lr
 2639              	.LVL288:
 2640              	.L215:
 970:Core/Src/main.c ****         } else if (channel_num == 2) {
 2641              		.loc 1 970 20 view .LVU910
 2642 0444 A020     		movs	r0, #160
 2643              	.LVL289:
 970:Core/Src/main.c ****         } else if (channel_num == 2) {
 2644              		.loc 1 970 20 view .LVU911
 2645 0446 7047     		bx	lr
 2646              	.LVL290:
 2647              	.L217:
 972:Core/Src/main.c ****         } else if (channel_num == 3) {
 2648              		.loc 1 972 20 view .LVU912
 2649 0448 A420     		movs	r0, #164
 2650              	.LVL291:
 972:Core/Src/main.c ****         } else if (channel_num == 3) {
 2651              		.loc 1 972 20 view .LVU913
 2652 044a 7047     		bx	lr
 2653              	.LVL292:
 2654              	.L219:
 974:Core/Src/main.c ****         } else if (channel_num == 4) {
 2655              		.loc 1 974 20 view .LVU914
 2656 044c A820     		movs	r0, #168
 2657              	.LVL293:
 974:Core/Src/main.c ****         } else if (channel_num == 4) {
 2658              		.loc 1 974 20 view .LVU915
 2659 044e 7047     		bx	lr
 2660              	.LVL294:
 2661              	.L221:
 976:Core/Src/main.c ****         } else if (channel_num == 5) {
ARM GAS  /tmp/ccBVRzdb.s 			page 77


 2662              		.loc 1 976 20 view .LVU916
 2663 0450 AC20     		movs	r0, #172
 2664              	.LVL295:
 976:Core/Src/main.c ****         } else if (channel_num == 5) {
 2665              		.loc 1 976 20 view .LVU917
 2666 0452 7047     		bx	lr
 2667              	.LVL296:
 2668              	.L223:
 978:Core/Src/main.c ****         } else if (channel_num == 6) {
 2669              		.loc 1 978 20 view .LVU918
 2670 0454 B020     		movs	r0, #176
 2671              	.LVL297:
 978:Core/Src/main.c ****         } else if (channel_num == 6) {
 2672              		.loc 1 978 20 view .LVU919
 2673 0456 7047     		bx	lr
 2674              	.LVL298:
 2675              	.L225:
 980:Core/Src/main.c ****         } else if (channel_num == 7) {
 2676              		.loc 1 980 20 view .LVU920
 2677 0458 B420     		movs	r0, #180
 2678              	.LVL299:
 980:Core/Src/main.c ****         } else if (channel_num == 7) {
 2679              		.loc 1 980 20 view .LVU921
 2680 045a 7047     		bx	lr
 2681              	.LVL300:
 2682              	.L227:
 982:Core/Src/main.c ****         } else if (channel_num == 8) {
 2683              		.loc 1 982 20 view .LVU922
 2684 045c B820     		movs	r0, #184
 2685              	.LVL301:
 982:Core/Src/main.c ****         } else if (channel_num == 8) {
 2686              		.loc 1 982 20 view .LVU923
 2687 045e 7047     		bx	lr
 2688              	.LVL302:
 2689              	.L229:
 984:Core/Src/main.c ****         } else if (channel_num == 9) {
 2690              		.loc 1 984 20 view .LVU924
 2691 0460 BC20     		movs	r0, #188
 2692              	.LVL303:
 984:Core/Src/main.c ****         } else if (channel_num == 9) {
 2693              		.loc 1 984 20 view .LVU925
 2694 0462 7047     		bx	lr
 2695              	.LVL304:
 2696              	.L231:
 986:Core/Src/main.c ****         } else if (channel_num == 10) {
 2697              		.loc 1 986 20 view .LVU926
 2698 0464 C020     		movs	r0, #192
 2699              	.LVL305:
 986:Core/Src/main.c ****         } else if (channel_num == 10) {
 2700              		.loc 1 986 20 view .LVU927
 2701 0466 7047     		bx	lr
 2702              	.LVL306:
 2703              	.L233:
 988:Core/Src/main.c ****         } else if (channel_num == 11) {
 2704              		.loc 1 988 20 view .LVU928
 2705 0468 C420     		movs	r0, #196
 2706              	.LVL307:
ARM GAS  /tmp/ccBVRzdb.s 			page 78


 988:Core/Src/main.c ****         } else if (channel_num == 11) {
 2707              		.loc 1 988 20 view .LVU929
 2708 046a 7047     		bx	lr
 2709              	.LVL308:
 2710              	.L235:
 990:Core/Src/main.c ****         }
 2711              		.loc 1 990 20 view .LVU930
 2712 046c C820     		movs	r0, #200
 2713              	.LVL309:
 990:Core/Src/main.c ****         }
 2714              		.loc 1 990 20 view .LVU931
 2715 046e 7047     		bx	lr
 2716              	.LVL310:
 2717              	.L237:
 994:Core/Src/main.c ****         } else if (channel_num == 1) {
 2718              		.loc 1 994 20 view .LVU932
 2719 0470 CF20     		movs	r0, #207
 2720              	.LVL311:
 994:Core/Src/main.c ****         } else if (channel_num == 1) {
 2721              		.loc 1 994 20 view .LVU933
 2722 0472 7047     		bx	lr
 2723              	.LVL312:
 2724              	.L239:
 996:Core/Src/main.c ****         } else if (channel_num == 2) {
 2725              		.loc 1 996 20 view .LVU934
 2726 0474 D320     		movs	r0, #211
 2727              	.LVL313:
 996:Core/Src/main.c ****         } else if (channel_num == 2) {
 2728              		.loc 1 996 20 view .LVU935
 2729 0476 7047     		bx	lr
 2730              	.LVL314:
 2731              	.L241:
 998:Core/Src/main.c ****         } else if (channel_num == 3) {
 2732              		.loc 1 998 20 view .LVU936
 2733 0478 D720     		movs	r0, #215
 2734              	.LVL315:
 998:Core/Src/main.c ****         } else if (channel_num == 3) {
 2735              		.loc 1 998 20 view .LVU937
 2736 047a 7047     		bx	lr
 2737              	.LVL316:
 2738              	.L243:
1000:Core/Src/main.c ****         } else if (channel_num == 4) {
 2739              		.loc 1 1000 20 view .LVU938
 2740 047c DB20     		movs	r0, #219
 2741              	.LVL317:
1000:Core/Src/main.c ****         } else if (channel_num == 4) {
 2742              		.loc 1 1000 20 view .LVU939
 2743 047e 7047     		bx	lr
 2744              	.LVL318:
 2745              	.L245:
1002:Core/Src/main.c ****         } else if (channel_num == 5) {
 2746              		.loc 1 1002 20 view .LVU940
 2747 0480 DF20     		movs	r0, #223
 2748              	.LVL319:
1002:Core/Src/main.c ****         } else if (channel_num == 5) {
 2749              		.loc 1 1002 20 view .LVU941
 2750 0482 7047     		bx	lr
ARM GAS  /tmp/ccBVRzdb.s 			page 79


 2751              	.LVL320:
 2752              	.L247:
1004:Core/Src/main.c ****         } else if (channel_num == 6) {
 2753              		.loc 1 1004 20 view .LVU942
 2754 0484 E320     		movs	r0, #227
 2755              	.LVL321:
1004:Core/Src/main.c ****         } else if (channel_num == 6) {
 2756              		.loc 1 1004 20 view .LVU943
 2757 0486 7047     		bx	lr
 2758              	.LVL322:
 2759              	.L249:
1006:Core/Src/main.c ****         } else if (channel_num == 7) {
 2760              		.loc 1 1006 20 view .LVU944
 2761 0488 E720     		movs	r0, #231
 2762              	.LVL323:
1006:Core/Src/main.c ****         } else if (channel_num == 7) {
 2763              		.loc 1 1006 20 view .LVU945
 2764 048a 7047     		bx	lr
 2765              	.LVL324:
 2766              	.L251:
1008:Core/Src/main.c ****         } else if (channel_num == 8) {
 2767              		.loc 1 1008 20 view .LVU946
 2768 048c EB20     		movs	r0, #235
 2769              	.LVL325:
1008:Core/Src/main.c ****         } else if (channel_num == 8) {
 2770              		.loc 1 1008 20 view .LVU947
 2771 048e 7047     		bx	lr
 2772              	.LVL326:
 2773              	.L253:
1010:Core/Src/main.c ****         } else if (channel_num == 9) {
 2774              		.loc 1 1010 20 view .LVU948
 2775 0490 EF20     		movs	r0, #239
 2776              	.LVL327:
1010:Core/Src/main.c ****         } else if (channel_num == 9) {
 2777              		.loc 1 1010 20 view .LVU949
 2778 0492 7047     		bx	lr
 2779              	.LVL328:
 2780              	.L255:
1012:Core/Src/main.c ****         } else if (channel_num == 10) {
 2781              		.loc 1 1012 20 view .LVU950
 2782 0494 F320     		movs	r0, #243
 2783              	.LVL329:
1012:Core/Src/main.c ****         } else if (channel_num == 10) {
 2784              		.loc 1 1012 20 view .LVU951
 2785 0496 7047     		bx	lr
 2786              	.LVL330:
 2787              	.L257:
1014:Core/Src/main.c ****         } else if (channel_num == 11) {
 2788              		.loc 1 1014 20 view .LVU952
 2789 0498 F720     		movs	r0, #247
 2790              	.LVL331:
1014:Core/Src/main.c ****         } else if (channel_num == 11) {
 2791              		.loc 1 1014 20 view .LVU953
 2792 049a 7047     		bx	lr
 2793              	.LVL332:
 2794              	.L259:
1016:Core/Src/main.c ****         }
ARM GAS  /tmp/ccBVRzdb.s 			page 80


 2795              		.loc 1 1016 20 view .LVU954
 2796 049c FB20     		movs	r0, #251
 2797              	.LVL333:
 2798              		.loc 1 1020 1 view .LVU955
 2799 049e 7047     		bx	lr
 2800              		.cfi_endproc
 2801              	.LFE221:
 2803              		.section	.text.DAC_TO_MIDI,"ax",%progbits
 2804              		.align	1
 2805              		.global	DAC_TO_MIDI
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2809              		.fpu fpv4-sp-d16
 2811              	DAC_TO_MIDI:
 2812              	.LVL334:
 2813              	.LFB222:
1021:Core/Src/main.c **** 
1022:Core/Src/main.c **** // need to also set variable for NOTE ON and NOTE OFF (elsewhere likely, global variable)
1023:Core/Src/main.c **** uint8_t DAC_TO_MIDI(uint8_t val){
 2814              		.loc 1 1023 33 is_stmt 1 view -0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 0
 2817              		@ frame_needed = 0, uses_anonymous_args = 0
 2818              		@ link register save eliminated.
1024:Core/Src/main.c ****   uint8_t midi = 0;
 2819              		.loc 1 1024 3 view .LVU957
1025:Core/Src/main.c ****   if((val > 0) && (val < 48)) midi = val/4;
 2820              		.loc 1 1025 3 view .LVU958
 2821              		.loc 1 1025 16 is_stmt 0 view .LVU959
 2822 0000 431E     		subs	r3, r0, #1
 2823 0002 DBB2     		uxtb	r3, r3
 2824              		.loc 1 1025 5 view .LVU960
 2825 0004 2E2B     		cmp	r3, #46
 2826 0006 01D8     		bhi	.L272
 2827              		.loc 1 1025 31 is_stmt 1 discriminator 1 view .LVU961
 2828              		.loc 1 1025 36 is_stmt 0 discriminator 1 view .LVU962
 2829 0008 8008     		lsrs	r0, r0, #2
 2830              	.LVL335:
 2831              		.loc 1 1025 36 discriminator 1 view .LVU963
 2832 000a 7047     		bx	lr
 2833              	.LVL336:
 2834              	.L272:
1026:Core/Src/main.c ****   else midi = (val/4) - 1;
 2835              		.loc 1 1026 8 is_stmt 1 view .LVU964
 2836              		.loc 1 1026 23 is_stmt 0 view .LVU965
 2837 000c 8008     		lsrs	r0, r0, #2
 2838              	.LVL337:
 2839              		.loc 1 1026 13 view .LVU966
 2840 000e 0138     		subs	r0, r0, #1
 2841 0010 C0B2     		uxtb	r0, r0
 2842              	.LVL338:
1027:Core/Src/main.c **** 
1028:Core/Src/main.c ****   return midi;
 2843              		.loc 1 1028 3 is_stmt 1 view .LVU967
1029:Core/Src/main.c **** }
 2844              		.loc 1 1029 1 is_stmt 0 view .LVU968
ARM GAS  /tmp/ccBVRzdb.s 			page 81


 2845 0012 7047     		bx	lr
 2846              		.cfi_endproc
 2847              	.LFE222:
 2849              		.section	.text.Error_Handler,"ax",%progbits
 2850              		.align	1
 2851              		.global	Error_Handler
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	Error_Handler:
 2858              	.LFB223:
1030:Core/Src/main.c **** 
1031:Core/Src/main.c **** 
1032:Core/Src/main.c **** /* USER CODE END 4 */
1033:Core/Src/main.c **** 
1034:Core/Src/main.c **** /**
1035:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1036:Core/Src/main.c ****   * @retval None
1037:Core/Src/main.c ****   */
1038:Core/Src/main.c **** void Error_Handler(void)
1039:Core/Src/main.c **** {
 2859              		.loc 1 1039 1 is_stmt 1 view -0
 2860              		.cfi_startproc
 2861              		@ Volatile: function does not return.
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              		@ link register save eliminated.
1040:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1041:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1042:Core/Src/main.c ****   __disable_irq();
 2865              		.loc 1 1042 3 view .LVU970
 2866              	.LBB57:
 2867              	.LBI57:
 2868              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccBVRzdb.s 			page 82


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccBVRzdb.s 			page 83


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/ccBVRzdb.s 			page 84


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/ccBVRzdb.s 			page 85


 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2869              		.loc 3 207 27 view .LVU971
 2870              	.LBB58:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2871              		.loc 3 209 3 view .LVU972
 2872              		.syntax unified
 2873              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2874 0000 72B6     		cpsid i
 2875              	@ 0 "" 2
 2876              		.thumb
 2877              		.syntax unified
 2878              	.L275:
 2879              	.LBE58:
 2880              	.LBE57:
1043:Core/Src/main.c ****   while (1)
 2881              		.loc 1 1043 3 discriminator 1 view .LVU973
1044:Core/Src/main.c ****   {
1045:Core/Src/main.c ****   }
 2882              		.loc 1 1045 3 discriminator 1 view .LVU974
1043:Core/Src/main.c ****   while (1)
 2883              		.loc 1 1043 9 discriminator 1 view .LVU975
 2884 0002 FEE7     		b	.L275
 2885              		.cfi_endproc
 2886              	.LFE223:
 2888              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2889              		.align	1
 2890              		.syntax unified
 2891              		.thumb
 2892              		.thumb_func
 2893              		.fpu fpv4-sp-d16
 2895              	MX_SPI1_Init:
 2896              	.LFB209:
 403:Core/Src/main.c **** 
 2897              		.loc 1 403 1 view -0
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 0
 2900              		@ frame_needed = 0, uses_anonymous_args = 0
 2901 0000 08B5     		push	{r3, lr}
 2902              	.LCFI20:
 2903              		.cfi_def_cfa_offset 8
 2904              		.cfi_offset 3, -8
 2905              		.cfi_offset 14, -4
 413:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  /tmp/ccBVRzdb.s 			page 86


 2906              		.loc 1 413 3 view .LVU977
 413:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2907              		.loc 1 413 18 is_stmt 0 view .LVU978
 2908 0002 0F48     		ldr	r0, .L280
 2909 0004 0F4B     		ldr	r3, .L280+4
 2910 0006 0360     		str	r3, [r0]
 414:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2911              		.loc 1 414 3 is_stmt 1 view .LVU979
 414:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2912              		.loc 1 414 19 is_stmt 0 view .LVU980
 2913 0008 4FF48273 		mov	r3, #260
 2914 000c 4360     		str	r3, [r0, #4]
 415:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2915              		.loc 1 415 3 is_stmt 1 view .LVU981
 415:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2916              		.loc 1 415 24 is_stmt 0 view .LVU982
 2917 000e 0023     		movs	r3, #0
 2918 0010 8360     		str	r3, [r0, #8]
 416:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2919              		.loc 1 416 3 is_stmt 1 view .LVU983
 416:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2920              		.loc 1 416 23 is_stmt 0 view .LVU984
 2921 0012 4FF4E062 		mov	r2, #1792
 2922 0016 C260     		str	r2, [r0, #12]
 417:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2923              		.loc 1 417 3 is_stmt 1 view .LVU985
 417:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2924              		.loc 1 417 26 is_stmt 0 view .LVU986
 2925 0018 0361     		str	r3, [r0, #16]
 418:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2926              		.loc 1 418 3 is_stmt 1 view .LVU987
 418:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2927              		.loc 1 418 23 is_stmt 0 view .LVU988
 2928 001a 4361     		str	r3, [r0, #20]
 419:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 2929              		.loc 1 419 3 is_stmt 1 view .LVU989
 419:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 2930              		.loc 1 419 18 is_stmt 0 view .LVU990
 2931 001c 4FF40072 		mov	r2, #512
 2932 0020 8261     		str	r2, [r0, #24]
 420:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2933              		.loc 1 420 3 is_stmt 1 view .LVU991
 420:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2934              		.loc 1 420 32 is_stmt 0 view .LVU992
 2935 0022 2022     		movs	r2, #32
 2936 0024 C261     		str	r2, [r0, #28]
 421:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2937              		.loc 1 421 3 is_stmt 1 view .LVU993
 421:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2938              		.loc 1 421 23 is_stmt 0 view .LVU994
 2939 0026 0362     		str	r3, [r0, #32]
 422:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2940              		.loc 1 422 3 is_stmt 1 view .LVU995
 422:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2941              		.loc 1 422 21 is_stmt 0 view .LVU996
 2942 0028 4362     		str	r3, [r0, #36]
 423:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
ARM GAS  /tmp/ccBVRzdb.s 			page 87


 2943              		.loc 1 423 3 is_stmt 1 view .LVU997
 423:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2944              		.loc 1 423 29 is_stmt 0 view .LVU998
 2945 002a 8362     		str	r3, [r0, #40]
 424:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2946              		.loc 1 424 3 is_stmt 1 view .LVU999
 424:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2947              		.loc 1 424 28 is_stmt 0 view .LVU1000
 2948 002c 0722     		movs	r2, #7
 2949 002e C262     		str	r2, [r0, #44]
 425:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2950              		.loc 1 425 3 is_stmt 1 view .LVU1001
 425:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2951              		.loc 1 425 24 is_stmt 0 view .LVU1002
 2952 0030 0363     		str	r3, [r0, #48]
 426:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2953              		.loc 1 426 3 is_stmt 1 view .LVU1003
 426:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2954              		.loc 1 426 23 is_stmt 0 view .LVU1004
 2955 0032 4363     		str	r3, [r0, #52]
 427:Core/Src/main.c ****   {
 2956              		.loc 1 427 3 is_stmt 1 view .LVU1005
 427:Core/Src/main.c ****   {
 2957              		.loc 1 427 7 is_stmt 0 view .LVU1006
 2958 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2959              	.LVL339:
 427:Core/Src/main.c ****   {
 2960              		.loc 1 427 6 view .LVU1007
 2961 0038 00B9     		cbnz	r0, .L279
 435:Core/Src/main.c **** 
 2962              		.loc 1 435 1 view .LVU1008
 2963 003a 08BD     		pop	{r3, pc}
 2964              	.L279:
 429:Core/Src/main.c ****   }
 2965              		.loc 1 429 5 is_stmt 1 view .LVU1009
 2966 003c FFF7FEFF 		bl	Error_Handler
 2967              	.LVL340:
 2968              	.L281:
 2969              		.align	2
 2970              	.L280:
 2971 0040 00000000 		.word	.LANCHOR4
 2972 0044 00300140 		.word	1073819648
 2973              		.cfi_endproc
 2974              	.LFE209:
 2976              		.section	.text.MX_I2C1_Init,"ax",%progbits
 2977              		.align	1
 2978              		.syntax unified
 2979              		.thumb
 2980              		.thumb_func
 2981              		.fpu fpv4-sp-d16
 2983              	MX_I2C1_Init:
 2984              	.LFB208:
 355:Core/Src/main.c **** 
 2985              		.loc 1 355 1 view -0
 2986              		.cfi_startproc
 2987              		@ args = 0, pretend = 0, frame = 0
 2988              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccBVRzdb.s 			page 88


 2989 0000 08B5     		push	{r3, lr}
 2990              	.LCFI21:
 2991              		.cfi_def_cfa_offset 8
 2992              		.cfi_offset 3, -8
 2993              		.cfi_offset 14, -4
 364:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 2994              		.loc 1 364 3 view .LVU1011
 364:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 2995              		.loc 1 364 18 is_stmt 0 view .LVU1012
 2996 0002 1148     		ldr	r0, .L290
 2997 0004 114B     		ldr	r3, .L290+4
 2998 0006 0360     		str	r3, [r0]
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 2999              		.loc 1 365 3 is_stmt 1 view .LVU1013
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 3000              		.loc 1 365 21 is_stmt 0 view .LVU1014
 3001 0008 114B     		ldr	r3, .L290+8
 3002 000a 4360     		str	r3, [r0, #4]
 366:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 3003              		.loc 1 366 3 is_stmt 1 view .LVU1015
 366:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 3004              		.loc 1 366 26 is_stmt 0 view .LVU1016
 3005 000c 0023     		movs	r3, #0
 3006 000e 8360     		str	r3, [r0, #8]
 367:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 3007              		.loc 1 367 3 is_stmt 1 view .LVU1017
 367:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 3008              		.loc 1 367 29 is_stmt 0 view .LVU1018
 3009 0010 0122     		movs	r2, #1
 3010 0012 C260     		str	r2, [r0, #12]
 368:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 3011              		.loc 1 368 3 is_stmt 1 view .LVU1019
 368:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 3012              		.loc 1 368 30 is_stmt 0 view .LVU1020
 3013 0014 0361     		str	r3, [r0, #16]
 369:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 3014              		.loc 1 369 3 is_stmt 1 view .LVU1021
 369:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 3015              		.loc 1 369 26 is_stmt 0 view .LVU1022
 3016 0016 4361     		str	r3, [r0, #20]
 370:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 3017              		.loc 1 370 3 is_stmt 1 view .LVU1023
 370:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 3018              		.loc 1 370 31 is_stmt 0 view .LVU1024
 3019 0018 8361     		str	r3, [r0, #24]
 371:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 3020              		.loc 1 371 3 is_stmt 1 view .LVU1025
 371:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 3021              		.loc 1 371 30 is_stmt 0 view .LVU1026
 3022 001a C361     		str	r3, [r0, #28]
 372:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 3023              		.loc 1 372 3 is_stmt 1 view .LVU1027
 372:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 3024              		.loc 1 372 28 is_stmt 0 view .LVU1028
 3025 001c 0362     		str	r3, [r0, #32]
 373:Core/Src/main.c ****   {
 3026              		.loc 1 373 3 is_stmt 1 view .LVU1029
ARM GAS  /tmp/ccBVRzdb.s 			page 89


 373:Core/Src/main.c ****   {
 3027              		.loc 1 373 7 is_stmt 0 view .LVU1030
 3028 001e FFF7FEFF 		bl	HAL_I2C_Init
 3029              	.LVL341:
 373:Core/Src/main.c ****   {
 3030              		.loc 1 373 6 view .LVU1031
 3031 0022 50B9     		cbnz	r0, .L287
 380:Core/Src/main.c ****   {
 3032              		.loc 1 380 3 is_stmt 1 view .LVU1032
 380:Core/Src/main.c ****   {
 3033              		.loc 1 380 7 is_stmt 0 view .LVU1033
 3034 0024 0021     		movs	r1, #0
 3035 0026 0848     		ldr	r0, .L290
 3036 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 3037              	.LVL342:
 380:Core/Src/main.c ****   {
 3038              		.loc 1 380 6 view .LVU1034
 3039 002c 38B9     		cbnz	r0, .L288
 387:Core/Src/main.c ****   {
 3040              		.loc 1 387 3 is_stmt 1 view .LVU1035
 387:Core/Src/main.c ****   {
 3041              		.loc 1 387 7 is_stmt 0 view .LVU1036
 3042 002e 0021     		movs	r1, #0
 3043 0030 0548     		ldr	r0, .L290
 3044 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 3045              	.LVL343:
 387:Core/Src/main.c ****   {
 3046              		.loc 1 387 6 view .LVU1037
 3047 0036 20B9     		cbnz	r0, .L289
 395:Core/Src/main.c **** 
 3048              		.loc 1 395 1 view .LVU1038
 3049 0038 08BD     		pop	{r3, pc}
 3050              	.L287:
 375:Core/Src/main.c ****   }
 3051              		.loc 1 375 5 is_stmt 1 view .LVU1039
 3052 003a FFF7FEFF 		bl	Error_Handler
 3053              	.LVL344:
 3054              	.L288:
 382:Core/Src/main.c ****   }
 3055              		.loc 1 382 5 view .LVU1040
 3056 003e FFF7FEFF 		bl	Error_Handler
 3057              	.LVL345:
 3058              	.L289:
 389:Core/Src/main.c ****   }
 3059              		.loc 1 389 5 view .LVU1041
 3060 0042 FFF7FEFF 		bl	Error_Handler
 3061              	.LVL346:
 3062              	.L291:
 3063 0046 00BF     		.align	2
 3064              	.L290:
 3065 0048 00000000 		.word	.LANCHOR5
 3066 004c 00540040 		.word	1073763328
 3067 0050 EC9C9010 		.word	277912812
 3068              		.cfi_endproc
 3069              	.LFE208:
 3071              		.section	.text.MX_SPI2_Init,"ax",%progbits
 3072              		.align	1
ARM GAS  /tmp/ccBVRzdb.s 			page 90


 3073              		.syntax unified
 3074              		.thumb
 3075              		.thumb_func
 3076              		.fpu fpv4-sp-d16
 3078              	MX_SPI2_Init:
 3079              	.LFB210:
 443:Core/Src/main.c **** 
 3080              		.loc 1 443 1 view -0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084 0000 08B5     		push	{r3, lr}
 3085              	.LCFI22:
 3086              		.cfi_def_cfa_offset 8
 3087              		.cfi_offset 3, -8
 3088              		.cfi_offset 14, -4
 453:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 3089              		.loc 1 453 3 view .LVU1043
 453:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 3090              		.loc 1 453 18 is_stmt 0 view .LVU1044
 3091 0002 0F48     		ldr	r0, .L296
 3092 0004 0F4B     		ldr	r3, .L296+4
 3093 0006 0360     		str	r3, [r0]
 454:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 3094              		.loc 1 454 3 is_stmt 1 view .LVU1045
 454:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 3095              		.loc 1 454 19 is_stmt 0 view .LVU1046
 3096 0008 4FF48273 		mov	r3, #260
 3097 000c 4360     		str	r3, [r0, #4]
 455:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 3098              		.loc 1 455 3 is_stmt 1 view .LVU1047
 455:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 3099              		.loc 1 455 24 is_stmt 0 view .LVU1048
 3100 000e 0023     		movs	r3, #0
 3101 0010 8360     		str	r3, [r0, #8]
 456:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 3102              		.loc 1 456 3 is_stmt 1 view .LVU1049
 456:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 3103              		.loc 1 456 23 is_stmt 0 view .LVU1050
 3104 0012 4FF4E062 		mov	r2, #1792
 3105 0016 C260     		str	r2, [r0, #12]
 457:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 3106              		.loc 1 457 3 is_stmt 1 view .LVU1051
 457:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 3107              		.loc 1 457 26 is_stmt 0 view .LVU1052
 3108 0018 0361     		str	r3, [r0, #16]
 458:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 3109              		.loc 1 458 3 is_stmt 1 view .LVU1053
 458:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 3110              		.loc 1 458 23 is_stmt 0 view .LVU1054
 3111 001a 4361     		str	r3, [r0, #20]
 459:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 3112              		.loc 1 459 3 is_stmt 1 view .LVU1055
 459:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 3113              		.loc 1 459 18 is_stmt 0 view .LVU1056
 3114 001c 4FF40072 		mov	r2, #512
 3115 0020 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/ccBVRzdb.s 			page 91


 460:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 3116              		.loc 1 460 3 is_stmt 1 view .LVU1057
 460:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 3117              		.loc 1 460 32 is_stmt 0 view .LVU1058
 3118 0022 C361     		str	r3, [r0, #28]
 461:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 3119              		.loc 1 461 3 is_stmt 1 view .LVU1059
 461:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 3120              		.loc 1 461 23 is_stmt 0 view .LVU1060
 3121 0024 8022     		movs	r2, #128
 3122 0026 0262     		str	r2, [r0, #32]
 462:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3123              		.loc 1 462 3 is_stmt 1 view .LVU1061
 462:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3124              		.loc 1 462 21 is_stmt 0 view .LVU1062
 3125 0028 4362     		str	r3, [r0, #36]
 463:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 3126              		.loc 1 463 3 is_stmt 1 view .LVU1063
 463:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 3127              		.loc 1 463 29 is_stmt 0 view .LVU1064
 3128 002a 8362     		str	r3, [r0, #40]
 464:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3129              		.loc 1 464 3 is_stmt 1 view .LVU1065
 464:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3130              		.loc 1 464 28 is_stmt 0 view .LVU1066
 3131 002c 0722     		movs	r2, #7
 3132 002e C262     		str	r2, [r0, #44]
 465:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3133              		.loc 1 465 3 is_stmt 1 view .LVU1067
 465:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3134              		.loc 1 465 24 is_stmt 0 view .LVU1068
 3135 0030 0363     		str	r3, [r0, #48]
 466:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 3136              		.loc 1 466 3 is_stmt 1 view .LVU1069
 466:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 3137              		.loc 1 466 23 is_stmt 0 view .LVU1070
 3138 0032 4363     		str	r3, [r0, #52]
 467:Core/Src/main.c ****   {
 3139              		.loc 1 467 3 is_stmt 1 view .LVU1071
 467:Core/Src/main.c ****   {
 3140              		.loc 1 467 7 is_stmt 0 view .LVU1072
 3141 0034 FFF7FEFF 		bl	HAL_SPI_Init
 3142              	.LVL347:
 467:Core/Src/main.c ****   {
 3143              		.loc 1 467 6 view .LVU1073
 3144 0038 00B9     		cbnz	r0, .L295
 475:Core/Src/main.c **** 
 3145              		.loc 1 475 1 view .LVU1074
 3146 003a 08BD     		pop	{r3, pc}
 3147              	.L295:
 469:Core/Src/main.c ****   }
 3148              		.loc 1 469 5 is_stmt 1 view .LVU1075
 3149 003c FFF7FEFF 		bl	Error_Handler
 3150              	.LVL348:
 3151              	.L297:
 3152              		.align	2
 3153              	.L296:
ARM GAS  /tmp/ccBVRzdb.s 			page 92


 3154 0040 00000000 		.word	.LANCHOR6
 3155 0044 00380040 		.word	1073756160
 3156              		.cfi_endproc
 3157              	.LFE210:
 3159              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 3160              		.align	1
 3161              		.syntax unified
 3162              		.thumb
 3163              		.thumb_func
 3164              		.fpu fpv4-sp-d16
 3166              	MX_USART2_UART_Init:
 3167              	.LFB211:
 483:Core/Src/main.c **** 
 3168              		.loc 1 483 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172 0000 08B5     		push	{r3, lr}
 3173              	.LCFI23:
 3174              		.cfi_def_cfa_offset 8
 3175              		.cfi_offset 3, -8
 3176              		.cfi_offset 14, -4
 492:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 3177              		.loc 1 492 3 view .LVU1077
 492:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 3178              		.loc 1 492 19 is_stmt 0 view .LVU1078
 3179 0002 0B48     		ldr	r0, .L302
 3180 0004 0B4B     		ldr	r3, .L302+4
 3181 0006 0360     		str	r3, [r0]
 493:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 3182              		.loc 1 493 3 is_stmt 1 view .LVU1079
 493:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 3183              		.loc 1 493 24 is_stmt 0 view .LVU1080
 3184 0008 4FF4E133 		mov	r3, #115200
 3185 000c 4360     		str	r3, [r0, #4]
 494:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 3186              		.loc 1 494 3 is_stmt 1 view .LVU1081
 494:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 3187              		.loc 1 494 26 is_stmt 0 view .LVU1082
 3188 000e 0023     		movs	r3, #0
 3189 0010 8360     		str	r3, [r0, #8]
 495:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 3190              		.loc 1 495 3 is_stmt 1 view .LVU1083
 495:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 3191              		.loc 1 495 24 is_stmt 0 view .LVU1084
 3192 0012 C360     		str	r3, [r0, #12]
 496:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 3193              		.loc 1 496 3 is_stmt 1 view .LVU1085
 496:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 3194              		.loc 1 496 22 is_stmt 0 view .LVU1086
 3195 0014 0361     		str	r3, [r0, #16]
 497:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3196              		.loc 1 497 3 is_stmt 1 view .LVU1087
 497:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3197              		.loc 1 497 20 is_stmt 0 view .LVU1088
 3198 0016 0C22     		movs	r2, #12
 3199 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccBVRzdb.s 			page 93


 498:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 3200              		.loc 1 498 3 is_stmt 1 view .LVU1089
 498:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 3201              		.loc 1 498 25 is_stmt 0 view .LVU1090
 3202 001a 8361     		str	r3, [r0, #24]
 499:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3203              		.loc 1 499 3 is_stmt 1 view .LVU1091
 499:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3204              		.loc 1 499 28 is_stmt 0 view .LVU1092
 3205 001c C361     		str	r3, [r0, #28]
 500:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3206              		.loc 1 500 3 is_stmt 1 view .LVU1093
 500:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3207              		.loc 1 500 30 is_stmt 0 view .LVU1094
 3208 001e 0362     		str	r3, [r0, #32]
 501:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 3209              		.loc 1 501 3 is_stmt 1 view .LVU1095
 501:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 3210              		.loc 1 501 38 is_stmt 0 view .LVU1096
 3211 0020 4362     		str	r3, [r0, #36]
 502:Core/Src/main.c ****   {
 3212              		.loc 1 502 3 is_stmt 1 view .LVU1097
 502:Core/Src/main.c ****   {
 3213              		.loc 1 502 7 is_stmt 0 view .LVU1098
 3214 0022 FFF7FEFF 		bl	HAL_UART_Init
 3215              	.LVL349:
 502:Core/Src/main.c ****   {
 3216              		.loc 1 502 6 view .LVU1099
 3217 0026 00B9     		cbnz	r0, .L301
 510:Core/Src/main.c **** 
 3218              		.loc 1 510 1 view .LVU1100
 3219 0028 08BD     		pop	{r3, pc}
 3220              	.L301:
 504:Core/Src/main.c ****   }
 3221              		.loc 1 504 5 is_stmt 1 view .LVU1101
 3222 002a FFF7FEFF 		bl	Error_Handler
 3223              	.LVL350:
 3224              	.L303:
 3225 002e 00BF     		.align	2
 3226              	.L302:
 3227 0030 00000000 		.word	.LANCHOR7
 3228 0034 00440040 		.word	1073759232
 3229              		.cfi_endproc
 3230              	.LFE211:
 3232              		.section	.text.main,"ax",%progbits
 3233              		.align	1
 3234              		.global	main
 3235              		.syntax unified
 3236              		.thumb
 3237              		.thumb_func
 3238              		.fpu fpv4-sp-d16
 3240              	main:
 3241              	.LFB206:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3242              		.loc 1 126 1 view -0
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccBVRzdb.s 			page 94


 3245              		@ frame_needed = 0, uses_anonymous_args = 0
 3246 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3247              	.LCFI24:
 3248              		.cfi_def_cfa_offset 32
 3249              		.cfi_offset 4, -32
 3250              		.cfi_offset 5, -28
 3251              		.cfi_offset 6, -24
 3252              		.cfi_offset 7, -20
 3253              		.cfi_offset 8, -16
 3254              		.cfi_offset 9, -12
 3255              		.cfi_offset 10, -8
 3256              		.cfi_offset 14, -4
 3257 0004 82B0     		sub	sp, sp, #8
 3258              	.LCFI25:
 3259              		.cfi_def_cfa_offset 40
 134:Core/Src/main.c **** 
 3260              		.loc 1 134 3 view .LVU1103
 3261 0006 FFF7FEFF 		bl	HAL_Init
 3262              	.LVL351:
 145:Core/Src/main.c ****   //tusb_init();
 3263              		.loc 1 145 3 view .LVU1104
 3264 000a FFF7FEFF 		bl	board_init
 3265              	.LVL352:
 150:Core/Src/main.c ****   MX_DMA_Init();
 3266              		.loc 1 150 3 view .LVU1105
 3267 000e FFF7FEFF 		bl	MX_GPIO_Init
 3268              	.LVL353:
 151:Core/Src/main.c ****   MX_SPI1_Init();
 3269              		.loc 1 151 3 view .LVU1106
 3270 0012 FFF7FEFF 		bl	MX_DMA_Init
 3271              	.LVL354:
 152:Core/Src/main.c ****   MX_I2C1_Init();
 3272              		.loc 1 152 3 view .LVU1107
 3273 0016 FFF7FEFF 		bl	MX_SPI1_Init
 3274              	.LVL355:
 153:Core/Src/main.c ****   MX_SPI2_Init();
 3275              		.loc 1 153 3 view .LVU1108
 3276 001a FFF7FEFF 		bl	MX_I2C1_Init
 3277              	.LVL356:
 154:Core/Src/main.c ****   MX_USART2_UART_Init();
 3278              		.loc 1 154 3 view .LVU1109
 3279 001e FFF7FEFF 		bl	MX_SPI2_Init
 3280              	.LVL357:
 155:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3281              		.loc 1 155 3 view .LVU1110
 3282 0022 FFF7FEFF 		bl	MX_USART2_UART_Init
 3283              	.LVL358:
 160:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 3284              		.loc 1 160 3 view .LVU1111
 3285 0026 FFF7FEFF 		bl	tusb_init
 3286              	.LVL359:
 165:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3287              		.loc 1 165 3 view .LVU1112
 165:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3288              		.loc 1 165 20 is_stmt 0 view .LVU1113
 3289 002a 714B     		ldr	r3, .L321
 3290 002c 0124     		movs	r4, #1
ARM GAS  /tmp/ccBVRzdb.s 			page 95


 3291 002e 1C70     		strb	r4, [r3]
 167:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3292              		.loc 1 167 3 is_stmt 1 view .LVU1114
 167:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3293              		.loc 1 167 20 is_stmt 0 view .LVU1115
 3294 0030 8022     		movs	r2, #128
 3295 0032 5A70     		strb	r2, [r3, #1]
 169:Core/Src/main.c **** 
 3296              		.loc 1 169 3 is_stmt 1 view .LVU1116
 169:Core/Src/main.c **** 
 3297              		.loc 1 169 20 is_stmt 0 view .LVU1117
 3298 0034 0027     		movs	r7, #0
 3299 0036 9F70     		strb	r7, [r3, #2]
 172:Core/Src/main.c **** 
 3300              		.loc 1 172 3 is_stmt 1 view .LVU1118
 3301              	.LVL360:
 175:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 3302              		.loc 1 175 3 view .LVU1119
 175:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 3303              		.loc 1 175 20 is_stmt 0 view .LVU1120
 3304 0038 6E4A     		ldr	r2, .L321+4
 3305 003a 1023     		movs	r3, #16
 3306 003c 1370     		strb	r3, [r2]
 176:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 3307              		.loc 1 176 3 is_stmt 1 view .LVU1121
 3308 003e 4FF47A73 		mov	r3, #1000
 3309 0042 0093     		str	r3, [sp]
 3310 0044 2346     		mov	r3, r4
 3311 0046 5821     		movs	r1, #88
 3312 0048 6B48     		ldr	r0, .L321+8
 3313 004a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3314              	.LVL361:
 177:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 3315              		.loc 1 177 3 view .LVU1122
 3316 004e 6B4D     		ldr	r5, .L321+12
 3317 0050 2246     		mov	r2, r4
 3318 0052 4FF48051 		mov	r1, #4096
 3319 0056 2846     		mov	r0, r5
 3320 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3321              	.LVL362:
 178:Core/Src/main.c **** 
 3322              		.loc 1 178 3 view .LVU1123
 3323 005c 2246     		mov	r2, r4
 3324 005e 4FF40061 		mov	r1, #2048
 3325 0062 2846     		mov	r0, r5
 3326 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3327              	.LVL363:
 180:Core/Src/main.c ****   bool flag1 = false;
 3328              		.loc 1 180 3 view .LVU1124
 181:Core/Src/main.c ****   bool flag2 = false;
 3329              		.loc 1 181 3 view .LVU1125
 182:Core/Src/main.c **** 
 3330              		.loc 1 182 3 view .LVU1126
 185:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 3331              		.loc 1 185 3 view .LVU1127
 182:Core/Src/main.c **** 
 3332              		.loc 1 182 8 is_stmt 0 view .LVU1128
ARM GAS  /tmp/ccBVRzdb.s 			page 96


 3333 0068 B846     		mov	r8, r7
 181:Core/Src/main.c ****   bool flag2 = false;
 3334              		.loc 1 181 8 view .LVU1129
 3335 006a B946     		mov	r9, r7
 180:Core/Src/main.c ****   bool flag1 = false;
 3336              		.loc 1 180 7 view .LVU1130
 3337 006c 0226     		movs	r6, #2
 3338 006e 76E0     		b	.L305
 3339              	.LVL364:
 3340              	.L316:
 214:Core/Src/main.c ****     }
 3341              		.loc 1 214 13 view .LVU1131
 3342 0070 4FF00109 		mov	r9, #1
 3343              	.LVL365:
 213:Core/Src/main.c ****       flag1 = true;
 3344              		.loc 1 213 37 view .LVU1132
 3345 0074 0426     		movs	r6, #4
 3346              	.LVL366:
 213:Core/Src/main.c ****       flag1 = true;
 3347              		.loc 1 213 37 view .LVU1133
 3348 0076 81E0     		b	.L306
 3349              	.LVL367:
 3350              	.L318:
 222:Core/Src/main.c ****     }
 3351              		.loc 1 222 13 view .LVU1134
 3352 0078 4FF00108 		mov	r8, #1
 3353              	.LVL368:
 221:Core/Src/main.c ****       flag2 = true;
 3354              		.loc 1 221 37 view .LVU1135
 3355 007c 0026     		movs	r6, #0
 3356              	.LVL369:
 221:Core/Src/main.c ****       flag2 = true;
 3357              		.loc 1 221 37 view .LVU1136
 3358 007e 93E0     		b	.L308
 3359              	.LVL370:
 3360              	.L311:
 3361              	.LBB59:
 229:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3362              		.loc 1 229 5 is_stmt 1 discriminator 3 view .LVU1137
 229:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3363              		.loc 1 229 39 is_stmt 0 discriminator 3 view .LVU1138
 3364 0080 2301     		lsls	r3, r4, #4
 229:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3365              		.loc 1 229 35 discriminator 3 view .LVU1139
 3366 0082 63F07F03 		orn	r3, r3, #127
 229:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3367              		.loc 1 229 22 discriminator 3 view .LVU1140
 3368 0086 DFF868A1 		ldr	r10, .L321
 3369 008a 8AF80130 		strb	r3, [r10, #1]
 231:Core/Src/main.c ****     // one full duplex interaction
 3370              		.loc 1 231 5 is_stmt 1 discriminator 3 view .LVU1141
 3371 008e 5B4D     		ldr	r5, .L321+12
 3372 0090 0022     		movs	r2, #0
 3373 0092 4FF40061 		mov	r1, #2048
 3374 0096 2846     		mov	r0, r5
 3375 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3376              	.LVL371:
ARM GAS  /tmp/ccBVRzdb.s 			page 97


 233:Core/Src/main.c ****     // now need to parse data
 3377              		.loc 1 233 5 discriminator 3 view .LVU1142
 3378 009c 584F     		ldr	r7, .L321+16
 3379 009e 4FF47A73 		mov	r3, #1000
 3380 00a2 0093     		str	r3, [sp]
 3381 00a4 0323     		movs	r3, #3
 3382 00a6 3A46     		mov	r2, r7
 3383 00a8 5146     		mov	r1, r10
 3384 00aa 5648     		ldr	r0, .L321+20
 3385 00ac FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3386              	.LVL372:
 235:Core/Src/main.c ****     // default CS to be high
 3387              		.loc 1 235 5 discriminator 3 view .LVU1143
 235:Core/Src/main.c ****     // default CS to be high
 3388              		.loc 1 235 35 is_stmt 0 discriminator 3 view .LVU1144
 3389 00b0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 235:Core/Src/main.c ****     // default CS to be high
 3390              		.loc 1 235 44 discriminator 3 view .LVU1145
 3391 00b2 1B02     		lsls	r3, r3, #8
 3392 00b4 03F44073 		and	r3, r3, #768
 235:Core/Src/main.c ****     // default CS to be high
 3393              		.loc 1 235 62 discriminator 3 view .LVU1146
 3394 00b8 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 235:Core/Src/main.c ****     // default CS to be high
 3395              		.loc 1 235 48 discriminator 3 view .LVU1147
 3396 00ba 1343     		orrs	r3, r3, r2
 235:Core/Src/main.c ****     // default CS to be high
 3397              		.loc 1 235 17 discriminator 3 view .LVU1148
 3398 00bc 524A     		ldr	r2, .L321+24
 3399 00be 42F82430 		str	r3, [r2, r4, lsl #2]
 237:Core/Src/main.c ****     //if(i == 7) i = 0;
 3400              		.loc 1 237 5 is_stmt 1 discriminator 3 view .LVU1149
 3401 00c2 0122     		movs	r2, #1
 3402 00c4 4FF40061 		mov	r1, #2048
 3403 00c8 2846     		mov	r0, r5
 3404 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 3405              	.LVL373:
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3406              		.loc 1 228 28 discriminator 3 view .LVU1150
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3407              		.loc 1 228 29 is_stmt 0 discriminator 3 view .LVU1151
 3408 00ce 0134     		adds	r4, r4, #1
 3409              	.LVL374:
 3410              	.L310:
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3411              		.loc 1 228 21 is_stmt 1 discriminator 1 view .LVU1152
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3412              		.loc 1 228 5 is_stmt 0 discriminator 1 view .LVU1153
 3413 00d0 072C     		cmp	r4, #7
 3414 00d2 D5DD     		ble	.L311
 3415              	.LBE59:
 3416              	.LBB60:
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3417              		.loc 1 242 14 view .LVU1154
 3418 00d4 0024     		movs	r4, #0
 3419              	.LVL375:
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
ARM GAS  /tmp/ccBVRzdb.s 			page 98


 3420              		.loc 1 242 14 view .LVU1155
 3421 00d6 27E0     		b	.L312
 3422              	.LVL376:
 3423              	.L313:
 243:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3424              		.loc 1 243 5 is_stmt 1 discriminator 3 view .LVU1156
 243:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3425              		.loc 1 243 39 is_stmt 0 discriminator 3 view .LVU1157
 3426 00d8 2301     		lsls	r3, r4, #4
 243:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3427              		.loc 1 243 35 discriminator 3 view .LVU1158
 3428 00da 63F07F03 		orn	r3, r3, #127
 243:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3429              		.loc 1 243 22 discriminator 3 view .LVU1159
 3430 00de DFF810A1 		ldr	r10, .L321
 3431 00e2 8AF80130 		strb	r3, [r10, #1]
 245:Core/Src/main.c ****     // one full duplex interaction
 3432              		.loc 1 245 5 is_stmt 1 discriminator 3 view .LVU1160
 3433 00e6 454D     		ldr	r5, .L321+12
 3434 00e8 0022     		movs	r2, #0
 3435 00ea 4FF48051 		mov	r1, #4096
 3436 00ee 2846     		mov	r0, r5
 3437 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3438              	.LVL377:
 247:Core/Src/main.c ****     // now need to parse data
 3439              		.loc 1 247 5 discriminator 3 view .LVU1161
 3440 00f4 424F     		ldr	r7, .L321+16
 3441 00f6 4FF47A73 		mov	r3, #1000
 3442 00fa 0093     		str	r3, [sp]
 3443 00fc 0323     		movs	r3, #3
 3444 00fe 3A46     		mov	r2, r7
 3445 0100 5146     		mov	r1, r10
 3446 0102 4048     		ldr	r0, .L321+20
 3447 0104 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3448              	.LVL378:
 249:Core/Src/main.c ****     // default CS to be high
 3449              		.loc 1 249 5 discriminator 3 view .LVU1162
 249:Core/Src/main.c ****     // default CS to be high
 3450              		.loc 1 249 35 is_stmt 0 discriminator 3 view .LVU1163
 3451 0108 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 249:Core/Src/main.c ****     // default CS to be high
 3452              		.loc 1 249 44 discriminator 3 view .LVU1164
 3453 010a 1B02     		lsls	r3, r3, #8
 3454 010c 03F44073 		and	r3, r3, #768
 249:Core/Src/main.c ****     // default CS to be high
 3455              		.loc 1 249 62 discriminator 3 view .LVU1165
 3456 0110 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 249:Core/Src/main.c ****     // default CS to be high
 3457              		.loc 1 249 48 discriminator 3 view .LVU1166
 3458 0112 1343     		orrs	r3, r3, r2
 249:Core/Src/main.c ****     // default CS to be high
 3459              		.loc 1 249 17 discriminator 3 view .LVU1167
 3460 0114 3D4A     		ldr	r2, .L321+28
 3461 0116 42F82430 		str	r3, [r2, r4, lsl #2]
 251:Core/Src/main.c ****     }
 3462              		.loc 1 251 5 is_stmt 1 discriminator 3 view .LVU1168
 3463 011a 0122     		movs	r2, #1
ARM GAS  /tmp/ccBVRzdb.s 			page 99


 3464 011c 4FF48051 		mov	r1, #4096
 3465 0120 2846     		mov	r0, r5
 3466 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3467              	.LVL379:
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3468              		.loc 1 242 28 discriminator 3 view .LVU1169
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3469              		.loc 1 242 29 is_stmt 0 discriminator 3 view .LVU1170
 3470 0126 0134     		adds	r4, r4, #1
 3471              	.LVL380:
 3472              	.L312:
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3473              		.loc 1 242 21 is_stmt 1 discriminator 1 view .LVU1171
 242:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3474              		.loc 1 242 5 is_stmt 0 discriminator 1 view .LVU1172
 3475 0128 072C     		cmp	r4, #7
 3476 012a D5DD     		ble	.L313
 3477              	.LBE60:
 255:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3478              		.loc 1 255 5 is_stmt 1 view .LVU1173
 255:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3479              		.loc 1 255 10 is_stmt 0 view .LVU1174
 3480 012c 4FF48071 		mov	r1, #256
 3481 0130 3248     		ldr	r0, .L321+12
 3482 0132 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3483              	.LVL381:
 255:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3484              		.loc 1 255 8 view .LVU1175
 3485 0136 0028     		cmp	r0, #0
 3486 0138 40D1     		bne	.L314
 257:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3487              		.loc 1 257 7 is_stmt 1 view .LVU1176
 257:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3488              		.loc 1 257 24 is_stmt 0 view .LVU1177
 3489 013a 2E4C     		ldr	r4, .L321+4
 3490              	.LVL382:
 257:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3491              		.loc 1 257 24 view .LVU1178
 3492 013c 0023     		movs	r3, #0
 3493 013e 2370     		strb	r3, [r4]
 258:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3494              		.loc 1 258 7 is_stmt 1 view .LVU1179
 258:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3495              		.loc 1 258 26 is_stmt 0 view .LVU1180
 3496 0140 3246     		mov	r2, r6
 3497 0142 3249     		ldr	r1, .L321+28
 3498 0144 3048     		ldr	r0, .L321+24
 3499 0146 FFF7FEFF 		bl	HALL_TO_DAC
 3500              	.LVL383:
 258:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3501              		.loc 1 258 24 view .LVU1181
 3502 014a 6070     		strb	r0, [r4, #1]
 259:Core/Src/main.c ****     }
 3503              		.loc 1 259 7 is_stmt 1 view .LVU1182
 3504 014c 4FF47A73 		mov	r3, #1000
 3505 0150 0093     		str	r3, [sp]
 3506 0152 0223     		movs	r3, #2
ARM GAS  /tmp/ccBVRzdb.s 			page 100


 3507 0154 2246     		mov	r2, r4
 3508 0156 5821     		movs	r1, #88
 3509 0158 2748     		ldr	r0, .L321+8
 3510 015a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3511              	.LVL384:
 3512              	.L305:
 205:Core/Src/main.c ****   {
 3513              		.loc 1 205 3 view .LVU1183
 211:Core/Src/main.c ****       octave_num = octave_num + 1;
 3514              		.loc 1 211 5 view .LVU1184
 211:Core/Src/main.c ****       octave_num = octave_num + 1;
 3515              		.loc 1 211 10 is_stmt 0 view .LVU1185
 3516 015e 0221     		movs	r1, #2
 3517 0160 4FF09040 		mov	r0, #1207959552
 3518 0164 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3519              	.LVL385:
 211:Core/Src/main.c ****       octave_num = octave_num + 1;
 3520              		.loc 1 211 8 view .LVU1186
 3521 0168 40B9     		cbnz	r0, .L306
 211:Core/Src/main.c ****       octave_num = octave_num + 1;
 3522              		.loc 1 211 46 discriminator 1 view .LVU1187
 3523 016a B9F1000F 		cmp	r9, #0
 3524 016e 05D1     		bne	.L306
 212:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3525              		.loc 1 212 7 is_stmt 1 view .LVU1188
 212:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3526              		.loc 1 212 18 is_stmt 0 view .LVU1189
 3527 0170 0136     		adds	r6, r6, #1
 3528              	.LVL386:
 213:Core/Src/main.c ****       flag1 = true;
 3529              		.loc 1 213 7 is_stmt 1 view .LVU1190
 213:Core/Src/main.c ****       flag1 = true;
 3530              		.loc 1 213 9 is_stmt 0 view .LVU1191
 3531 0172 042E     		cmp	r6, #4
 3532 0174 3FF77CAF 		bgt	.L316
 214:Core/Src/main.c ****     }
 3533              		.loc 1 214 13 view .LVU1192
 3534 0178 4FF00109 		mov	r9, #1
 3535              	.LVL387:
 3536              	.L306:
 217:Core/Src/main.c **** 
 3537              		.loc 1 217 5 is_stmt 1 view .LVU1193
 217:Core/Src/main.c **** 
 3538              		.loc 1 217 9 is_stmt 0 view .LVU1194
 3539 017c 0221     		movs	r1, #2
 3540 017e 4FF09040 		mov	r0, #1207959552
 3541 0182 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3542              	.LVL388:
 217:Core/Src/main.c **** 
 3543              		.loc 1 217 8 view .LVU1195
 3544 0186 08B1     		cbz	r0, .L307
 217:Core/Src/main.c **** 
 3545              		.loc 1 217 52 view .LVU1196
 3546 0188 4FF00009 		mov	r9, #0
 3547              	.LVL389:
 3548              	.L307:
 219:Core/Src/main.c ****       octave_num = octave_num - 1;
ARM GAS  /tmp/ccBVRzdb.s 			page 101


 3549              		.loc 1 219 5 is_stmt 1 view .LVU1197
 219:Core/Src/main.c ****       octave_num = octave_num - 1;
 3550              		.loc 1 219 10 is_stmt 0 view .LVU1198
 3551 018c 0421     		movs	r1, #4
 3552 018e 4FF09040 		mov	r0, #1207959552
 3553 0192 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3554              	.LVL390:
 219:Core/Src/main.c ****       octave_num = octave_num - 1;
 3555              		.loc 1 219 8 view .LVU1199
 3556 0196 38B9     		cbnz	r0, .L308
 219:Core/Src/main.c ****       octave_num = octave_num - 1;
 3557              		.loc 1 219 46 discriminator 1 view .LVU1200
 3558 0198 B8F1000F 		cmp	r8, #0
 3559 019c 04D1     		bne	.L308
 220:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 3560              		.loc 1 220 7 is_stmt 1 view .LVU1201
 3561              	.LVL391:
 221:Core/Src/main.c ****       flag2 = true;
 3562              		.loc 1 221 7 view .LVU1202
 221:Core/Src/main.c ****       flag2 = true;
 3563              		.loc 1 221 9 is_stmt 0 view .LVU1203
 3564 019e 013E     		subs	r6, r6, #1
 3565              	.LVL392:
 221:Core/Src/main.c ****       flag2 = true;
 3566              		.loc 1 221 9 view .LVU1204
 3567 01a0 3FF56AAF 		bmi	.L318
 222:Core/Src/main.c ****     }
 3568              		.loc 1 222 13 view .LVU1205
 3569 01a4 4FF00108 		mov	r8, #1
 3570              	.LVL393:
 3571              	.L308:
 225:Core/Src/main.c **** 
 3572              		.loc 1 225 5 is_stmt 1 view .LVU1206
 225:Core/Src/main.c **** 
 3573              		.loc 1 225 9 is_stmt 0 view .LVU1207
 3574 01a8 0421     		movs	r1, #4
 3575 01aa 4FF09040 		mov	r0, #1207959552
 3576 01ae FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3577              	.LVL394:
 225:Core/Src/main.c **** 
 3578              		.loc 1 225 8 view .LVU1208
 3579 01b2 08B1     		cbz	r0, .L309
 225:Core/Src/main.c **** 
 3580              		.loc 1 225 52 view .LVU1209
 3581 01b4 4FF00008 		mov	r8, #0
 3582              	.LVL395:
 3583              	.L309:
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3584              		.loc 1 228 5 is_stmt 1 view .LVU1210
 3585              	.LBB61:
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3586              		.loc 1 228 10 view .LVU1211
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3587              		.loc 1 228 14 is_stmt 0 view .LVU1212
 3588 01b8 0024     		movs	r4, #0
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3589              		.loc 1 228 5 view .LVU1213
ARM GAS  /tmp/ccBVRzdb.s 			page 102


 3590 01ba 89E7     		b	.L310
 3591              	.LVL396:
 3592              	.L314:
 228:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3593              		.loc 1 228 5 view .LVU1214
 3594              	.LBE61:
 263:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3595              		.loc 1 263 7 is_stmt 1 view .LVU1215
 263:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3596              		.loc 1 263 24 is_stmt 0 view .LVU1216
 3597 01bc 0D4A     		ldr	r2, .L321+4
 3598 01be 0024     		movs	r4, #0
 3599              	.LVL397:
 263:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3600              		.loc 1 263 24 view .LVU1217
 3601 01c0 1470     		strb	r4, [r2]
 264:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3602              		.loc 1 264 7 is_stmt 1 view .LVU1218
 264:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3603              		.loc 1 264 24 is_stmt 0 view .LVU1219
 3604 01c2 5470     		strb	r4, [r2, #1]
 265:Core/Src/main.c ****       READ_KEYPRESS(ADC1_VAL,ADC2_VAL);
 3605              		.loc 1 265 7 is_stmt 1 view .LVU1220
 3606 01c4 4FF47A73 		mov	r3, #1000
 3607 01c8 0093     		str	r3, [sp]
 3608 01ca 0223     		movs	r3, #2
 3609 01cc 5821     		movs	r1, #88
 3610 01ce 0A48     		ldr	r0, .L321+8
 3611 01d0 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3612              	.LVL398:
 266:Core/Src/main.c ****       tud_task(); // tinyusb device task
 3613              		.loc 1 266 7 view .LVU1221
 3614 01d4 0D49     		ldr	r1, .L321+28
 3615 01d6 0C48     		ldr	r0, .L321+24
 3616 01d8 FFF7FEFF 		bl	READ_KEYPRESS
 3617              	.LVL399:
 267:Core/Src/main.c ****       MIDI_TASK(octave_num);
 3618              		.loc 1 267 7 view .LVU1222
 3619              	.LBB62:
 3620              	.LBI62:
 3621              		.file 4 "tinyusb/src/device/usbd.h"
   1:tinyusb/src/device/usbd.h **** /*
   2:tinyusb/src/device/usbd.h ****  * The MIT License (MIT)
   3:tinyusb/src/device/usbd.h ****  *
   4:tinyusb/src/device/usbd.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/device/usbd.h ****  *
   6:tinyusb/src/device/usbd.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/device/usbd.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/device/usbd.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/device/usbd.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/device/usbd.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/device/usbd.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/device/usbd.h ****  *
  13:tinyusb/src/device/usbd.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/device/usbd.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/device/usbd.h ****  *
  16:tinyusb/src/device/usbd.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  /tmp/ccBVRzdb.s 			page 103


  17:tinyusb/src/device/usbd.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/device/usbd.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/device/usbd.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/device/usbd.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/device/usbd.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/device/usbd.h ****  * THE SOFTWARE.
  23:tinyusb/src/device/usbd.h ****  *
  24:tinyusb/src/device/usbd.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/device/usbd.h ****  */
  26:tinyusb/src/device/usbd.h **** 
  27:tinyusb/src/device/usbd.h **** #ifndef _TUSB_USBD_H_
  28:tinyusb/src/device/usbd.h **** #define _TUSB_USBD_H_
  29:tinyusb/src/device/usbd.h **** 
  30:tinyusb/src/device/usbd.h **** #include "common/tusb_common.h"
  31:tinyusb/src/device/usbd.h **** 
  32:tinyusb/src/device/usbd.h **** #ifdef __cplusplus
  33:tinyusb/src/device/usbd.h **** extern "C" {
  34:tinyusb/src/device/usbd.h **** #endif
  35:tinyusb/src/device/usbd.h **** 
  36:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  37:tinyusb/src/device/usbd.h **** // Application API
  38:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  39:tinyusb/src/device/usbd.h **** 
  40:tinyusb/src/device/usbd.h **** // Init device stack
  41:tinyusb/src/device/usbd.h **** bool tud_init (uint8_t rhport);
  42:tinyusb/src/device/usbd.h **** 
  43:tinyusb/src/device/usbd.h **** // Check if device stack is already initialized
  44:tinyusb/src/device/usbd.h **** bool tud_inited(void);
  45:tinyusb/src/device/usbd.h **** 
  46:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop, extended version of tud_task()
  47:tinyusb/src/device/usbd.h **** // - timeout_ms: millisecond to wait, zero = no wait, 0xFFFFFFFF = wait forever
  48:tinyusb/src/device/usbd.h **** // - in_isr: if function is called in ISR
  49:tinyusb/src/device/usbd.h **** void tud_task_ext(uint32_t timeout_ms, bool in_isr);
  50:tinyusb/src/device/usbd.h **** 
  51:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop
  52:tinyusb/src/device/usbd.h **** TU_ATTR_ALWAYS_INLINE static inline
  53:tinyusb/src/device/usbd.h **** void tud_task (void) {
 3622              		.loc 4 53 6 view .LVU1223
 3623              	.LBB63:
  54:tinyusb/src/device/usbd.h ****   tud_task_ext(UINT32_MAX, false);
 3624              		.loc 4 54 3 view .LVU1224
 3625 01dc 2146     		mov	r1, r4
 3626 01de 4FF0FF30 		mov	r0, #-1
 3627 01e2 FFF7FEFF 		bl	tud_task_ext
 3628              	.LVL400:
 3629              	.LBE63:
 3630              	.LBE62:
 268:Core/Src/main.c ****     }
 3631              		.loc 1 268 7 view .LVU1225
 3632 01e6 3046     		mov	r0, r6
 3633 01e8 FFF7FEFF 		bl	MIDI_TASK
 3634              	.LVL401:
 3635 01ec B7E7     		b	.L305
 3636              	.L322:
 3637 01ee 00BF     		.align	2
 3638              	.L321:
 3639 01f0 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccBVRzdb.s 			page 104


 3640 01f4 00000000 		.word	.LANCHOR9
 3641 01f8 00000000 		.word	.LANCHOR5
 3642 01fc 00100048 		.word	1207963648
 3643 0200 00000000 		.word	.LANCHOR10
 3644 0204 00000000 		.word	.LANCHOR4
 3645 0208 00000000 		.word	.LANCHOR11
 3646 020c 00000000 		.word	.LANCHOR12
 3647              		.cfi_endproc
 3648              	.LFE206:
 3650              		.section	.text.SystemClock_Config,"ax",%progbits
 3651              		.align	1
 3652              		.global	SystemClock_Config
 3653              		.syntax unified
 3654              		.thumb
 3655              		.thumb_func
 3656              		.fpu fpv4-sp-d16
 3658              	SystemClock_Config:
 3659              	.LFB207:
 304:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3660              		.loc 1 304 1 view -0
 3661              		.cfi_startproc
 3662              		@ args = 0, pretend = 0, frame = 88
 3663              		@ frame_needed = 0, uses_anonymous_args = 0
 3664 0000 00B5     		push	{lr}
 3665              	.LCFI26:
 3666              		.cfi_def_cfa_offset 4
 3667              		.cfi_offset 14, -4
 3668 0002 97B0     		sub	sp, sp, #92
 3669              	.LCFI27:
 3670              		.cfi_def_cfa_offset 96
 305:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3671              		.loc 1 305 3 view .LVU1227
 305:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3672              		.loc 1 305 22 is_stmt 0 view .LVU1228
 3673 0004 4422     		movs	r2, #68
 3674 0006 0021     		movs	r1, #0
 3675 0008 05A8     		add	r0, sp, #20
 3676 000a FFF7FEFF 		bl	memset
 3677              	.LVL402:
 306:Core/Src/main.c **** 
 3678              		.loc 1 306 3 is_stmt 1 view .LVU1229
 306:Core/Src/main.c **** 
 3679              		.loc 1 306 22 is_stmt 0 view .LVU1230
 3680 000e 0023     		movs	r3, #0
 3681 0010 0093     		str	r3, [sp]
 3682 0012 0193     		str	r3, [sp, #4]
 3683 0014 0293     		str	r3, [sp, #8]
 3684 0016 0393     		str	r3, [sp, #12]
 3685 0018 0493     		str	r3, [sp, #16]
 310:Core/Src/main.c ****   {
 3686              		.loc 1 310 3 is_stmt 1 view .LVU1231
 310:Core/Src/main.c ****   {
 3687              		.loc 1 310 7 is_stmt 0 view .LVU1232
 3688 001a 4FF40070 		mov	r0, #512
 3689 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 3690              	.LVL403:
 310:Core/Src/main.c ****   {
ARM GAS  /tmp/ccBVRzdb.s 			page 105


 3691              		.loc 1 310 6 view .LVU1233
 3692 0022 28BB     		cbnz	r0, .L328
 318:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3693              		.loc 1 318 3 is_stmt 1 view .LVU1234
 318:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3694              		.loc 1 318 36 is_stmt 0 view .LVU1235
 3695 0024 1023     		movs	r3, #16
 3696 0026 0593     		str	r3, [sp, #20]
 319:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3697              		.loc 1 319 3 is_stmt 1 view .LVU1236
 319:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3698              		.loc 1 319 30 is_stmt 0 view .LVU1237
 3699 0028 0122     		movs	r2, #1
 3700 002a 0B92     		str	r2, [sp, #44]
 320:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 3701              		.loc 1 320 3 is_stmt 1 view .LVU1238
 320:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 3702              		.loc 1 320 41 is_stmt 0 view .LVU1239
 3703 002c 0023     		movs	r3, #0
 3704 002e 0C93     		str	r3, [sp, #48]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3705              		.loc 1 321 3 is_stmt 1 view .LVU1240
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3706              		.loc 1 321 35 is_stmt 0 view .LVU1241
 3707 0030 6023     		movs	r3, #96
 3708 0032 0D93     		str	r3, [sp, #52]
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 3709              		.loc 1 322 3 is_stmt 1 view .LVU1242
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 3710              		.loc 1 322 34 is_stmt 0 view .LVU1243
 3711 0034 0223     		movs	r3, #2
 3712 0036 0F93     		str	r3, [sp, #60]
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 3713              		.loc 1 323 3 is_stmt 1 view .LVU1244
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 3714              		.loc 1 323 35 is_stmt 0 view .LVU1245
 3715 0038 1092     		str	r2, [sp, #64]
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 3716              		.loc 1 324 3 is_stmt 1 view .LVU1246
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 3717              		.loc 1 324 30 is_stmt 0 view .LVU1247
 3718 003a 1192     		str	r2, [sp, #68]
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 3719              		.loc 1 325 3 is_stmt 1 view .LVU1248
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 3720              		.loc 1 325 30 is_stmt 0 view .LVU1249
 3721 003c 2822     		movs	r2, #40
 3722 003e 1292     		str	r2, [sp, #72]
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 3723              		.loc 1 326 3 is_stmt 1 view .LVU1250
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 3724              		.loc 1 326 30 is_stmt 0 view .LVU1251
 3725 0040 0722     		movs	r2, #7
 3726 0042 1392     		str	r2, [sp, #76]
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 3727              		.loc 1 327 3 is_stmt 1 view .LVU1252
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccBVRzdb.s 			page 106


 3728              		.loc 1 327 30 is_stmt 0 view .LVU1253
 3729 0044 1493     		str	r3, [sp, #80]
 328:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3730              		.loc 1 328 3 is_stmt 1 view .LVU1254
 328:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3731              		.loc 1 328 30 is_stmt 0 view .LVU1255
 3732 0046 1593     		str	r3, [sp, #84]
 329:Core/Src/main.c ****   {
 3733              		.loc 1 329 3 is_stmt 1 view .LVU1256
 329:Core/Src/main.c ****   {
 3734              		.loc 1 329 7 is_stmt 0 view .LVU1257
 3735 0048 05A8     		add	r0, sp, #20
 3736 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 3737              	.LVL404:
 329:Core/Src/main.c ****   {
 3738              		.loc 1 329 6 view .LVU1258
 3739 004e 88B9     		cbnz	r0, .L329
 336:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3740              		.loc 1 336 3 is_stmt 1 view .LVU1259
 336:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3741              		.loc 1 336 31 is_stmt 0 view .LVU1260
 3742 0050 0F23     		movs	r3, #15
 3743 0052 0093     		str	r3, [sp]
 338:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3744              		.loc 1 338 3 is_stmt 1 view .LVU1261
 338:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3745              		.loc 1 338 34 is_stmt 0 view .LVU1262
 3746 0054 0323     		movs	r3, #3
 3747 0056 0193     		str	r3, [sp, #4]
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3748              		.loc 1 339 3 is_stmt 1 view .LVU1263
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3749              		.loc 1 339 35 is_stmt 0 view .LVU1264
 3750 0058 0023     		movs	r3, #0
 3751 005a 0293     		str	r3, [sp, #8]
 340:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3752              		.loc 1 340 3 is_stmt 1 view .LVU1265
 340:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3753              		.loc 1 340 36 is_stmt 0 view .LVU1266
 3754 005c 0393     		str	r3, [sp, #12]
 341:Core/Src/main.c **** 
 3755              		.loc 1 341 3 is_stmt 1 view .LVU1267
 341:Core/Src/main.c **** 
 3756              		.loc 1 341 36 is_stmt 0 view .LVU1268
 3757 005e 0493     		str	r3, [sp, #16]
 343:Core/Src/main.c ****   {
 3758              		.loc 1 343 3 is_stmt 1 view .LVU1269
 343:Core/Src/main.c ****   {
 3759              		.loc 1 343 7 is_stmt 0 view .LVU1270
 3760 0060 0421     		movs	r1, #4
 3761 0062 6846     		mov	r0, sp
 3762 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3763              	.LVL405:
 343:Core/Src/main.c ****   {
 3764              		.loc 1 343 6 view .LVU1271
 3765 0068 30B9     		cbnz	r0, .L330
 347:Core/Src/main.c **** 
ARM GAS  /tmp/ccBVRzdb.s 			page 107


 3766              		.loc 1 347 1 view .LVU1272
 3767 006a 17B0     		add	sp, sp, #92
 3768              	.LCFI28:
 3769              		.cfi_remember_state
 3770              		.cfi_def_cfa_offset 4
 3771              		@ sp needed
 3772 006c 5DF804FB 		ldr	pc, [sp], #4
 3773              	.L328:
 3774              	.LCFI29:
 3775              		.cfi_restore_state
 312:Core/Src/main.c ****   }
 3776              		.loc 1 312 5 is_stmt 1 view .LVU1273
 3777 0070 FFF7FEFF 		bl	Error_Handler
 3778              	.LVL406:
 3779              	.L329:
 331:Core/Src/main.c ****   }
 3780              		.loc 1 331 5 view .LVU1274
 3781 0074 FFF7FEFF 		bl	Error_Handler
 3782              	.LVL407:
 3783              	.L330:
 345:Core/Src/main.c ****   }
 3784              		.loc 1 345 5 view .LVU1275
 3785 0078 FFF7FEFF 		bl	Error_Handler
 3786              	.LVL408:
 3787              		.cfi_endproc
 3788              	.LFE207:
 3790              		.global	SPI_RX_Buffer
 3791              		.global	SPI_TX_Buffer
 3792              		.global	ADC2_VAL
 3793              		.global	ADC1_VAL
 3794              		.global	I2C_TX_Buffer
 3795              		.global	huart2
 3796              		.global	hdma_spi2_rx
 3797              		.global	hdma_spi1_rx
 3798              		.global	hdma_spi1_tx
 3799              		.global	hspi2
 3800              		.global	hspi1
 3801              		.global	hi2c1
 3802              		.global	KEYPRESS
 3803              		.global	note_sequence
 3804              		.global	note_pos
 3805              		.section	.bss.ADC1_VAL,"aw",%nobits
 3806              		.align	2
 3807              		.set	.LANCHOR11,. + 0
 3810              	ADC1_VAL:
 3811 0000 00000000 		.space	32
 3811      00000000 
 3811      00000000 
 3811      00000000 
 3811      00000000 
 3812              		.section	.bss.ADC2_VAL,"aw",%nobits
 3813              		.align	2
 3814              		.set	.LANCHOR12,. + 0
 3817              	ADC2_VAL:
 3818 0000 00000000 		.space	32
 3818      00000000 
 3818      00000000 
ARM GAS  /tmp/ccBVRzdb.s 			page 108


 3818      00000000 
 3818      00000000 
 3819              		.section	.bss.I2C_TX_Buffer,"aw",%nobits
 3820              		.align	2
 3821              		.set	.LANCHOR9,. + 0
 3824              	I2C_TX_Buffer:
 3825 0000 0000     		.space	2
 3826              		.section	.bss.KEYPRESS,"aw",%nobits
 3827              		.align	1
 3828              		.set	.LANCHOR1,. + 0
 3831              	KEYPRESS:
 3832 0000 0000     		.space	2
 3833              		.section	.bss.SPI_RX_Buffer,"aw",%nobits
 3834              		.align	2
 3835              		.set	.LANCHOR10,. + 0
 3838              	SPI_RX_Buffer:
 3839 0000 000000   		.space	3
 3840              		.section	.bss.SPI_TX_Buffer,"aw",%nobits
 3841              		.align	2
 3842              		.set	.LANCHOR8,. + 0
 3845              	SPI_TX_Buffer:
 3846 0000 000000   		.space	3
 3847              		.section	.bss.blink_interval_ms,"aw",%nobits
 3848              		.align	2
 3849              		.set	.LANCHOR0,. + 0
 3852              	blink_interval_ms:
 3853 0000 00000000 		.space	4
 3854              		.section	.bss.hdma_spi1_rx,"aw",%nobits
 3855              		.align	2
 3858              	hdma_spi1_rx:
 3859 0000 00000000 		.space	72
 3859      00000000 
 3859      00000000 
 3859      00000000 
 3859      00000000 
 3860              		.section	.bss.hdma_spi1_tx,"aw",%nobits
 3861              		.align	2
 3864              	hdma_spi1_tx:
 3865 0000 00000000 		.space	72
 3865      00000000 
 3865      00000000 
 3865      00000000 
 3865      00000000 
 3866              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 3867              		.align	2
 3870              	hdma_spi2_rx:
 3871 0000 00000000 		.space	72
 3871      00000000 
 3871      00000000 
 3871      00000000 
 3871      00000000 
 3872              		.section	.bss.hi2c1,"aw",%nobits
 3873              		.align	2
 3874              		.set	.LANCHOR5,. + 0
 3877              	hi2c1:
 3878 0000 00000000 		.space	84
 3878      00000000 
ARM GAS  /tmp/ccBVRzdb.s 			page 109


 3878      00000000 
 3878      00000000 
 3878      00000000 
 3879              		.section	.bss.hspi1,"aw",%nobits
 3880              		.align	2
 3881              		.set	.LANCHOR4,. + 0
 3884              	hspi1:
 3885 0000 00000000 		.space	100
 3885      00000000 
 3885      00000000 
 3885      00000000 
 3885      00000000 
 3886              		.section	.bss.hspi2,"aw",%nobits
 3887              		.align	2
 3888              		.set	.LANCHOR6,. + 0
 3891              	hspi2:
 3892 0000 00000000 		.space	100
 3892      00000000 
 3892      00000000 
 3892      00000000 
 3892      00000000 
 3893              		.section	.bss.huart2,"aw",%nobits
 3894              		.align	2
 3895              		.set	.LANCHOR7,. + 0
 3898              	huart2:
 3899 0000 00000000 		.space	132
 3899      00000000 
 3899      00000000 
 3899      00000000 
 3899      00000000 
 3900              		.section	.bss.note_pos,"aw",%nobits
 3901              		.align	2
 3902              		.set	.LANCHOR2,. + 0
 3905              	note_pos:
 3906 0000 00000000 		.space	4
 3907              		.section	.data.note_sequence,"aw"
 3908              		.align	2
 3909              		.set	.LANCHOR3,. + 0
 3912              	note_sequence:
 3913 0000 4A4E5156 		.ascii	"JNQVZ]bf9=BEINQUX\\ada\\XUQNJEB>9>BEJNQVZ]afa]ZUQNI"
 3913      5A5D6266 
 3913      393D4245 
 3913      494E5155 
 3913      585C6164 
 3914 0031 44403D38 		.ascii	"D@=8=@DJNQVZ]bf"
 3914      3D40444A 
 3914      4E51565A 
 3914      5D6266
 3915              		.text
 3916              	.Letext0:
 3917              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 3918              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3919              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3920              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3921              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 3922              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3923              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
ARM GAS  /tmp/ccBVRzdb.s 			page 110


 3924              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 3925              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 3926              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 3927              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 3928              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 3929              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 3930              		.file 18 "Core/Inc/board_api.h"
 3931              		.file 19 "tinyusb/src/tusb.h"
 3932              		.file 20 "<built-in>"
ARM GAS  /tmp/ccBVRzdb.s 			page 111


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccBVRzdb.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccBVRzdb.s:622    .text.MX_GPIO_Init:00000000000002c8 $d
     /tmp/ccBVRzdb.s:631    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:637    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccBVRzdb.s:705    .text.MX_DMA_Init:0000000000000050 $d
     /tmp/ccBVRzdb.s:710    .text.tud_mount_cb:0000000000000000 $t
     /tmp/ccBVRzdb.s:717    .text.tud_mount_cb:0000000000000000 tud_mount_cb
     /tmp/ccBVRzdb.s:734    .text.tud_mount_cb:000000000000000c $d
     /tmp/ccBVRzdb.s:739    .text.tud_umount_cb:0000000000000000 $t
     /tmp/ccBVRzdb.s:746    .text.tud_umount_cb:0000000000000000 tud_umount_cb
     /tmp/ccBVRzdb.s:763    .text.tud_umount_cb:0000000000000008 $d
     /tmp/ccBVRzdb.s:768    .text.tud_suspend_cb:0000000000000000 $t
     /tmp/ccBVRzdb.s:775    .text.tud_suspend_cb:0000000000000000 tud_suspend_cb
     /tmp/ccBVRzdb.s:794    .text.tud_suspend_cb:000000000000000c $d
     /tmp/ccBVRzdb.s:799    .text.tud_resume_cb:0000000000000000 $t
     /tmp/ccBVRzdb.s:806    .text.tud_resume_cb:0000000000000000 tud_resume_cb
     /tmp/ccBVRzdb.s:837    .text.tud_resume_cb:0000000000000018 $d
     /tmp/ccBVRzdb.s:842    .text.MIDI_TASK:0000000000000000 $t
     /tmp/ccBVRzdb.s:849    .text.MIDI_TASK:0000000000000000 MIDI_TASK
     /tmp/ccBVRzdb.s:1007   .text.MIDI_TASK:000000000000007c $d
     /tmp/ccBVRzdb.s:1012   .text.midi_task:0000000000000000 $t
     /tmp/ccBVRzdb.s:1019   .text.midi_task:0000000000000000 midi_task
     /tmp/ccBVRzdb.s:1187   .text.midi_task:0000000000000080 $d
     /tmp/ccBVRzdb.s:1193   .text.READ_KEYPRESS:0000000000000000 $t
     /tmp/ccBVRzdb.s:1200   .text.READ_KEYPRESS:0000000000000000 READ_KEYPRESS
     /tmp/ccBVRzdb.s:1292   .text.READ_KEYPRESS:000000000000005c $d
     /tmp/ccBVRzdb.s:1297   .text.HALL_TO_DAC:0000000000000000 $t
     /tmp/ccBVRzdb.s:1304   .text.HALL_TO_DAC:0000000000000000 HALL_TO_DAC
     /tmp/ccBVRzdb.s:2804   .text.DAC_TO_MIDI:0000000000000000 $t
     /tmp/ccBVRzdb.s:2811   .text.DAC_TO_MIDI:0000000000000000 DAC_TO_MIDI
     /tmp/ccBVRzdb.s:2850   .text.Error_Handler:0000000000000000 $t
     /tmp/ccBVRzdb.s:2857   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccBVRzdb.s:2889   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:2895   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccBVRzdb.s:2971   .text.MX_SPI1_Init:0000000000000040 $d
     /tmp/ccBVRzdb.s:2977   .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:2983   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccBVRzdb.s:3065   .text.MX_I2C1_Init:0000000000000048 $d
     /tmp/ccBVRzdb.s:3072   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:3078   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccBVRzdb.s:3154   .text.MX_SPI2_Init:0000000000000040 $d
     /tmp/ccBVRzdb.s:3160   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccBVRzdb.s:3166   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccBVRzdb.s:3227   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccBVRzdb.s:3233   .text.main:0000000000000000 $t
     /tmp/ccBVRzdb.s:3240   .text.main:0000000000000000 main
     /tmp/ccBVRzdb.s:3639   .text.main:00000000000001f0 $d
     /tmp/ccBVRzdb.s:3651   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccBVRzdb.s:3658   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccBVRzdb.s:3838   .bss.SPI_RX_Buffer:0000000000000000 SPI_RX_Buffer
     /tmp/ccBVRzdb.s:3845   .bss.SPI_TX_Buffer:0000000000000000 SPI_TX_Buffer
     /tmp/ccBVRzdb.s:3817   .bss.ADC2_VAL:0000000000000000 ADC2_VAL
     /tmp/ccBVRzdb.s:3810   .bss.ADC1_VAL:0000000000000000 ADC1_VAL
     /tmp/ccBVRzdb.s:3824   .bss.I2C_TX_Buffer:0000000000000000 I2C_TX_Buffer
ARM GAS  /tmp/ccBVRzdb.s 			page 112


     /tmp/ccBVRzdb.s:3898   .bss.huart2:0000000000000000 huart2
     /tmp/ccBVRzdb.s:3870   .bss.hdma_spi2_rx:0000000000000000 hdma_spi2_rx
     /tmp/ccBVRzdb.s:3858   .bss.hdma_spi1_rx:0000000000000000 hdma_spi1_rx
     /tmp/ccBVRzdb.s:3864   .bss.hdma_spi1_tx:0000000000000000 hdma_spi1_tx
     /tmp/ccBVRzdb.s:3891   .bss.hspi2:0000000000000000 hspi2
     /tmp/ccBVRzdb.s:3884   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccBVRzdb.s:3877   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccBVRzdb.s:3831   .bss.KEYPRESS:0000000000000000 KEYPRESS
     /tmp/ccBVRzdb.s:3912   .data.note_sequence:0000000000000000 note_sequence
     /tmp/ccBVRzdb.s:3905   .bss.note_pos:0000000000000000 note_pos
     /tmp/ccBVRzdb.s:3806   .bss.ADC1_VAL:0000000000000000 $d
     /tmp/ccBVRzdb.s:3813   .bss.ADC2_VAL:0000000000000000 $d
     /tmp/ccBVRzdb.s:3820   .bss.I2C_TX_Buffer:0000000000000000 $d
     /tmp/ccBVRzdb.s:3827   .bss.KEYPRESS:0000000000000000 $d
     /tmp/ccBVRzdb.s:3834   .bss.SPI_RX_Buffer:0000000000000000 $d
     /tmp/ccBVRzdb.s:3841   .bss.SPI_TX_Buffer:0000000000000000 $d
     /tmp/ccBVRzdb.s:3848   .bss.blink_interval_ms:0000000000000000 $d
     /tmp/ccBVRzdb.s:3852   .bss.blink_interval_ms:0000000000000000 blink_interval_ms
     /tmp/ccBVRzdb.s:3855   .bss.hdma_spi1_rx:0000000000000000 $d
     /tmp/ccBVRzdb.s:3861   .bss.hdma_spi1_tx:0000000000000000 $d
     /tmp/ccBVRzdb.s:3867   .bss.hdma_spi2_rx:0000000000000000 $d
     /tmp/ccBVRzdb.s:3873   .bss.hi2c1:0000000000000000 $d
     /tmp/ccBVRzdb.s:3880   .bss.hspi1:0000000000000000 $d
     /tmp/ccBVRzdb.s:3887   .bss.hspi2:0000000000000000 $d
     /tmp/ccBVRzdb.s:3894   .bss.huart2:0000000000000000 $d
     /tmp/ccBVRzdb.s:3901   .bss.note_pos:0000000000000000 $d
     /tmp/ccBVRzdb.s:3908   .data.note_sequence:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
tud_mounted
tud_midi_n_packet_read
tud_midi_n_available
tud_midi_n_stream_write
HAL_Delay
HAL_SPI_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_Init
board_init
tusb_init
HAL_I2C_Master_Transmit
HAL_SPI_TransmitReceive
HAL_GPIO_ReadPin
tud_task_ext
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
