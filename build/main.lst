ARM GAS  /tmp/ccn5IMCN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB215:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "tusb.h"
  25:Core/Src/main.c **** #include "tusb_config.h"
  26:Core/Src/main.c **** #include "board_api.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define SPI_LENGTH 3
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** enum  {
  40:Core/Src/main.c ****   BLINK_NOT_MOUNTED = 250,
  41:Core/Src/main.c ****   BLINK_MOUNTED = 1000,
  42:Core/Src/main.c ****   BLINK_SUSPENDED = 2500,
  43:Core/Src/main.c **** };
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** static uint32_t blink_interval_ms = BLINK_NOT_MOUNTED;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** // Variable that holds the current position in the sequence.
  48:Core/Src/main.c **** uint32_t note_pos = 0;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** // Store example melody as an array of note values
  51:Core/Src/main.c **** uint8_t note_sequence[] =
  52:Core/Src/main.c **** {
  53:Core/Src/main.c ****   74,78,81,86,90,93,98,102,57,61,66,69,73,78,81,85,88,92,97,100,97,92,88,85,81,78,
  54:Core/Src/main.c ****   74,69,66,62,57,62,66,69,74,78,81,86,90,93,97,102,97,93,90,85,81,78,73,68,64,61,
  55:Core/Src/main.c ****   56,61,64,68,74,78,81,86,90,93,98,102
  56:Core/Src/main.c **** };
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PD */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN PM */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PM */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  66:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  69:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  70:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  71:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  72:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** UART_HandleTypeDef huart2;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE BEGIN PV */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** //uint16_t I2C_TX_Buffer[]; //buffer for i2c data (wrong?)
  79:Core/Src/main.c **** uint8_t I2C_TX_Buffer[ 2 ]; //buffer for i2c data
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** uint32_t ADC1_VAL[ 8 ]; // one element for each ADC channel (one device)
  82:Core/Src/main.c **** uint32_t ADC2_VAL[ 8 ]; // one element for each ADC channel (one device)
  83:Core/Src/main.c **** //uint32_t adc_val;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** uint8_t SPI_TX_Buffer[ SPI_LENGTH ];
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** uint8_t SPI_RX_Buffer[ SPI_LENGTH ];
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END PV */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/main.c **** void SystemClock_Config(void);
  94:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  95:Core/Src/main.c **** static void MX_GPIO_Init(void);
  96:Core/Src/main.c **** static void MX_DMA_Init(void);
  97:Core/Src/main.c **** static void MX_SPI1_Init(void);
  98:Core/Src/main.c **** static void MX_I2C1_Init(void);
  99:Core/Src/main.c **** static void MX_USB_OTG_FS_USB_Init(void);
 100:Core/Src/main.c **** static void MX_SPI2_Init(void);
 101:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 102:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** void midi_task(void);
 105:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num);
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* USER CODE END PFP */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 110:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief  The application entry point.
 116:Core/Src/main.c ****   * @retval int
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** int main(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /* Configure the peripherals common clocks */
 137:Core/Src/main.c ****   PeriphCommonClock_Config();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END SysInit */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Initialize all configured peripherals */
 144:Core/Src/main.c ****   MX_GPIO_Init();
 145:Core/Src/main.c ****   MX_DMA_Init();
ARM GAS  /tmp/ccn5IMCN.s 			page 4


 146:Core/Src/main.c ****   MX_SPI1_Init();
 147:Core/Src/main.c ****   MX_I2C1_Init();
 148:Core/Src/main.c ****   MX_USB_OTG_FS_USB_Init();
 149:Core/Src/main.c ****   MX_SPI2_Init();
 150:Core/Src/main.c ****   MX_USART2_UART_Init();
 151:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* INITIALIZE TINYUSB */
 154:Core/Src/main.c ****   //board_init();
 155:Core/Src/main.c ****   tusb_init();
 156:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   // initialize transmit buffer for test case
 159:Core/Src/main.c ****   // START BIT
 160:Core/Src/main.c ****   SPI_TX_Buffer[0] = 0b00000001;
 161:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 162:Core/Src/main.c ****   SPI_TX_Buffer[1] = 0b10000000; // single ended, ch0 (top 4 bits)
 163:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 164:Core/Src/main.c ****   SPI_TX_Buffer[2] = 0b00000000;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   // set slave address of i2c device
 167:Core/Src/main.c ****   uint8_t slave_address = 0b01011000;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   //reset dac registers
 170:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 171:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 172:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 173:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   int octave_num = 2;
 176:Core/Src/main.c ****   bool flag1 = false;
 177:Core/Src/main.c ****   bool flag2 = false;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   // MIDI == 0 , DAC == 1
 180:Core/Src/main.c ****   bool output_state = 0;
 181:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 182:Core/Src/main.c ****   //volatile int PA_2_VAL = 0;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /*
 185:Core/Src/main.c ****   I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 
 186:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 187:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 188:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   //I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 -- put in header file!
 192:Core/Src/main.c ****   //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 193:Core/Src/main.c ****   //HAL_Delay(100);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   //int i = 0;
 196:Core/Src/main.c ****   /* USER CODE END 2 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* Infinite loop */
 199:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 200:Core/Src/main.c ****   while (1) 
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 5


 203:Core/Src/main.c ****     //PA_1_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_1);
 204:Core/Src/main.c ****     //PA_2_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_2);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) && !flag1){
 207:Core/Src/main.c ****       octave_num = octave_num + 1;
 208:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 209:Core/Src/main.c ****       flag1 = true;
 210:Core/Src/main.c ****     }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) flag1 = false;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) && !flag2){
 215:Core/Src/main.c ****       octave_num = octave_num - 1;
 216:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 217:Core/Src/main.c ****       flag2 = true;
 218:Core/Src/main.c ****     }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2)) flag2 = false;
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     // SPI ADC TEST (IN BLOCKING MODE)
 223:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 224:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 225:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 226:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_RESET);
 227:Core/Src/main.c ****     // one full duplex interaction
 228:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 229:Core/Src/main.c ****     // now need to parse data
 230:Core/Src/main.c ****     ADC1_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 231:Core/Src/main.c ****     // default CS to be high
 232:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 233:Core/Src/main.c ****     //if(i == 7) i = 0;
 234:Core/Src/main.c ****     //else i++; 
 235:Core/Src/main.c ****     }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 238:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 239:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 240:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_RESET);
 241:Core/Src/main.c ****     // one full duplex interaction
 242:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 243:Core/Src/main.c ****     // now need to parse data
 244:Core/Src/main.c ****     ADC2_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 245:Core/Src/main.c ****     // default CS to be high
 246:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 247:Core/Src/main.c ****     }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****     /* CHECK OUTPUT SWITCH, SEND 0x00 from DAC if in MIDI mode*/
 250:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_8)){
 251:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 252:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 253:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 254:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 255:Core/Src/main.c ****     }
 256:Core/Src/main.c ****     /* EVENTUALLY should send DAC = 0 (set gate also eventually) AND midi signal */
 257:Core/Src/main.c ****     else{
 258:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 259:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
ARM GAS  /tmp/ccn5IMCN.s 			page 6


 260:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 261:Core/Src/main.c ****     }
 262:Core/Src/main.c ****     /* I2C protocol test -- move test cases to auxiliary files */
 263:Core/Src/main.c ****     
 264:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 265:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0xFF; // data byte, full VREF
 266:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 267:Core/Src/main.c ****     //HAL_Delay(1000);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 270:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x80; // data byte, half VREF
 271:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 272:Core/Src/main.c ****     //HAL_Delay(1000);
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 275:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x0; // data byte, GND
 276:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 277:Core/Src/main.c ****     //HAL_Delay(1000);
 278:Core/Src/main.c ****     
 279:Core/Src/main.c ****     tud_task(); // tinyusb device task
 280:Core/Src/main.c ****     midi_task();
 281:Core/Src/main.c ****     HAL_Delay(1000);
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****     /* USER CODE END WHILE */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c ****   /* USER CODE END 3 */
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief System Clock Configuration
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** void SystemClock_Config(void)
 295:Core/Src/main.c **** {
 296:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 297:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 300:Core/Src/main.c ****   */
 301:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 307:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 310:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 312:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
ARM GAS  /tmp/ccn5IMCN.s 			page 7


 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 320:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 328:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 329:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 330:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c **** }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** /**
 341:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 342:Core/Src/main.c ****   * @retval None
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 345:Core/Src/main.c **** {
 346:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /** Initializes the peripherals clock
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 351:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 352:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 353:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 354:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 355:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 356:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 357:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 358:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 359:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c **** }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 367:Core/Src/main.c ****   * @param None
 368:Core/Src/main.c ****   * @retval None
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c **** static void MX_I2C1_Init(void)
 371:Core/Src/main.c **** {
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
ARM GAS  /tmp/ccn5IMCN.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 380:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 381:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 382:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 383:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 384:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 385:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 386:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 387:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 388:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 389:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /** Configure Analogue filter
 395:Core/Src/main.c ****   */
 396:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     Error_Handler();
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /** Configure Digital filter
 402:Core/Src/main.c ****   */
 403:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 415:Core/Src/main.c ****   * @param None
 416:Core/Src/main.c ****   * @retval None
 417:Core/Src/main.c ****   */
 418:Core/Src/main.c **** static void MX_SPI1_Init(void)
 419:Core/Src/main.c **** {
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 428:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 429:Core/Src/main.c ****   hspi1.Instance = SPI1;
 430:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  /tmp/ccn5IMCN.s 			page 9


 431:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 432:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 433:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 434:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 435:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 436:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 437:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 438:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 439:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 440:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 441:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 442:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 443:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 444:Core/Src/main.c ****   {
 445:Core/Src/main.c ****     Error_Handler();
 446:Core/Src/main.c ****   }
 447:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 455:Core/Src/main.c ****   * @param None
 456:Core/Src/main.c ****   * @retval None
 457:Core/Src/main.c ****   */
 458:Core/Src/main.c **** static void MX_SPI2_Init(void)
 459:Core/Src/main.c **** {
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 468:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 469:Core/Src/main.c ****   hspi2.Instance = SPI2;
 470:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 471:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 472:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 473:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 474:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 475:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 476:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 477:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 478:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 479:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 480:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 481:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 482:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 483:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     Error_Handler();
 486:Core/Src/main.c ****   }
 487:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
ARM GAS  /tmp/ccn5IMCN.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** /**
 494:Core/Src/main.c ****   * @brief USART2 Initialization Function
 495:Core/Src/main.c ****   * @param None
 496:Core/Src/main.c ****   * @retval None
 497:Core/Src/main.c ****   */
 498:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 499:Core/Src/main.c **** {
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 508:Core/Src/main.c ****   huart2.Instance = USART2;
 509:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 510:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 511:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 512:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 513:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 514:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 515:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 516:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 517:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 518:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief USB_OTG_FS Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_USB_OTG_FS_USB_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 0 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 1 */
 543:Core/Src/main.c ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 544:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 11


 545:Core/Src/main.c ****   /* USER CODE END USB_OTG_FS_Init 2 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** }
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /**
 550:Core/Src/main.c ****   * Enable DMA controller clock
 551:Core/Src/main.c ****   */
 552:Core/Src/main.c **** static void MX_DMA_Init(void)
 553:Core/Src/main.c **** {
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* DMA controller clock enable */
 556:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* DMA interrupt init */
 559:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 560:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 561:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 562:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 563:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 564:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 565:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 566:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 567:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** }
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** /**
 572:Core/Src/main.c ****   * @brief GPIO Initialization Function
 573:Core/Src/main.c ****   * @param None
 574:Core/Src/main.c ****   * @retval None
 575:Core/Src/main.c ****   */
 576:Core/Src/main.c **** static void MX_GPIO_Init(void)
 577:Core/Src/main.c **** {
  28              		.loc 1 577 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8DB0     		sub	sp, sp, #52
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
 578:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 578 3 view .LVU1
  48              		.loc 1 578 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccn5IMCN.s 			page 12


  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 581:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 581 3 is_stmt 1 view .LVU3
  56              	.LBB16:
  57              		.loc 1 581 3 view .LVU4
  58              		.loc 1 581 3 view .LVU5
  59 0012 AD4B     		ldr	r3, .L3
  60 0014 DA6C     		ldr	r2, [r3, #76]
  61 0016 42F01002 		orr	r2, r2, #16
  62 001a DA64     		str	r2, [r3, #76]
  63              		.loc 1 581 3 view .LVU6
  64 001c DA6C     		ldr	r2, [r3, #76]
  65 001e 02F01002 		and	r2, r2, #16
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 581 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE16:
  70              		.loc 1 581 3 view .LVU8
 582:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  71              		.loc 1 582 3 view .LVU9
  72              	.LBB17:
  73              		.loc 1 582 3 view .LVU10
  74              		.loc 1 582 3 view .LVU11
  75 0026 DA6C     		ldr	r2, [r3, #76]
  76 0028 42F00402 		orr	r2, r2, #4
  77 002c DA64     		str	r2, [r3, #76]
  78              		.loc 1 582 3 view .LVU12
  79 002e DA6C     		ldr	r2, [r3, #76]
  80 0030 02F00402 		and	r2, r2, #4
  81 0034 0292     		str	r2, [sp, #8]
  82              		.loc 1 582 3 view .LVU13
  83 0036 029A     		ldr	r2, [sp, #8]
  84              	.LBE17:
  85              		.loc 1 582 3 view .LVU14
 583:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 583 3 view .LVU15
  87              	.LBB18:
  88              		.loc 1 583 3 view .LVU16
  89              		.loc 1 583 3 view .LVU17
  90 0038 DA6C     		ldr	r2, [r3, #76]
  91 003a 42F08002 		orr	r2, r2, #128
  92 003e DA64     		str	r2, [r3, #76]
  93              		.loc 1 583 3 view .LVU18
  94 0040 DA6C     		ldr	r2, [r3, #76]
  95 0042 02F08002 		and	r2, r2, #128
  96 0046 0392     		str	r2, [sp, #12]
  97              		.loc 1 583 3 view .LVU19
  98 0048 039A     		ldr	r2, [sp, #12]
  99              	.LBE18:
 100              		.loc 1 583 3 view .LVU20
 584:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 101              		.loc 1 584 3 view .LVU21
ARM GAS  /tmp/ccn5IMCN.s 			page 13


 102              	.LBB19:
 103              		.loc 1 584 3 view .LVU22
 104              		.loc 1 584 3 view .LVU23
 105 004a DA6C     		ldr	r2, [r3, #76]
 106 004c 42F00102 		orr	r2, r2, #1
 107 0050 DA64     		str	r2, [r3, #76]
 108              		.loc 1 584 3 view .LVU24
 109 0052 DA6C     		ldr	r2, [r3, #76]
 110 0054 02F00102 		and	r2, r2, #1
 111 0058 0492     		str	r2, [sp, #16]
 112              		.loc 1 584 3 view .LVU25
 113 005a 049A     		ldr	r2, [sp, #16]
 114              	.LBE19:
 115              		.loc 1 584 3 view .LVU26
 585:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 116              		.loc 1 585 3 view .LVU27
 117              	.LBB20:
 118              		.loc 1 585 3 view .LVU28
 119              		.loc 1 585 3 view .LVU29
 120 005c DA6C     		ldr	r2, [r3, #76]
 121 005e 42F00202 		orr	r2, r2, #2
 122 0062 DA64     		str	r2, [r3, #76]
 123              		.loc 1 585 3 view .LVU30
 124 0064 DA6C     		ldr	r2, [r3, #76]
 125 0066 02F00202 		and	r2, r2, #2
 126 006a 0592     		str	r2, [sp, #20]
 127              		.loc 1 585 3 view .LVU31
 128 006c 059A     		ldr	r2, [sp, #20]
 129              	.LBE20:
 130              		.loc 1 585 3 view .LVU32
 586:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 131              		.loc 1 586 3 view .LVU33
 132              	.LBB21:
 133              		.loc 1 586 3 view .LVU34
 134              		.loc 1 586 3 view .LVU35
 135 006e DA6C     		ldr	r2, [r3, #76]
 136 0070 42F00802 		orr	r2, r2, #8
 137 0074 DA64     		str	r2, [r3, #76]
 138              		.loc 1 586 3 view .LVU36
 139 0076 DB6C     		ldr	r3, [r3, #76]
 140 0078 03F00803 		and	r3, r3, #8
 141 007c 0693     		str	r3, [sp, #24]
 142              		.loc 1 586 3 view .LVU37
 143 007e 069B     		ldr	r3, [sp, #24]
 144              	.LBE21:
 145              		.loc 1 586 3 view .LVU38
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 589:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, AUDIO_RST_Pin|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 146              		.loc 1 589 3 view .LVU39
 147 0080 924F     		ldr	r7, .L3+4
 148 0082 2246     		mov	r2, r4
 149 0084 41F60961 		movw	r1, #7689
 150 0088 3846     		mov	r0, r7
 151 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL0:
 590:Core/Src/main.c ****                           |GPIO_PIN_12|XL_CS_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccn5IMCN.s 			page 14


 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 593:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 153              		.loc 1 593 3 view .LVU40
 154 008e 2246     		mov	r2, r4
 155 0090 2021     		movs	r1, #32
 156 0092 4FF09040 		mov	r0, #1207959552
 157 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 596:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD_R_Pin|M3V3_REG_ON_Pin, GPIO_PIN_RESET);
 159              		.loc 1 596 3 view .LVU41
 160 009a DFF83882 		ldr	r8, .L3+12
 161 009e 2246     		mov	r2, r4
 162 00a0 0C21     		movs	r1, #12
 163 00a2 4046     		mov	r0, r8
 164 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 599:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_VBUS_GPIO_Port, OTG_FS_VBUS_Pin, GPIO_PIN_RESET);
 166              		.loc 1 599 3 view .LVU42
 167 00a8 DFF82CA2 		ldr	r10, .L3+16
 168 00ac 2246     		mov	r2, r4
 169 00ae 4FF40061 		mov	r1, #2048
 170 00b2 5046     		mov	r0, r10
 171 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL3:
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 602:Core/Src/main.c ****   HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_RESET);
 173              		.loc 1 602 3 view .LVU43
 174 00b8 2246     		mov	r2, r4
 175 00ba 8021     		movs	r1, #128
 176 00bc 8448     		ldr	r0, .L3+8
 177 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL4:
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /*Configure GPIO pins : SAI1_MCK_Pin SAI1_FS_Pin SAI1_SCK_Pin SAI1_SD_Pin
 605:Core/Src/main.c ****                            AUDIO_DIN_Pin */
 606:Core/Src/main.c ****   GPIO_InitStruct.Pin = SAI1_MCK_Pin|SAI1_FS_Pin|SAI1_SCK_Pin|SAI1_SD_Pin
 179              		.loc 1 606 3 view .LVU44
 180              		.loc 1 606 23 is_stmt 0 view .LVU45
 181 00c2 F423     		movs	r3, #244
 182 00c4 0793     		str	r3, [sp, #28]
 607:Core/Src/main.c ****                           |AUDIO_DIN_Pin;
 608:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 183              		.loc 1 608 3 is_stmt 1 view .LVU46
 184              		.loc 1 608 24 is_stmt 0 view .LVU47
 185 00c6 0226     		movs	r6, #2
 186 00c8 0896     		str	r6, [sp, #32]
 609:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 609 3 is_stmt 1 view .LVU48
 188              		.loc 1 609 24 is_stmt 0 view .LVU49
 189 00ca 0994     		str	r4, [sp, #36]
 610:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  /tmp/ccn5IMCN.s 			page 15


 190              		.loc 1 610 3 is_stmt 1 view .LVU50
 191              		.loc 1 610 25 is_stmt 0 view .LVU51
 192 00cc 4FF00309 		mov	r9, #3
 193 00d0 CDF82890 		str	r9, [sp, #40]
 611:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_SAI1;
 194              		.loc 1 611 3 is_stmt 1 view .LVU52
 195              		.loc 1 611 29 is_stmt 0 view .LVU53
 196 00d4 0D23     		movs	r3, #13
 197 00d6 0B93     		str	r3, [sp, #44]
 612:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 198              		.loc 1 612 3 is_stmt 1 view .LVU54
 199 00d8 07A9     		add	r1, sp, #28
 200 00da 3846     		mov	r0, r7
 201 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL5:
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****   /*Configure GPIO pin : AUDIO_RST_Pin */
 615:Core/Src/main.c ****   GPIO_InitStruct.Pin = AUDIO_RST_Pin;
 203              		.loc 1 615 3 view .LVU55
 204              		.loc 1 615 23 is_stmt 0 view .LVU56
 205 00e0 0823     		movs	r3, #8
 206 00e2 0793     		str	r3, [sp, #28]
 616:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 616 3 is_stmt 1 view .LVU57
 208              		.loc 1 616 24 is_stmt 0 view .LVU58
 209 00e4 0125     		movs	r5, #1
 210 00e6 0895     		str	r5, [sp, #32]
 617:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 211              		.loc 1 617 3 is_stmt 1 view .LVU59
 212              		.loc 1 617 24 is_stmt 0 view .LVU60
 213 00e8 0994     		str	r4, [sp, #36]
 618:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 214              		.loc 1 618 3 is_stmt 1 view .LVU61
 215              		.loc 1 618 25 is_stmt 0 view .LVU62
 216 00ea 0A96     		str	r6, [sp, #40]
 619:Core/Src/main.c ****   HAL_GPIO_Init(AUDIO_RST_GPIO_Port, &GPIO_InitStruct);
 217              		.loc 1 619 3 is_stmt 1 view .LVU63
 218 00ec 07A9     		add	r1, sp, #28
 219 00ee 3846     		mov	r0, r7
 220 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL6:
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   /*Configure GPIO pins : MFX_IRQ_OUT_Pin OTG_FS_OverCurrent_Pin */
 622:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_IRQ_OUT_Pin|OTG_FS_OverCurrent_Pin;
 222              		.loc 1 622 3 view .LVU64
 223              		.loc 1 622 23 is_stmt 0 view .LVU65
 224 00f4 4FF41053 		mov	r3, #9216
 225 00f8 0793     		str	r3, [sp, #28]
 623:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 226              		.loc 1 623 3 is_stmt 1 view .LVU66
 227              		.loc 1 623 24 is_stmt 0 view .LVU67
 228 00fa 4FF4901B 		mov	fp, #1179648
 229 00fe CDF820B0 		str	fp, [sp, #32]
 624:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 230              		.loc 1 624 3 is_stmt 1 view .LVU68
 231              		.loc 1 624 24 is_stmt 0 view .LVU69
 232 0102 0994     		str	r4, [sp, #36]
ARM GAS  /tmp/ccn5IMCN.s 			page 16


 625:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 233              		.loc 1 625 3 is_stmt 1 view .LVU70
 234 0104 07A9     		add	r1, sp, #28
 235 0106 5046     		mov	r0, r10
 236 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 237              	.LVL7:
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /*Configure GPIO pins : PC0 MAG_INT_Pin MAG_DRDY_Pin PC6
 628:Core/Src/main.c ****                            PC7 PC8 PC9 */
 629:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|MAG_INT_Pin|MAG_DRDY_Pin|GPIO_PIN_6
 238              		.loc 1 629 3 view .LVU71
 239              		.loc 1 629 23 is_stmt 0 view .LVU72
 240 010c 40F2C733 		movw	r3, #967
 241 0110 0793     		str	r3, [sp, #28]
 630:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 242              		.loc 1 631 3 is_stmt 1 view .LVU73
 243              		.loc 1 631 24 is_stmt 0 view .LVU74
 244 0112 0894     		str	r4, [sp, #32]
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 632 3 is_stmt 1 view .LVU75
 246              		.loc 1 632 24 is_stmt 0 view .LVU76
 247 0114 0994     		str	r4, [sp, #36]
 633:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 248              		.loc 1 633 3 is_stmt 1 view .LVU77
 249 0116 07A9     		add	r1, sp, #28
 250 0118 5046     		mov	r0, r10
 251 011a FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL8:
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /*Configure GPIO pins : VLCD_Pin SEG22_Pin SEG1_Pin */
 636:Core/Src/main.c ****   GPIO_InitStruct.Pin = VLCD_Pin|SEG22_Pin|SEG1_Pin;
 253              		.loc 1 636 3 view .LVU78
 254              		.loc 1 636 23 is_stmt 0 view .LVU79
 255 011e 3823     		movs	r3, #56
 256 0120 0793     		str	r3, [sp, #28]
 637:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 257              		.loc 1 637 3 is_stmt 1 view .LVU80
 258              		.loc 1 637 24 is_stmt 0 view .LVU81
 259 0122 0896     		str	r6, [sp, #32]
 638:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 638 3 is_stmt 1 view .LVU82
 261              		.loc 1 638 24 is_stmt 0 view .LVU83
 262 0124 0994     		str	r4, [sp, #36]
 639:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 263              		.loc 1 639 3 is_stmt 1 view .LVU84
 264              		.loc 1 639 25 is_stmt 0 view .LVU85
 265 0126 0A94     		str	r4, [sp, #40]
 640:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 266              		.loc 1 640 3 is_stmt 1 view .LVU86
 267              		.loc 1 640 29 is_stmt 0 view .LVU87
 268 0128 0B23     		movs	r3, #11
 269 012a 0B93     		str	r3, [sp, #44]
 641:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 270              		.loc 1 641 3 is_stmt 1 view .LVU88
 271 012c 07A9     		add	r1, sp, #28
 272 012e 5046     		mov	r0, r10
ARM GAS  /tmp/ccn5IMCN.s 			page 17


 273 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 274              	.LVL9:
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 */
 644:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 275              		.loc 1 644 3 view .LVU89
 276              		.loc 1 644 23 is_stmt 0 view .LVU90
 277 0134 0723     		movs	r3, #7
 278 0136 0793     		str	r3, [sp, #28]
 645:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 279              		.loc 1 645 3 is_stmt 1 view .LVU91
 280              		.loc 1 645 24 is_stmt 0 view .LVU92
 281 0138 0894     		str	r4, [sp, #32]
 646:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 282              		.loc 1 646 3 is_stmt 1 view .LVU93
 283              		.loc 1 646 24 is_stmt 0 view .LVU94
 284 013a 0995     		str	r5, [sp, #36]
 647:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 285              		.loc 1 647 3 is_stmt 1 view .LVU95
 286 013c 07A9     		add	r1, sp, #28
 287 013e 4FF09040 		mov	r0, #1207959552
 288 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL10:
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /*Configure GPIO pin : JOY_UP_Pin */
 650:Core/Src/main.c ****   GPIO_InitStruct.Pin = JOY_UP_Pin;
 290              		.loc 1 650 3 view .LVU96
 291              		.loc 1 650 23 is_stmt 0 view .LVU97
 292 0146 0823     		movs	r3, #8
 293 0148 0793     		str	r3, [sp, #28]
 651:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 294              		.loc 1 651 3 is_stmt 1 view .LVU98
 295              		.loc 1 651 24 is_stmt 0 view .LVU99
 296 014a 0894     		str	r4, [sp, #32]
 652:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 297              		.loc 1 652 3 is_stmt 1 view .LVU100
 298              		.loc 1 652 24 is_stmt 0 view .LVU101
 299 014c 0996     		str	r6, [sp, #36]
 653:Core/Src/main.c ****   HAL_GPIO_Init(JOY_UP_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 653 3 is_stmt 1 view .LVU102
 301 014e 07A9     		add	r1, sp, #28
 302 0150 4FF09040 		mov	r0, #1207959552
 303 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL11:
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   /*Configure GPIO pin : MFX_WAKEUP_Pin */
 656:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_WAKEUP_Pin;
 305              		.loc 1 656 3 view .LVU103
 306              		.loc 1 656 23 is_stmt 0 view .LVU104
 307 0158 1023     		movs	r3, #16
 308 015a 0793     		str	r3, [sp, #28]
 657:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 309              		.loc 1 657 3 is_stmt 1 view .LVU105
 310              		.loc 1 657 24 is_stmt 0 view .LVU106
 311 015c CDF820B0 		str	fp, [sp, #32]
 658:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 312              		.loc 1 658 3 is_stmt 1 view .LVU107
ARM GAS  /tmp/ccn5IMCN.s 			page 18


 313              		.loc 1 658 24 is_stmt 0 view .LVU108
 314 0160 0994     		str	r4, [sp, #36]
 659:Core/Src/main.c ****   HAL_GPIO_Init(MFX_WAKEUP_GPIO_Port, &GPIO_InitStruct);
 315              		.loc 1 659 3 is_stmt 1 view .LVU109
 316 0162 07A9     		add	r1, sp, #28
 317 0164 4FF09040 		mov	r0, #1207959552
 318 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL12:
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 662:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 320              		.loc 1 662 3 view .LVU110
 321              		.loc 1 662 23 is_stmt 0 view .LVU111
 322 016c 2023     		movs	r3, #32
 323 016e 0793     		str	r3, [sp, #28]
 663:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 324              		.loc 1 663 3 is_stmt 1 view .LVU112
 325              		.loc 1 663 24 is_stmt 0 view .LVU113
 326 0170 0895     		str	r5, [sp, #32]
 664:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 664 3 is_stmt 1 view .LVU114
 328              		.loc 1 664 24 is_stmt 0 view .LVU115
 329 0172 0994     		str	r4, [sp, #36]
 665:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 330              		.loc 1 665 3 is_stmt 1 view .LVU116
 331              		.loc 1 665 25 is_stmt 0 view .LVU117
 332 0174 0A94     		str	r4, [sp, #40]
 666:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 333              		.loc 1 666 3 is_stmt 1 view .LVU118
 334 0176 07A9     		add	r1, sp, #28
 335 0178 4FF09040 		mov	r0, #1207959552
 336 017c FFF7FEFF 		bl	HAL_GPIO_Init
 337              	.LVL13:
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****   /*Configure GPIO pins : SEG21_Pin SEG2_Pin SEG20_Pin SEG3_Pin
 669:Core/Src/main.c ****                            SEG19_Pin SEG4_Pin SEG11_Pin SEG12_Pin
 670:Core/Src/main.c ****                            COM3_Pin */
 671:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG21_Pin|SEG2_Pin|SEG20_Pin|SEG3_Pin
 338              		.loc 1 671 3 view .LVU119
 339              		.loc 1 671 23 is_stmt 0 view .LVU120
 340 0180 4FF23323 		movw	r3, #62003
 341 0184 0793     		str	r3, [sp, #28]
 672:Core/Src/main.c ****                           |SEG19_Pin|SEG4_Pin|SEG11_Pin|SEG12_Pin
 673:Core/Src/main.c ****                           |COM3_Pin;
 674:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 342              		.loc 1 674 3 is_stmt 1 view .LVU121
 343              		.loc 1 674 24 is_stmt 0 view .LVU122
 344 0186 0896     		str	r6, [sp, #32]
 675:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 675 3 is_stmt 1 view .LVU123
 346              		.loc 1 675 24 is_stmt 0 view .LVU124
 347 0188 0994     		str	r4, [sp, #36]
 676:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 348              		.loc 1 676 3 is_stmt 1 view .LVU125
 349              		.loc 1 676 25 is_stmt 0 view .LVU126
 350 018a 0A94     		str	r4, [sp, #40]
 677:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
ARM GAS  /tmp/ccn5IMCN.s 			page 19


 351              		.loc 1 677 3 is_stmt 1 view .LVU127
 352              		.loc 1 677 29 is_stmt 0 view .LVU128
 353 018c 0B23     		movs	r3, #11
 354 018e 0B93     		str	r3, [sp, #44]
 678:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 355              		.loc 1 678 3 is_stmt 1 view .LVU129
 356 0190 07A9     		add	r1, sp, #28
 357 0192 4046     		mov	r0, r8
 358 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL14:
 679:Core/Src/main.c **** 
 680:Core/Src/main.c ****   /*Configure GPIO pin : LD_R_Pin */
 681:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD_R_Pin;
 360              		.loc 1 681 3 view .LVU130
 361              		.loc 1 681 23 is_stmt 0 view .LVU131
 362 0198 0423     		movs	r3, #4
 363 019a 0793     		str	r3, [sp, #28]
 682:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 364              		.loc 1 682 3 is_stmt 1 view .LVU132
 365              		.loc 1 682 24 is_stmt 0 view .LVU133
 366 019c 0895     		str	r5, [sp, #32]
 683:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 367              		.loc 1 683 3 is_stmt 1 view .LVU134
 368              		.loc 1 683 24 is_stmt 0 view .LVU135
 369 019e 0995     		str	r5, [sp, #36]
 684:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 370              		.loc 1 684 3 is_stmt 1 view .LVU136
 371              		.loc 1 684 25 is_stmt 0 view .LVU137
 372 01a0 CDF82890 		str	r9, [sp, #40]
 685:Core/Src/main.c ****   HAL_GPIO_Init(LD_R_GPIO_Port, &GPIO_InitStruct);
 373              		.loc 1 685 3 is_stmt 1 view .LVU138
 374 01a4 07A9     		add	r1, sp, #28
 375 01a6 4046     		mov	r0, r8
 376 01a8 FFF7FEFF 		bl	HAL_GPIO_Init
 377              	.LVL15:
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /*Configure GPIO pin : PE8 */
 688:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 378              		.loc 1 688 3 view .LVU139
 379              		.loc 1 688 23 is_stmt 0 view .LVU140
 380 01ac 4FF48073 		mov	r3, #256
 381 01b0 0793     		str	r3, [sp, #28]
 689:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 382              		.loc 1 689 3 is_stmt 1 view .LVU141
 383              		.loc 1 689 24 is_stmt 0 view .LVU142
 384 01b2 0894     		str	r4, [sp, #32]
 690:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 385              		.loc 1 690 3 is_stmt 1 view .LVU143
 386              		.loc 1 690 24 is_stmt 0 view .LVU144
 387 01b4 0995     		str	r5, [sp, #36]
 691:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 388              		.loc 1 691 3 is_stmt 1 view .LVU145
 389 01b6 07A9     		add	r1, sp, #28
 390 01b8 3846     		mov	r0, r7
 391 01ba FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL16:
 692:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 20


 693:Core/Src/main.c ****   /*Configure GPIO pins : PE9 PE10 PE11 PE12
 694:Core/Src/main.c ****                            XL_CS_Pin */
 695:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
 393              		.loc 1 695 3 view .LVU146
 394              		.loc 1 695 23 is_stmt 0 view .LVU147
 395 01be 41F60163 		movw	r3, #7681
 396 01c2 0793     		str	r3, [sp, #28]
 696:Core/Src/main.c ****                           |XL_CS_Pin;
 697:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 397              		.loc 1 697 3 is_stmt 1 view .LVU148
 398              		.loc 1 697 24 is_stmt 0 view .LVU149
 399 01c4 0895     		str	r5, [sp, #32]
 698:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 400              		.loc 1 698 3 is_stmt 1 view .LVU150
 401              		.loc 1 698 24 is_stmt 0 view .LVU151
 402 01c6 0994     		str	r4, [sp, #36]
 699:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 403              		.loc 1 699 3 is_stmt 1 view .LVU152
 404              		.loc 1 699 25 is_stmt 0 view .LVU153
 405 01c8 0A94     		str	r4, [sp, #40]
 700:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 406              		.loc 1 700 3 is_stmt 1 view .LVU154
 407 01ca 07A9     		add	r1, sp, #28
 408 01cc 3846     		mov	r0, r7
 409 01ce FFF7FEFF 		bl	HAL_GPIO_Init
 410              	.LVL17:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****   /*Configure GPIO pins : MFX_I2C_SLC_Pin MFX_I2C_SDA_Pin */
 703:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_I2C_SLC_Pin|MFX_I2C_SDA_Pin;
 411              		.loc 1 703 3 view .LVU155
 412              		.loc 1 703 23 is_stmt 0 view .LVU156
 413 01d2 4FF44063 		mov	r3, #3072
 414 01d6 0793     		str	r3, [sp, #28]
 704:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 415              		.loc 1 704 3 is_stmt 1 view .LVU157
 416              		.loc 1 704 24 is_stmt 0 view .LVU158
 417 01d8 1223     		movs	r3, #18
 418 01da 0893     		str	r3, [sp, #32]
 705:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 705 3 is_stmt 1 view .LVU159
 420              		.loc 1 705 24 is_stmt 0 view .LVU160
 421 01dc 0994     		str	r4, [sp, #36]
 706:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 422              		.loc 1 706 3 is_stmt 1 view .LVU161
 423              		.loc 1 706 25 is_stmt 0 view .LVU162
 424 01de CDF82890 		str	r9, [sp, #40]
 707:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 425              		.loc 1 707 3 is_stmt 1 view .LVU163
 426              		.loc 1 707 29 is_stmt 0 view .LVU164
 427 01e2 0423     		movs	r3, #4
 428 01e4 0B93     		str	r3, [sp, #44]
 708:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 429              		.loc 1 708 3 is_stmt 1 view .LVU165
 430 01e6 07A9     		add	r1, sp, #28
 431 01e8 4046     		mov	r0, r8
 432 01ea FFF7FEFF 		bl	HAL_GPIO_Init
 433              	.LVL18:
ARM GAS  /tmp/ccn5IMCN.s 			page 21


 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   /*Configure GPIO pins : SEG18_Pin SEG5_Pin SEG17_Pin SEG6_Pin
 711:Core/Src/main.c ****                            SEG16_Pin SEG7_Pin SEG15_Pin SEG8_Pin */
 712:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG18_Pin|SEG5_Pin|SEG17_Pin|SEG6_Pin
 434              		.loc 1 712 3 view .LVU166
 435              		.loc 1 712 23 is_stmt 0 view .LVU167
 436 01ee 4FF47F43 		mov	r3, #65280
 437 01f2 0793     		str	r3, [sp, #28]
 713:Core/Src/main.c ****                           |SEG16_Pin|SEG7_Pin|SEG15_Pin|SEG8_Pin;
 714:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 438              		.loc 1 714 3 is_stmt 1 view .LVU168
 439              		.loc 1 714 24 is_stmt 0 view .LVU169
 440 01f4 0896     		str	r6, [sp, #32]
 715:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 441              		.loc 1 715 3 is_stmt 1 view .LVU170
 442              		.loc 1 715 24 is_stmt 0 view .LVU171
 443 01f6 0994     		str	r4, [sp, #36]
 716:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 444              		.loc 1 716 3 is_stmt 1 view .LVU172
 445              		.loc 1 716 25 is_stmt 0 view .LVU173
 446 01f8 0A94     		str	r4, [sp, #40]
 717:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 447              		.loc 1 717 3 is_stmt 1 view .LVU174
 448              		.loc 1 717 29 is_stmt 0 view .LVU175
 449 01fa 0B23     		movs	r3, #11
 450 01fc 0B93     		str	r3, [sp, #44]
 718:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 718 3 is_stmt 1 view .LVU176
 452 01fe 07A9     		add	r1, sp, #28
 453 0200 3348     		ldr	r0, .L3+8
 454 0202 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL19:
 719:Core/Src/main.c **** 
 720:Core/Src/main.c ****   /*Configure GPIO pins : COM0_Pin SEG10_Pin */
 721:Core/Src/main.c ****   GPIO_InitStruct.Pin = COM0_Pin|SEG10_Pin;
 456              		.loc 1 721 3 view .LVU177
 457              		.loc 1 721 23 is_stmt 0 view .LVU178
 458 0206 4FF40143 		mov	r3, #33024
 459 020a 0793     		str	r3, [sp, #28]
 722:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 722 3 is_stmt 1 view .LVU179
 461              		.loc 1 722 24 is_stmt 0 view .LVU180
 462 020c 0896     		str	r6, [sp, #32]
 723:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 723 3 is_stmt 1 view .LVU181
 464              		.loc 1 723 24 is_stmt 0 view .LVU182
 465 020e 0994     		str	r4, [sp, #36]
 724:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 724 3 is_stmt 1 view .LVU183
 467              		.loc 1 724 25 is_stmt 0 view .LVU184
 468 0210 0A94     		str	r4, [sp, #40]
 725:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 469              		.loc 1 725 3 is_stmt 1 view .LVU185
 470              		.loc 1 725 29 is_stmt 0 view .LVU186
 471 0212 0B23     		movs	r3, #11
 472 0214 0B93     		str	r3, [sp, #44]
 726:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/ccn5IMCN.s 			page 22


 473              		.loc 1 726 3 is_stmt 1 view .LVU187
 474 0216 07A9     		add	r1, sp, #28
 475 0218 4FF09040 		mov	r0, #1207959552
 476 021c FFF7FEFF 		bl	HAL_GPIO_Init
 477              	.LVL20:
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   /*Configure GPIO pin : PA9 */
 729:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 478              		.loc 1 729 3 view .LVU188
 479              		.loc 1 729 23 is_stmt 0 view .LVU189
 480 0220 4FF40073 		mov	r3, #512
 481 0224 0793     		str	r3, [sp, #28]
 730:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 482              		.loc 1 730 3 is_stmt 1 view .LVU190
 483              		.loc 1 730 24 is_stmt 0 view .LVU191
 484 0226 0894     		str	r4, [sp, #32]
 731:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 485              		.loc 1 731 3 is_stmt 1 view .LVU192
 486              		.loc 1 731 24 is_stmt 0 view .LVU193
 487 0228 0994     		str	r4, [sp, #36]
 732:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 488              		.loc 1 732 3 is_stmt 1 view .LVU194
 489 022a 07A9     		add	r1, sp, #28
 490 022c 4FF09040 		mov	r0, #1207959552
 491 0230 FFF7FEFF 		bl	HAL_GPIO_Init
 492              	.LVL21:
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /*Configure GPIO pins : PA10 PA11 PA12 */
 735:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 493              		.loc 1 735 3 view .LVU195
 494              		.loc 1 735 23 is_stmt 0 view .LVU196
 495 0234 4FF4E053 		mov	r3, #7168
 496 0238 0793     		str	r3, [sp, #28]
 736:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 497              		.loc 1 736 3 is_stmt 1 view .LVU197
 498              		.loc 1 736 24 is_stmt 0 view .LVU198
 499 023a 0896     		str	r6, [sp, #32]
 737:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 500              		.loc 1 737 3 is_stmt 1 view .LVU199
 501              		.loc 1 737 24 is_stmt 0 view .LVU200
 502 023c 0994     		str	r4, [sp, #36]
 738:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 503              		.loc 1 738 3 is_stmt 1 view .LVU201
 504              		.loc 1 738 25 is_stmt 0 view .LVU202
 505 023e CDF82890 		str	r9, [sp, #40]
 739:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 506              		.loc 1 739 3 is_stmt 1 view .LVU203
 507              		.loc 1 739 29 is_stmt 0 view .LVU204
 508 0242 0A23     		movs	r3, #10
 509 0244 0B93     		str	r3, [sp, #44]
 740:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 510              		.loc 1 740 3 is_stmt 1 view .LVU205
 511 0246 07A9     		add	r1, sp, #28
 512 0248 4FF09040 		mov	r0, #1207959552
 513 024c FFF7FEFF 		bl	HAL_GPIO_Init
 514              	.LVL22:
 741:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 23


 742:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 743:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 515              		.loc 1 743 3 view .LVU206
 516              		.loc 1 743 23 is_stmt 0 view .LVU207
 517 0250 4FF40063 		mov	r3, #2048
 518 0254 0793     		str	r3, [sp, #28]
 744:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 519              		.loc 1 744 3 is_stmt 1 view .LVU208
 520              		.loc 1 744 24 is_stmt 0 view .LVU209
 521 0256 0895     		str	r5, [sp, #32]
 745:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 522              		.loc 1 745 3 is_stmt 1 view .LVU210
 523              		.loc 1 745 24 is_stmt 0 view .LVU211
 524 0258 0994     		str	r4, [sp, #36]
 746:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 525              		.loc 1 746 3 is_stmt 1 view .LVU212
 526              		.loc 1 746 25 is_stmt 0 view .LVU213
 527 025a 0A94     		str	r4, [sp, #40]
 747:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 528              		.loc 1 747 3 is_stmt 1 view .LVU214
 529 025c 07A9     		add	r1, sp, #28
 530 025e 5046     		mov	r0, r10
 531 0260 FFF7FEFF 		bl	HAL_GPIO_Init
 532              	.LVL23:
 748:Core/Src/main.c **** 
 749:Core/Src/main.c ****   /*Configure GPIO pins : EXT_RST_Pin GYRO_INT1_Pin */
 750:Core/Src/main.c ****   GPIO_InitStruct.Pin = EXT_RST_Pin|GYRO_INT1_Pin;
 533              		.loc 1 750 3 view .LVU215
 534              		.loc 1 750 23 is_stmt 0 view .LVU216
 535 0264 0523     		movs	r3, #5
 536 0266 0793     		str	r3, [sp, #28]
 751:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 537              		.loc 1 751 3 is_stmt 1 view .LVU217
 538              		.loc 1 751 24 is_stmt 0 view .LVU218
 539 0268 CDF820B0 		str	fp, [sp, #32]
 752:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 540              		.loc 1 752 3 is_stmt 1 view .LVU219
 541              		.loc 1 752 24 is_stmt 0 view .LVU220
 542 026c 0994     		str	r4, [sp, #36]
 753:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 543              		.loc 1 753 3 is_stmt 1 view .LVU221
 544 026e 07A9     		add	r1, sp, #28
 545 0270 1748     		ldr	r0, .L3+8
 546 0272 FFF7FEFF 		bl	HAL_GPIO_Init
 547              	.LVL24:
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_CS_Pin */
 756:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_CS_Pin;
 548              		.loc 1 756 3 view .LVU222
 549              		.loc 1 756 23 is_stmt 0 view .LVU223
 550 0276 8023     		movs	r3, #128
 551 0278 0793     		str	r3, [sp, #28]
 757:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 552              		.loc 1 757 3 is_stmt 1 view .LVU224
 553              		.loc 1 757 24 is_stmt 0 view .LVU225
 554 027a 0895     		str	r5, [sp, #32]
 758:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccn5IMCN.s 			page 24


 555              		.loc 1 758 3 is_stmt 1 view .LVU226
 556              		.loc 1 758 24 is_stmt 0 view .LVU227
 557 027c 0994     		str	r4, [sp, #36]
 759:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 558              		.loc 1 759 3 is_stmt 1 view .LVU228
 559              		.loc 1 759 25 is_stmt 0 view .LVU229
 560 027e CDF82890 		str	r9, [sp, #40]
 760:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_CS_GPIO_Port, &GPIO_InitStruct);
 561              		.loc 1 760 3 is_stmt 1 view .LVU230
 562 0282 07A9     		add	r1, sp, #28
 563 0284 1248     		ldr	r0, .L3+8
 564 0286 FFF7FEFF 		bl	HAL_GPIO_Init
 565              	.LVL25:
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****   /*Configure GPIO pin : M3V3_REG_ON_Pin */
 763:Core/Src/main.c ****   GPIO_InitStruct.Pin = M3V3_REG_ON_Pin;
 566              		.loc 1 763 3 view .LVU231
 567              		.loc 1 763 23 is_stmt 0 view .LVU232
 568 028a 0823     		movs	r3, #8
 569 028c 0793     		str	r3, [sp, #28]
 764:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 570              		.loc 1 764 3 is_stmt 1 view .LVU233
 571              		.loc 1 764 24 is_stmt 0 view .LVU234
 572 028e 0895     		str	r5, [sp, #32]
 765:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 573              		.loc 1 765 3 is_stmt 1 view .LVU235
 574              		.loc 1 765 24 is_stmt 0 view .LVU236
 575 0290 0994     		str	r4, [sp, #36]
 766:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 576              		.loc 1 766 3 is_stmt 1 view .LVU237
 577              		.loc 1 766 25 is_stmt 0 view .LVU238
 578 0292 0A94     		str	r4, [sp, #40]
 767:Core/Src/main.c ****   HAL_GPIO_Init(M3V3_REG_ON_GPIO_Port, &GPIO_InitStruct);
 579              		.loc 1 767 3 is_stmt 1 view .LVU239
 580 0294 07A9     		add	r1, sp, #28
 581 0296 4046     		mov	r0, r8
 582 0298 FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL26:
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_INT2_Pin */
 770:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_INT2_Pin;
 584              		.loc 1 770 3 view .LVU240
 585              		.loc 1 770 23 is_stmt 0 view .LVU241
 586 029c 4FF48073 		mov	r3, #256
 587 02a0 0793     		str	r3, [sp, #28]
 771:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 588              		.loc 1 771 3 is_stmt 1 view .LVU242
 589              		.loc 1 771 24 is_stmt 0 view .LVU243
 590 02a2 CDF820B0 		str	fp, [sp, #32]
 772:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 591              		.loc 1 772 3 is_stmt 1 view .LVU244
 592              		.loc 1 772 24 is_stmt 0 view .LVU245
 593 02a6 0994     		str	r4, [sp, #36]
 773:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_INT2_GPIO_Port, &GPIO_InitStruct);
 594              		.loc 1 773 3 is_stmt 1 view .LVU246
 595 02a8 07A9     		add	r1, sp, #28
 596 02aa 4046     		mov	r0, r8
ARM GAS  /tmp/ccn5IMCN.s 			page 25


 597 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 598              	.LVL27:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****   /*Configure GPIO pin : XL_INT_Pin */
 776:Core/Src/main.c ****   GPIO_InitStruct.Pin = XL_INT_Pin;
 599              		.loc 1 776 3 view .LVU247
 600              		.loc 1 776 23 is_stmt 0 view .LVU248
 601 02b0 0796     		str	r6, [sp, #28]
 777:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 602              		.loc 1 777 3 is_stmt 1 view .LVU249
 603              		.loc 1 777 24 is_stmt 0 view .LVU250
 604 02b2 CDF820B0 		str	fp, [sp, #32]
 778:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 605              		.loc 1 778 3 is_stmt 1 view .LVU251
 606              		.loc 1 778 24 is_stmt 0 view .LVU252
 607 02b6 0994     		str	r4, [sp, #36]
 779:Core/Src/main.c ****   HAL_GPIO_Init(XL_INT_GPIO_Port, &GPIO_InitStruct);
 608              		.loc 1 779 3 is_stmt 1 view .LVU253
 609 02b8 07A9     		add	r1, sp, #28
 610 02ba 3846     		mov	r0, r7
 611 02bc FFF7FEFF 		bl	HAL_GPIO_Init
 612              	.LVL28:
 780:Core/Src/main.c **** 
 781:Core/Src/main.c **** }
 613              		.loc 1 781 1 is_stmt 0 view .LVU254
 614 02c0 0DB0     		add	sp, sp, #52
 615              	.LCFI2:
 616              		.cfi_def_cfa_offset 36
 617              		@ sp needed
 618 02c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 619              	.L4:
 620 02c6 00BF     		.align	2
 621              	.L3:
 622 02c8 00100240 		.word	1073876992
 623 02cc 00100048 		.word	1207963648
 624 02d0 000C0048 		.word	1207962624
 625 02d4 00040048 		.word	1207960576
 626 02d8 00080048 		.word	1207961600
 627              		.cfi_endproc
 628              	.LFE215:
 630              		.section	.text.MX_DMA_Init,"ax",%progbits
 631              		.align	1
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	MX_DMA_Init:
 638              	.LFB214:
 553:Core/Src/main.c **** 
 639              		.loc 1 553 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 00B5     		push	{lr}
 644              	.LCFI3:
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 14, -4
ARM GAS  /tmp/ccn5IMCN.s 			page 26


 647 0002 83B0     		sub	sp, sp, #12
 648              	.LCFI4:
 649              		.cfi_def_cfa_offset 16
 556:Core/Src/main.c **** 
 650              		.loc 1 556 3 view .LVU256
 651              	.LBB22:
 556:Core/Src/main.c **** 
 652              		.loc 1 556 3 view .LVU257
 556:Core/Src/main.c **** 
 653              		.loc 1 556 3 view .LVU258
 654 0004 124B     		ldr	r3, .L7
 655 0006 9A6C     		ldr	r2, [r3, #72]
 656 0008 42F00102 		orr	r2, r2, #1
 657 000c 9A64     		str	r2, [r3, #72]
 556:Core/Src/main.c **** 
 658              		.loc 1 556 3 view .LVU259
 659 000e 9B6C     		ldr	r3, [r3, #72]
 660 0010 03F00103 		and	r3, r3, #1
 661 0014 0193     		str	r3, [sp, #4]
 556:Core/Src/main.c **** 
 662              		.loc 1 556 3 view .LVU260
 663 0016 019B     		ldr	r3, [sp, #4]
 664              	.LBE22:
 556:Core/Src/main.c **** 
 665              		.loc 1 556 3 view .LVU261
 560:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 666              		.loc 1 560 3 view .LVU262
 667 0018 0022     		movs	r2, #0
 668 001a 1146     		mov	r1, r2
 669 001c 0C20     		movs	r0, #12
 670 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 671              	.LVL29:
 561:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 672              		.loc 1 561 3 view .LVU263
 673 0022 0C20     		movs	r0, #12
 674 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 675              	.LVL30:
 563:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 676              		.loc 1 563 3 view .LVU264
 677 0028 0022     		movs	r2, #0
 678 002a 1146     		mov	r1, r2
 679 002c 0D20     		movs	r0, #13
 680 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 681              	.LVL31:
 564:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 682              		.loc 1 564 3 view .LVU265
 683 0032 0D20     		movs	r0, #13
 684 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 685              	.LVL32:
 566:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 686              		.loc 1 566 3 view .LVU266
 687 0038 0022     		movs	r2, #0
 688 003a 1146     		mov	r1, r2
 689 003c 0E20     		movs	r0, #14
 690 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 691              	.LVL33:
 567:Core/Src/main.c **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 27


 692              		.loc 1 567 3 view .LVU267
 693 0042 0E20     		movs	r0, #14
 694 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 695              	.LVL34:
 569:Core/Src/main.c **** 
 696              		.loc 1 569 1 is_stmt 0 view .LVU268
 697 0048 03B0     		add	sp, sp, #12
 698              	.LCFI5:
 699              		.cfi_def_cfa_offset 4
 700              		@ sp needed
 701 004a 5DF804FB 		ldr	pc, [sp], #4
 702              	.L8:
 703 004e 00BF     		.align	2
 704              	.L7:
 705 0050 00100240 		.word	1073876992
 706              		.cfi_endproc
 707              	.LFE214:
 709              		.section	.text.tud_mount_cb,"ax",%progbits
 710              		.align	1
 711              		.weak	tud_mount_cb
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	tud_mount_cb:
 718              	.LFB216:
 782:Core/Src/main.c **** 
 783:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 784:Core/Src/main.c **** 
 785:Core/Src/main.c **** //--------------------------------------------------------------------+
 786:Core/Src/main.c **** // Device callbacks
 787:Core/Src/main.c **** //--------------------------------------------------------------------+
 788:Core/Src/main.c **** 
 789:Core/Src/main.c **** // Invoked when device is mounted
 790:Core/Src/main.c **** void tud_mount_cb(void)
 791:Core/Src/main.c **** {
 719              		.loc 1 791 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 792:Core/Src/main.c ****   blink_interval_ms = BLINK_MOUNTED;
 724              		.loc 1 792 3 view .LVU270
 725              		.loc 1 792 21 is_stmt 0 view .LVU271
 726 0000 024B     		ldr	r3, .L10
 727 0002 4FF47A72 		mov	r2, #1000
 728 0006 1A60     		str	r2, [r3]
 793:Core/Src/main.c **** }
 729              		.loc 1 793 1 view .LVU272
 730 0008 7047     		bx	lr
 731              	.L11:
 732 000a 00BF     		.align	2
 733              	.L10:
 734 000c 00000000 		.word	.LANCHOR0
 735              		.cfi_endproc
 736              	.LFE216:
 738              		.section	.text.tud_umount_cb,"ax",%progbits
ARM GAS  /tmp/ccn5IMCN.s 			page 28


 739              		.align	1
 740              		.weak	tud_umount_cb
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	tud_umount_cb:
 747              	.LFB217:
 794:Core/Src/main.c **** 
 795:Core/Src/main.c **** // Invoked when device is unmounted
 796:Core/Src/main.c **** void tud_umount_cb(void)
 797:Core/Src/main.c **** {
 748              		.loc 1 797 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 798:Core/Src/main.c ****   blink_interval_ms = BLINK_NOT_MOUNTED;
 753              		.loc 1 798 3 view .LVU274
 754              		.loc 1 798 21 is_stmt 0 view .LVU275
 755 0000 014B     		ldr	r3, .L13
 756 0002 FA22     		movs	r2, #250
 757 0004 1A60     		str	r2, [r3]
 799:Core/Src/main.c **** }
 758              		.loc 1 799 1 view .LVU276
 759 0006 7047     		bx	lr
 760              	.L14:
 761              		.align	2
 762              	.L13:
 763 0008 00000000 		.word	.LANCHOR0
 764              		.cfi_endproc
 765              	.LFE217:
 767              		.section	.text.tud_suspend_cb,"ax",%progbits
 768              		.align	1
 769              		.weak	tud_suspend_cb
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	tud_suspend_cb:
 776              	.LVL35:
 777              	.LFB218:
 800:Core/Src/main.c **** 
 801:Core/Src/main.c **** // Invoked when usb bus is suspended
 802:Core/Src/main.c **** // remote_wakeup_en : if host allow us  to perform remote wakeup
 803:Core/Src/main.c **** // Within 7ms, device must draw an average of current less than 2.5 mA from bus
 804:Core/Src/main.c **** void tud_suspend_cb(bool remote_wakeup_en)
 805:Core/Src/main.c **** {
 778              		.loc 1 805 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 806:Core/Src/main.c ****   (void) remote_wakeup_en;
 783              		.loc 1 806 3 view .LVU278
 807:Core/Src/main.c ****   blink_interval_ms = BLINK_SUSPENDED;
 784              		.loc 1 807 3 view .LVU279
ARM GAS  /tmp/ccn5IMCN.s 			page 29


 785              		.loc 1 807 21 is_stmt 0 view .LVU280
 786 0000 024B     		ldr	r3, .L16
 787 0002 40F6C412 		movw	r2, #2500
 788 0006 1A60     		str	r2, [r3]
 808:Core/Src/main.c **** }
 789              		.loc 1 808 1 view .LVU281
 790 0008 7047     		bx	lr
 791              	.L17:
 792 000a 00BF     		.align	2
 793              	.L16:
 794 000c 00000000 		.word	.LANCHOR0
 795              		.cfi_endproc
 796              	.LFE218:
 798              		.section	.text.tud_resume_cb,"ax",%progbits
 799              		.align	1
 800              		.weak	tud_resume_cb
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	tud_resume_cb:
 807              	.LFB219:
 809:Core/Src/main.c **** 
 810:Core/Src/main.c **** // Invoked when usb bus is resumed
 811:Core/Src/main.c **** void tud_resume_cb(void)
 812:Core/Src/main.c **** {
 808              		.loc 1 812 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812 0000 08B5     		push	{r3, lr}
 813              	.LCFI6:
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 3, -8
 816              		.cfi_offset 14, -4
 813:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 817              		.loc 1 813 3 view .LVU283
 818              		.loc 1 813 23 is_stmt 0 view .LVU284
 819 0002 FFF7FEFF 		bl	tud_mounted
 820              	.LVL36:
 821              		.loc 1 813 53 view .LVU285
 822 0006 20B1     		cbz	r0, .L20
 823 0008 4FF47A72 		mov	r2, #1000
 824              	.L19:
 825              		.loc 1 813 21 discriminator 4 view .LVU286
 826 000c 024B     		ldr	r3, .L22
 827 000e 1A60     		str	r2, [r3]
 814:Core/Src/main.c **** }
 828              		.loc 1 814 1 discriminator 4 view .LVU287
 829 0010 08BD     		pop	{r3, pc}
 830              	.L20:
 813:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 831              		.loc 1 813 53 view .LVU288
 832 0012 FA22     		movs	r2, #250
 833 0014 FAE7     		b	.L19
 834              	.L23:
 835 0016 00BF     		.align	2
ARM GAS  /tmp/ccn5IMCN.s 			page 30


 836              	.L22:
 837 0018 00000000 		.word	.LANCHOR0
 838              		.cfi_endproc
 839              	.LFE219:
 841              		.section	.text.midi_task,"ax",%progbits
 842              		.align	1
 843              		.global	midi_task
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	midi_task:
 850              	.LFB220:
 815:Core/Src/main.c **** 
 816:Core/Src/main.c **** // MIDI TASK-- SEPARATE FILE
 817:Core/Src/main.c **** 
 818:Core/Src/main.c **** void midi_task(void)
 819:Core/Src/main.c **** {
 851              		.loc 1 819 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 16
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855 0000 30B5     		push	{r4, r5, lr}
 856              	.LCFI7:
 857              		.cfi_def_cfa_offset 12
 858              		.cfi_offset 4, -12
 859              		.cfi_offset 5, -8
 860              		.cfi_offset 14, -4
 861 0002 85B0     		sub	sp, sp, #20
 862              	.LCFI8:
 863              		.cfi_def_cfa_offset 32
 820:Core/Src/main.c ****   static uint32_t start_ms = 0;
 864              		.loc 1 820 3 view .LVU290
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****   uint8_t const cable_num = 0; // MIDI jack associated with USB endpoint
 865              		.loc 1 822 3 view .LVU291
 866              	.LVL37:
 823:Core/Src/main.c ****   uint8_t const channel   = 0; // 0 for channel 1
 867              		.loc 1 823 3 view .LVU292
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****   // The MIDI interface always creates input and output port/jack descriptors
 826:Core/Src/main.c ****   // regardless of these being used or not. Therefore incoming traffic should be read
 827:Core/Src/main.c ****   // (possibly just discarded) to avoid the sender blocking in IO
 828:Core/Src/main.c ****   uint8_t packet[4];
 868              		.loc 1 828 3 view .LVU293
 829:Core/Src/main.c ****   while ( tud_midi_available() ) tud_midi_packet_read(packet);
 869              		.loc 1 829 3 view .LVU294
 870              		.loc 1 829 9 is_stmt 0 view .LVU295
 871 0004 03E0     		b	.L25
 872              	.L26:
 873              		.loc 1 829 34 is_stmt 1 view .LVU296
 874              	.LVL38:
 875              	.LBB23:
 876              	.LBI23:
 877              		.file 2 "tinyusb/src/class/midi/midi_device.h"
   1:tinyusb/src/class/midi/midi_device.h **** /*
   2:tinyusb/src/class/midi/midi_device.h ****  * The MIT License (MIT)
ARM GAS  /tmp/ccn5IMCN.s 			page 31


   3:tinyusb/src/class/midi/midi_device.h ****  *
   4:tinyusb/src/class/midi/midi_device.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/class/midi/midi_device.h ****  *
   6:tinyusb/src/class/midi/midi_device.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/class/midi/midi_device.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/class/midi/midi_device.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/class/midi/midi_device.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/class/midi/midi_device.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/class/midi/midi_device.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/class/midi/midi_device.h ****  *
  13:tinyusb/src/class/midi/midi_device.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/class/midi/midi_device.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/class/midi/midi_device.h ****  *
  16:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tinyusb/src/class/midi/midi_device.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/class/midi/midi_device.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/class/midi/midi_device.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/class/midi/midi_device.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/class/midi/midi_device.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE.
  23:tinyusb/src/class/midi/midi_device.h ****  *
  24:tinyusb/src/class/midi/midi_device.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/class/midi/midi_device.h ****  */
  26:tinyusb/src/class/midi/midi_device.h **** 
  27:tinyusb/src/class/midi/midi_device.h **** #ifndef _TUSB_MIDI_DEVICE_H_
  28:tinyusb/src/class/midi/midi_device.h **** #define _TUSB_MIDI_DEVICE_H_
  29:tinyusb/src/class/midi/midi_device.h **** 
  30:tinyusb/src/class/midi/midi_device.h **** #include "class/audio/audio.h"
  31:tinyusb/src/class/midi/midi_device.h **** #include "midi.h"
  32:tinyusb/src/class/midi/midi_device.h **** 
  33:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  34:tinyusb/src/class/midi/midi_device.h **** // Class Driver Configuration
  35:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  36:tinyusb/src/class/midi/midi_device.h **** 
  37:tinyusb/src/class/midi/midi_device.h **** #if !defined(CFG_TUD_MIDI_EP_BUFSIZE) && defined(CFG_TUD_MIDI_EPSIZE)
  38:tinyusb/src/class/midi/midi_device.h ****   #warning CFG_TUD_MIDI_EPSIZE is renamed to CFG_TUD_MIDI_EP_BUFSIZE, please update to use the new 
  39:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE    CFG_TUD_MIDI_EPSIZE
  40:tinyusb/src/class/midi/midi_device.h **** #endif
  41:tinyusb/src/class/midi/midi_device.h **** 
  42:tinyusb/src/class/midi/midi_device.h **** #ifndef CFG_TUD_MIDI_EP_BUFSIZE
  43:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE     (TUD_OPT_HIGH_SPEED ? 512 : 64)
  44:tinyusb/src/class/midi/midi_device.h **** #endif
  45:tinyusb/src/class/midi/midi_device.h **** 
  46:tinyusb/src/class/midi/midi_device.h **** #ifdef __cplusplus
  47:tinyusb/src/class/midi/midi_device.h ****  extern "C" {
  48:tinyusb/src/class/midi/midi_device.h **** #endif
  49:tinyusb/src/class/midi/midi_device.h **** 
  50:tinyusb/src/class/midi/midi_device.h **** /** \addtogroup MIDI_Serial Serial
  51:tinyusb/src/class/midi/midi_device.h ****  *  @{
  52:tinyusb/src/class/midi/midi_device.h ****  *  \defgroup   MIDI_Serial_Device Device
  53:tinyusb/src/class/midi/midi_device.h ****  *  @{ */
  54:tinyusb/src/class/midi/midi_device.h **** 
  55:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  56:tinyusb/src/class/midi/midi_device.h **** // Application API (Multiple Interfaces)
  57:tinyusb/src/class/midi/midi_device.h **** // CFG_TUD_MIDI > 1
  58:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  59:tinyusb/src/class/midi/midi_device.h **** 
ARM GAS  /tmp/ccn5IMCN.s 			page 32


  60:tinyusb/src/class/midi/midi_device.h **** // Check if midi interface is mounted
  61:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_mounted      (uint8_t itf);
  62:tinyusb/src/class/midi/midi_device.h **** 
  63:tinyusb/src/class/midi/midi_device.h **** // Get the number of bytes available for reading
  64:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_available    (uint8_t itf, uint8_t cable_num);
  65:tinyusb/src/class/midi/midi_device.h **** 
  66:tinyusb/src/class/midi/midi_device.h **** // Read byte stream              (legacy)
  67:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_read  (uint8_t itf, uint8_t cable_num, void* buffer, uint32_t bufsize);
  68:tinyusb/src/class/midi/midi_device.h **** 
  69:tinyusb/src/class/midi/midi_device.h **** // Write byte Stream             (legacy)
  70:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_write (uint8_t itf, uint8_t cable_num, uint8_t const* buffer, uint32_t b
  71:tinyusb/src/class/midi/midi_device.h **** 
  72:tinyusb/src/class/midi/midi_device.h **** // Read event packet             (4 bytes)
  73:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_read  (uint8_t itf, uint8_t packet[4]);
  74:tinyusb/src/class/midi/midi_device.h **** 
  75:tinyusb/src/class/midi/midi_device.h **** // Write event packet            (4 bytes)
  76:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_write (uint8_t itf, uint8_t const packet[4]);
  77:tinyusb/src/class/midi/midi_device.h **** 
  78:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  79:tinyusb/src/class/midi/midi_device.h **** // Application API (Single Interface)
  80:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  81:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_mounted      (void);
  82:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available    (void);
  83:tinyusb/src/class/midi/midi_device.h **** 
  84:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read  (void* buffer, uint32_t bufsize);
  85:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
  86:tinyusb/src/class/midi/midi_device.h **** 
  87:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_read  (uint8_t packet[4]);
  88:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_write (uint8_t const packet[4]);
  89:tinyusb/src/class/midi/midi_device.h **** 
  90:tinyusb/src/class/midi/midi_device.h **** //------------- Deprecated API name  -------------//
  91:tinyusb/src/class/midi/midi_device.h **** // TODO remove after 0.10.0 release
  92:tinyusb/src/class/midi/midi_device.h **** 
  93:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_read() is renamed to tud_midi_stream_read()")
  94:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_read (void* buffer, uint32_t bufsize)
  95:tinyusb/src/class/midi/midi_device.h **** {
  96:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_read(buffer, bufsize);
  97:tinyusb/src/class/midi/midi_device.h **** }
  98:tinyusb/src/class/midi/midi_device.h **** 
  99:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_write() is renamed to tud_midi_stream_write()")
 100:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_write(uint8_t cable_num, uint8_t const* buffer, uint32_t bufsize)
 101:tinyusb/src/class/midi/midi_device.h **** {
 102:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_write(cable_num, buffer, bufsize);
 103:tinyusb/src/class/midi/midi_device.h **** }
 104:tinyusb/src/class/midi/midi_device.h **** 
 105:tinyusb/src/class/midi/midi_device.h **** 
 106:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_send() is renamed to tud_midi_packet_write()")
 107:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_send(uint8_t packet[4])
 108:tinyusb/src/class/midi/midi_device.h **** {
 109:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_write(packet);
 110:tinyusb/src/class/midi/midi_device.h **** }
 111:tinyusb/src/class/midi/midi_device.h **** 
 112:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_receive() is renamed to tud_midi_packet_read()")
 113:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_receive(uint8_t packet[4])
 114:tinyusb/src/class/midi/midi_device.h **** {
 115:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_read(packet);
 116:tinyusb/src/class/midi/midi_device.h **** }
ARM GAS  /tmp/ccn5IMCN.s 			page 33


 117:tinyusb/src/class/midi/midi_device.h **** 
 118:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 119:tinyusb/src/class/midi/midi_device.h **** // Application Callback API (weak is optional)
 120:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 121:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_WEAK void tud_midi_rx_cb(uint8_t itf);
 122:tinyusb/src/class/midi/midi_device.h **** 
 123:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 124:tinyusb/src/class/midi/midi_device.h **** // Inline Functions
 125:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 126:tinyusb/src/class/midi/midi_device.h **** 
 127:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_mounted (void)
 128:tinyusb/src/class/midi/midi_device.h **** {
 129:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_mounted(0);
 130:tinyusb/src/class/midi/midi_device.h **** }
 131:tinyusb/src/class/midi/midi_device.h **** 
 132:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available (void)
 133:tinyusb/src/class/midi/midi_device.h **** {
 134:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_available(0, 0);
 135:tinyusb/src/class/midi/midi_device.h **** }
 136:tinyusb/src/class/midi/midi_device.h **** 
 137:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read (void* buffer, uint32_t bufsize)
 138:tinyusb/src/class/midi/midi_device.h **** {
 139:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_read(0, 0, buffer, bufsize);
 140:tinyusb/src/class/midi/midi_device.h **** }
 141:tinyusb/src/class/midi/midi_device.h **** 
 142:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
 143:tinyusb/src/class/midi/midi_device.h **** {
 144:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_write(0, cable_num, buffer, bufsize);
 145:tinyusb/src/class/midi/midi_device.h **** }
 146:tinyusb/src/class/midi/midi_device.h **** 
 147:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_packet_read (uint8_t packet[4])
 878              		.loc 2 147 20 view .LVU297
 879              	.LBB24:
 148:tinyusb/src/class/midi/midi_device.h **** {
 149:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_packet_read(0, packet);
 880              		.loc 2 149 3 view .LVU298
 881              		.loc 2 149 10 is_stmt 0 view .LVU299
 882 0006 03A9     		add	r1, sp, #12
 883              	.LVL39:
 884              		.loc 2 149 10 view .LVU300
 885 0008 0020     		movs	r0, #0
 886 000a FFF7FEFF 		bl	tud_midi_n_packet_read
 887              	.LVL40:
 888              	.L25:
 889              		.loc 2 149 10 view .LVU301
 890              	.LBE24:
 891              	.LBE23:
 892              		.loc 1 829 9 is_stmt 1 discriminator 1 view .LVU302
 893              	.LBB25:
 894              	.LBI25:
 132:tinyusb/src/class/midi/midi_device.h **** {
 895              		.loc 2 132 24 discriminator 1 view .LVU303
 896              	.LBB26:
 134:tinyusb/src/class/midi/midi_device.h **** }
 897              		.loc 2 134 3 discriminator 1 view .LVU304
 134:tinyusb/src/class/midi/midi_device.h **** }
 898              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU305
ARM GAS  /tmp/ccn5IMCN.s 			page 34


 899 000e 0021     		movs	r1, #0
 900 0010 0846     		mov	r0, r1
 901 0012 FFF7FEFF 		bl	tud_midi_n_available
 902              	.LVL41:
 903              	.LBE26:
 904              	.LBE25:
 905              		.loc 1 829 9 discriminator 1 view .LVU306
 906 0016 0028     		cmp	r0, #0
 907 0018 F5D1     		bne	.L26
 830:Core/Src/main.c **** 
 831:Core/Src/main.c ****   // send note periodically
 832:Core/Src/main.c ****   /* CONSIDER USING DELAY WITH SYSTICK HANDLER*/
 833:Core/Src/main.c ****   
 834:Core/Src/main.c ****   /*BELOW IS OLD IMPLEMENTATION USING INTERRUPT*/
 835:Core/Src/main.c ****   /*
 836:Core/Src/main.c ****   if (board_millis() - start_ms < 286) return; // not enough time
 837:Core/Src/main.c ****   start_ms += 286;
 838:Core/Src/main.c ****   */
 839:Core/Src/main.c **** 
 840:Core/Src/main.c ****   // Previous positions in the note sequence.
 841:Core/Src/main.c ****   int previous = (int) (note_pos - 1);
 908              		.loc 1 841 3 is_stmt 1 view .LVU307
 909              		.loc 1 841 34 is_stmt 0 view .LVU308
 910 001a 174B     		ldr	r3, .L32
 911 001c 1B68     		ldr	r3, [r3]
 912              	.LVL42:
 842:Core/Src/main.c **** 
 843:Core/Src/main.c ****   // If we currently are at position 0, set the
 844:Core/Src/main.c ****   // previous position to the last note in the sequence.
 845:Core/Src/main.c ****   if (previous < 0) previous = sizeof(note_sequence) - 1;
 913              		.loc 1 845 3 is_stmt 1 view .LVU309
 914              		.loc 1 845 6 is_stmt 0 view .LVU310
 915 001e 5D1E     		subs	r5, r3, #1
 916              	.LVL43:
 917              		.loc 1 845 6 view .LVU311
 918 0020 28D4     		bmi	.L31
 919              	.LVL44:
 920              	.L27:
 846:Core/Src/main.c **** 
 847:Core/Src/main.c ****   // Send Note On for current position at full velocity (127) on channel 1.
 848:Core/Src/main.c ****   uint8_t note_on[3] = { 0x90 | channel, note_sequence[note_pos], 127 };
 921              		.loc 1 848 3 is_stmt 1 view .LVU312
 922              		.loc 1 848 11 is_stmt 0 view .LVU313
 923 0022 9022     		movs	r2, #144
 924 0024 8DF80820 		strb	r2, [sp, #8]
 925              		.loc 1 848 55 view .LVU314
 926 0028 144C     		ldr	r4, .L32+4
 927 002a E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 928              		.loc 1 848 11 view .LVU315
 929 002c 8DF80930 		strb	r3, [sp, #9]
 930 0030 7F23     		movs	r3, #127
 931 0032 8DF80A30 		strb	r3, [sp, #10]
 849:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_on, 3);
 932              		.loc 1 849 3 is_stmt 1 view .LVU316
 933              	.LVL45:
 934              	.LBB27:
 935              	.LBI27:
ARM GAS  /tmp/ccn5IMCN.s 			page 35


 142:tinyusb/src/class/midi/midi_device.h **** {
 936              		.loc 2 142 24 view .LVU317
 937              	.LBB28:
 144:tinyusb/src/class/midi/midi_device.h **** }
 938              		.loc 2 144 3 view .LVU318
 144:tinyusb/src/class/midi/midi_device.h **** }
 939              		.loc 2 144 10 is_stmt 0 view .LVU319
 940 0036 0323     		movs	r3, #3
 941 0038 02AA     		add	r2, sp, #8
 942              	.LVL46:
 144:tinyusb/src/class/midi/midi_device.h **** }
 943              		.loc 2 144 10 view .LVU320
 944 003a 0021     		movs	r1, #0
 945 003c 0846     		mov	r0, r1
 946 003e FFF7FEFF 		bl	tud_midi_n_stream_write
 947              	.LVL47:
 144:tinyusb/src/class/midi/midi_device.h **** }
 948              		.loc 2 144 10 view .LVU321
 949              	.LBE28:
 950              	.LBE27:
 850:Core/Src/main.c **** 
 851:Core/Src/main.c ****   // Send Note Off for previous note.
 852:Core/Src/main.c ****   uint8_t note_off[3] = { 0x80 | channel, note_sequence[previous], 0};
 951              		.loc 1 852 3 is_stmt 1 view .LVU322
 952              		.loc 1 852 11 is_stmt 0 view .LVU323
 953 0042 8023     		movs	r3, #128
 954 0044 8DF80430 		strb	r3, [sp, #4]
 955              		.loc 1 852 56 view .LVU324
 956 0048 635D     		ldrb	r3, [r4, r5]	@ zero_extendqisi2
 957              		.loc 1 852 11 view .LVU325
 958 004a 8DF80530 		strb	r3, [sp, #5]
 959 004e 0020     		movs	r0, #0
 960 0050 8DF80600 		strb	r0, [sp, #6]
 853:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_off, 3);
 961              		.loc 1 853 3 is_stmt 1 view .LVU326
 962              	.LVL48:
 963              	.LBB29:
 964              	.LBI29:
 142:tinyusb/src/class/midi/midi_device.h **** {
 965              		.loc 2 142 24 view .LVU327
 966              	.LBB30:
 144:tinyusb/src/class/midi/midi_device.h **** }
 967              		.loc 2 144 3 view .LVU328
 144:tinyusb/src/class/midi/midi_device.h **** }
 968              		.loc 2 144 10 is_stmt 0 view .LVU329
 969 0054 0323     		movs	r3, #3
 970 0056 01AA     		add	r2, sp, #4
 971              	.LVL49:
 144:tinyusb/src/class/midi/midi_device.h **** }
 972              		.loc 2 144 10 view .LVU330
 973 0058 0146     		mov	r1, r0
 974 005a FFF7FEFF 		bl	tud_midi_n_stream_write
 975              	.LVL50:
 144:tinyusb/src/class/midi/midi_device.h **** }
 976              		.loc 2 144 10 view .LVU331
 977              	.LBE30:
 978              	.LBE29:
ARM GAS  /tmp/ccn5IMCN.s 			page 36


 854:Core/Src/main.c **** 
 855:Core/Src/main.c ****   // Increment position
 856:Core/Src/main.c ****   note_pos++;
 979              		.loc 1 856 3 is_stmt 1 view .LVU332
 980              		.loc 1 856 11 is_stmt 0 view .LVU333
 981 005e 064A     		ldr	r2, .L32
 982 0060 1368     		ldr	r3, [r2]
 983 0062 0133     		adds	r3, r3, #1
 984 0064 1360     		str	r3, [r2]
 857:Core/Src/main.c **** 
 858:Core/Src/main.c ****   // If we are at the end of the sequence, start over.
 859:Core/Src/main.c ****   if (note_pos >= sizeof(note_sequence)) note_pos = 0;
 985              		.loc 1 859 3 is_stmt 1 view .LVU334
 986              		.loc 1 859 6 is_stmt 0 view .LVU335
 987 0066 3F2B     		cmp	r3, #63
 988 0068 02D9     		bls	.L24
 989              		.loc 1 859 42 is_stmt 1 discriminator 1 view .LVU336
 990              		.loc 1 859 51 is_stmt 0 discriminator 1 view .LVU337
 991 006a 1346     		mov	r3, r2
 992 006c 0022     		movs	r2, #0
 993 006e 1A60     		str	r2, [r3]
 994              	.L24:
 860:Core/Src/main.c **** }
 995              		.loc 1 860 1 view .LVU338
 996 0070 05B0     		add	sp, sp, #20
 997              	.LCFI9:
 998              		.cfi_remember_state
 999              		.cfi_def_cfa_offset 12
 1000              		@ sp needed
 1001 0072 30BD     		pop	{r4, r5, pc}
 1002              	.LVL51:
 1003              	.L31:
 1004              	.LCFI10:
 1005              		.cfi_restore_state
 845:Core/Src/main.c **** 
 1006              		.loc 1 845 30 view .LVU339
 1007 0074 3F25     		movs	r5, #63
 1008              	.LVL52:
 845:Core/Src/main.c **** 
 1009              		.loc 1 845 30 view .LVU340
 1010 0076 D4E7     		b	.L27
 1011              	.L33:
 1012              		.align	2
 1013              	.L32:
 1014 0078 00000000 		.word	.LANCHOR1
 1015 007c 00000000 		.word	.LANCHOR2
 1016              		.cfi_endproc
 1017              	.LFE220:
 1019              		.section	.text.HALL_TO_DAC,"ax",%progbits
 1020              		.align	1
 1021              		.global	HALL_TO_DAC
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1025              		.fpu fpv4-sp-d16
 1027              	HALL_TO_DAC:
 1028              	.LVL53:
ARM GAS  /tmp/ccn5IMCN.s 			page 37


 1029              	.LFB221:
 861:Core/Src/main.c **** 
 862:Core/Src/main.c **** /* HALL EFFECT TO DAC OUTPUT CONVERSION */
 863:Core/Src/main.c **** 
 864:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num) {
 1030              		.loc 1 864 79 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 865:Core/Src/main.c ****     int channel_num = 12;
 1035              		.loc 1 865 5 view .LVU342
 866:Core/Src/main.c ****     
 867:Core/Src/main.c ****    for (int i = 0; i < 12; i++) {
 1036              		.loc 1 867 4 view .LVU343
 1037              	.LBB31:
 1038              		.loc 1 867 9 view .LVU344
 1039              		.loc 1 867 13 is_stmt 0 view .LVU345
 1040 0000 0023     		movs	r3, #0
 1041              	.LVL54:
 1042              		.loc 1 867 20 is_stmt 1 view .LVU346
 1043              		.loc 1 867 4 is_stmt 0 view .LVU347
 1044 0002 0B2B     		cmp	r3, #11
 1045 0004 00F33281 		bgt	.L240
 1046              	.LBE31:
 864:Core/Src/main.c ****     int channel_num = 12;
 1047              		.loc 1 864 79 view .LVU348
 1048 0008 10B4     		push	{r4}
 1049              	.LCFI11:
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 4, -4
 1052 000a 0BE0     		b	.L39
 1053              	.L36:
 1054              	.LBB32:
 868:Core/Src/main.c ****         if (i < 6) {
 869:Core/Src/main.c ****             if (adc1_val[i] > 600) {
 870:Core/Src/main.c ****                 channel_num = i;
 871:Core/Src/main.c ****                 break;
 872:Core/Src/main.c ****             }
 873:Core/Src/main.c ****         } else {
 874:Core/Src/main.c ****             if (adc2_val[i - 6] > 600) {
 1055              		.loc 1 874 13 is_stmt 1 view .LVU349
 1056              		.loc 1 874 25 is_stmt 0 view .LVU350
 1057 000c 03F1804C 		add	ip, r3, #1073741824
 1058 0010 ACF1060C 		sub	ip, ip, #6
 1059 0014 51F82C40 		ldr	r4, [r1, ip, lsl #2]
 1060              		.loc 1 874 16 view .LVU351
 1061 0018 B4F5167F 		cmp	r4, #600
 1062 001c 0BD8     		bhi	.L37
 1063              	.L38:
 867:Core/Src/main.c ****         if (i < 6) {
 1064              		.loc 1 867 28 is_stmt 1 discriminator 2 view .LVU352
 867:Core/Src/main.c ****         if (i < 6) {
 1065              		.loc 1 867 29 is_stmt 0 discriminator 2 view .LVU353
 1066 001e 0133     		adds	r3, r3, #1
 1067              	.LVL55:
 867:Core/Src/main.c ****         if (i < 6) {
ARM GAS  /tmp/ccn5IMCN.s 			page 38


 1068              		.loc 1 867 20 is_stmt 1 discriminator 2 view .LVU354
 867:Core/Src/main.c ****         if (i < 6) {
 1069              		.loc 1 867 4 is_stmt 0 discriminator 2 view .LVU355
 1070 0020 0B2B     		cmp	r3, #11
 1071 0022 07DC     		bgt	.L241
 1072              	.L39:
 868:Core/Src/main.c ****         if (i < 6) {
 1073              		.loc 1 868 9 is_stmt 1 view .LVU356
 868:Core/Src/main.c ****         if (i < 6) {
 1074              		.loc 1 868 12 is_stmt 0 view .LVU357
 1075 0024 052B     		cmp	r3, #5
 1076 0026 F1DC     		bgt	.L36
 869:Core/Src/main.c ****                 channel_num = i;
 1077              		.loc 1 869 13 is_stmt 1 view .LVU358
 869:Core/Src/main.c ****                 channel_num = i;
 1078              		.loc 1 869 25 is_stmt 0 view .LVU359
 1079 0028 50F82340 		ldr	r4, [r0, r3, lsl #2]
 869:Core/Src/main.c ****                 channel_num = i;
 1080              		.loc 1 869 16 view .LVU360
 1081 002c B4F5167F 		cmp	r4, #600
 1082 0030 F5D9     		bls	.L38
 1083 0032 00E0     		b	.L37
 1084              	.L241:
 869:Core/Src/main.c ****                 channel_num = i;
 1085              		.loc 1 869 16 view .LVU361
 1086              	.LBE32:
 865:Core/Src/main.c ****     
 1087              		.loc 1 865 9 view .LVU362
 1088 0034 0C23     		movs	r3, #12
 1089              	.LVL56:
 1090              	.L37:
 875:Core/Src/main.c ****                 channel_num = i;
 876:Core/Src/main.c ****                 break;
 877:Core/Src/main.c ****             }
 878:Core/Src/main.c ****         }
 879:Core/Src/main.c ****     }
 880:Core/Src/main.c ****     
 881:Core/Src/main.c ****     if (octave_num == 0) { // 0-50
 1091              		.loc 1 881 5 is_stmt 1 view .LVU363
 1092              		.loc 1 881 8 is_stmt 0 view .LVU364
 1093 0036 2ABB     		cbnz	r2, .L40
 882:Core/Src/main.c ****         if (channel_num == 0) {
 1094              		.loc 1 882 9 is_stmt 1 view .LVU365
 1095              		.loc 1 882 12 is_stmt 0 view .LVU366
 1096 0038 002B     		cmp	r3, #0
 1097 003a 00F09D80 		beq	.L45
 883:Core/Src/main.c ****             return 3;
 884:Core/Src/main.c ****         } else if (channel_num == 1) {
 1098              		.loc 1 884 16 is_stmt 1 view .LVU367
 1099              		.loc 1 884 19 is_stmt 0 view .LVU368
 1100 003e 012B     		cmp	r3, #1
 1101 0040 00F09E80 		beq	.L46
 885:Core/Src/main.c ****             return 7;
 886:Core/Src/main.c ****         } else if (channel_num == 2) {
 1102              		.loc 1 886 16 is_stmt 1 view .LVU369
 1103              		.loc 1 886 19 is_stmt 0 view .LVU370
 1104 0044 022B     		cmp	r3, #2
ARM GAS  /tmp/ccn5IMCN.s 			page 39


 1105 0046 00F09D80 		beq	.L47
 887:Core/Src/main.c ****             return 11;
 888:Core/Src/main.c ****         } else if (channel_num == 3) {
 1106              		.loc 1 888 16 is_stmt 1 view .LVU371
 1107              		.loc 1 888 19 is_stmt 0 view .LVU372
 1108 004a 032B     		cmp	r3, #3
 1109 004c 00F09C80 		beq	.L48
 889:Core/Src/main.c ****             return 15;
 890:Core/Src/main.c ****         } else if (channel_num == 4) {
 1110              		.loc 1 890 16 is_stmt 1 view .LVU373
 1111              		.loc 1 890 19 is_stmt 0 view .LVU374
 1112 0050 042B     		cmp	r3, #4
 1113 0052 00F09B80 		beq	.L49
 891:Core/Src/main.c ****             return 19;
 892:Core/Src/main.c ****         } else if (channel_num == 5) {
 1114              		.loc 1 892 16 is_stmt 1 view .LVU375
 1115              		.loc 1 892 19 is_stmt 0 view .LVU376
 1116 0056 052B     		cmp	r3, #5
 1117 0058 00F09A80 		beq	.L50
 893:Core/Src/main.c ****             return 23;
 894:Core/Src/main.c ****         } else if (channel_num == 6) {
 1118              		.loc 1 894 16 is_stmt 1 view .LVU377
 1119              		.loc 1 894 19 is_stmt 0 view .LVU378
 1120 005c 062B     		cmp	r3, #6
 1121 005e 00F09980 		beq	.L51
 895:Core/Src/main.c ****             return 27;
 896:Core/Src/main.c ****         } else if (channel_num == 7) {
 1122              		.loc 1 896 16 is_stmt 1 view .LVU379
 1123              		.loc 1 896 19 is_stmt 0 view .LVU380
 1124 0062 072B     		cmp	r3, #7
 1125 0064 00F09880 		beq	.L52
 897:Core/Src/main.c ****             return 31;
 898:Core/Src/main.c ****         } else if (channel_num == 8) {
 1126              		.loc 1 898 16 is_stmt 1 view .LVU381
 1127              		.loc 1 898 19 is_stmt 0 view .LVU382
 1128 0068 082B     		cmp	r3, #8
 1129 006a 00F09780 		beq	.L53
 899:Core/Src/main.c ****             return 35;
 900:Core/Src/main.c ****         } else if (channel_num == 9) {
 1130              		.loc 1 900 16 is_stmt 1 view .LVU383
 1131              		.loc 1 900 19 is_stmt 0 view .LVU384
 1132 006e 092B     		cmp	r3, #9
 1133 0070 00F09680 		beq	.L54
 901:Core/Src/main.c ****             return 39;
 902:Core/Src/main.c ****         } else if (channel_num == 10) {
 1134              		.loc 1 902 16 is_stmt 1 view .LVU385
 1135              		.loc 1 902 19 is_stmt 0 view .LVU386
 1136 0074 0A2B     		cmp	r3, #10
 1137 0076 00F09580 		beq	.L55
 903:Core/Src/main.c ****             return 43;
 904:Core/Src/main.c ****         } else if (channel_num == 11) {
 1138              		.loc 1 904 16 is_stmt 1 view .LVU387
 1139              		.loc 1 904 19 is_stmt 0 view .LVU388
 1140 007a 0B2B     		cmp	r3, #11
 1141 007c 00F09480 		beq	.L56
 905:Core/Src/main.c ****             return 47;
 906:Core/Src/main.c ****         }
ARM GAS  /tmp/ccn5IMCN.s 			page 40


 907:Core/Src/main.c ****     } else if (octave_num == 1) { // 51-101
 908:Core/Src/main.c ****         if (channel_num == 0) {
 909:Core/Src/main.c ****             return 54;
 910:Core/Src/main.c ****         } else if (channel_num == 1) {
 911:Core/Src/main.c ****             return 58;
 912:Core/Src/main.c ****         } else if (channel_num == 2) {
 913:Core/Src/main.c ****             return 62;
 914:Core/Src/main.c ****         } else if (channel_num == 3) {
 915:Core/Src/main.c ****             return 66;
 916:Core/Src/main.c ****         } else if (channel_num == 4) {
 917:Core/Src/main.c ****             return 70;
 918:Core/Src/main.c ****         } else if (channel_num == 5) {
 919:Core/Src/main.c ****             return 74;
 920:Core/Src/main.c ****         } else if (channel_num == 6) {
 921:Core/Src/main.c ****             return 78;
 922:Core/Src/main.c ****         } else if (channel_num == 7) {
 923:Core/Src/main.c ****             return 82;
 924:Core/Src/main.c ****         } else if (channel_num == 8) {
 925:Core/Src/main.c ****             return 86;
 926:Core/Src/main.c ****         } else if (channel_num == 9) {
 927:Core/Src/main.c ****             return 90;
 928:Core/Src/main.c ****         } else if (channel_num == 10) {
 929:Core/Src/main.c ****             return 94;
 930:Core/Src/main.c ****         } else if (channel_num == 11) {
 931:Core/Src/main.c ****             return 98;
 932:Core/Src/main.c ****         }
 933:Core/Src/main.c ****     } else if (octave_num == 2) { // 102-152
 934:Core/Src/main.c ****         if (channel_num == 0) {
 935:Core/Src/main.c ****             return 105;
 936:Core/Src/main.c ****         } else if (channel_num == 1) {
 937:Core/Src/main.c ****             return 109;
 938:Core/Src/main.c ****         } else if (channel_num == 2) {
 939:Core/Src/main.c ****             return 113;
 940:Core/Src/main.c ****         } else if (channel_num == 3) {
 941:Core/Src/main.c ****             return 117;
 942:Core/Src/main.c ****         } else if (channel_num == 4) {
 943:Core/Src/main.c ****             return 121;
 944:Core/Src/main.c ****         } else if (channel_num == 5) {
 945:Core/Src/main.c ****             return 125;
 946:Core/Src/main.c ****         } else if (channel_num == 6) {
 947:Core/Src/main.c ****             return 129;
 948:Core/Src/main.c ****         } else if (channel_num == 7) {
 949:Core/Src/main.c ****             return 133;
 950:Core/Src/main.c ****         } else if (channel_num == 8) {
 951:Core/Src/main.c ****             return 137;
 952:Core/Src/main.c ****         } else if (channel_num == 9) {
 953:Core/Src/main.c ****             return 141;
 954:Core/Src/main.c ****         } else if (channel_num == 10) {
 955:Core/Src/main.c ****             return 145;
 956:Core/Src/main.c ****         } else if (channel_num == 11) {
 957:Core/Src/main.c ****             return 149;
 958:Core/Src/main.c ****         }
 959:Core/Src/main.c ****     } else if (octave_num == 3) { // 153-203
 960:Core/Src/main.c ****         if (channel_num == 0) {
 961:Core/Src/main.c ****             return 156;
 962:Core/Src/main.c ****         } else if (channel_num == 1) {
 963:Core/Src/main.c ****             return 160;
ARM GAS  /tmp/ccn5IMCN.s 			page 41


 964:Core/Src/main.c ****         } else if (channel_num == 2) {
 965:Core/Src/main.c ****             return 164;
 966:Core/Src/main.c ****         } else if (channel_num == 3) {
 967:Core/Src/main.c ****             return 168;
 968:Core/Src/main.c ****         } else if (channel_num == 4) {
 969:Core/Src/main.c ****             return 172;
 970:Core/Src/main.c ****         } else if (channel_num == 5) {
 971:Core/Src/main.c ****             return 176;
 972:Core/Src/main.c ****         } else if (channel_num == 6) {
 973:Core/Src/main.c ****             return 180;
 974:Core/Src/main.c ****         } else if (channel_num == 7) {
 975:Core/Src/main.c ****             return 184;
 976:Core/Src/main.c ****         } else if (channel_num == 8) {
 977:Core/Src/main.c ****             return 188;
 978:Core/Src/main.c ****         } else if (channel_num == 9) {
 979:Core/Src/main.c ****             return 192;
 980:Core/Src/main.c ****         } else if (channel_num == 10) {
 981:Core/Src/main.c ****             return 196;
 982:Core/Src/main.c ****         } else if (channel_num == 11) {
 983:Core/Src/main.c ****             return 200;
 984:Core/Src/main.c ****         }
 985:Core/Src/main.c ****     } else { // 204-255
 986:Core/Src/main.c ****         if (channel_num == 0) {
 987:Core/Src/main.c ****             return 207;
 988:Core/Src/main.c ****         } else if (channel_num == 1) {
 989:Core/Src/main.c ****             return 211;
 990:Core/Src/main.c ****         } else if (channel_num == 2) {
 991:Core/Src/main.c ****             return 215;
 992:Core/Src/main.c ****         } else if (channel_num == 3) {
 993:Core/Src/main.c ****             return 219;
 994:Core/Src/main.c ****         } else if (channel_num == 4) {
 995:Core/Src/main.c ****             return 223;
 996:Core/Src/main.c ****         } else if (channel_num == 5) {
 997:Core/Src/main.c ****             return 227;
 998:Core/Src/main.c ****         } else if (channel_num == 6) {
 999:Core/Src/main.c ****             return 231;
1000:Core/Src/main.c ****         } else if (channel_num == 7) {
1001:Core/Src/main.c ****             return 235;
1002:Core/Src/main.c ****         } else if (channel_num == 8) {
1003:Core/Src/main.c ****             return 239;
1004:Core/Src/main.c ****         } else if (channel_num == 9) {
1005:Core/Src/main.c ****             return 243;
1006:Core/Src/main.c ****         } else if (channel_num == 10) {
1007:Core/Src/main.c ****             return 247;
1008:Core/Src/main.c ****         } else if (channel_num == 11) {
1009:Core/Src/main.c ****             return 251;
1010:Core/Src/main.c ****         }
1011:Core/Src/main.c ****     }
1012:Core/Src/main.c ****     return 0;
 1142              		.loc 1 1012 12 view .LVU389
 1143 0080 0020     		movs	r0, #0
 1144              	.LVL57:
 1145              		.loc 1 1012 12 view .LVU390
 1146 0082 7AE0     		b	.L41
 1147              	.LVL58:
 1148              	.L40:
 907:Core/Src/main.c ****         if (channel_num == 0) {
ARM GAS  /tmp/ccn5IMCN.s 			page 42


 1149              		.loc 1 907 12 is_stmt 1 view .LVU391
 907:Core/Src/main.c ****         if (channel_num == 0) {
 1150              		.loc 1 907 15 is_stmt 0 view .LVU392
 1151 0084 012A     		cmp	r2, #1
 1152 0086 29D0     		beq	.L242
 933:Core/Src/main.c ****         if (channel_num == 0) {
 1153              		.loc 1 933 12 is_stmt 1 view .LVU393
 933:Core/Src/main.c ****         if (channel_num == 0) {
 1154              		.loc 1 933 15 is_stmt 0 view .LVU394
 1155 0088 022A     		cmp	r2, #2
 1156 008a 41D0     		beq	.L243
 959:Core/Src/main.c ****         if (channel_num == 0) {
 1157              		.loc 1 959 12 is_stmt 1 view .LVU395
 959:Core/Src/main.c ****         if (channel_num == 0) {
 1158              		.loc 1 959 15 is_stmt 0 view .LVU396
 1159 008c 032A     		cmp	r2, #3
 1160 008e 59D0     		beq	.L244
 986:Core/Src/main.c ****             return 207;
 1161              		.loc 1 986 9 is_stmt 1 view .LVU397
 986:Core/Src/main.c ****             return 207;
 1162              		.loc 1 986 12 is_stmt 0 view .LVU398
 1163 0090 002B     		cmp	r3, #0
 1164 0092 00F0D380 		beq	.L93
 988:Core/Src/main.c ****             return 211;
 1165              		.loc 1 988 16 is_stmt 1 view .LVU399
 988:Core/Src/main.c ****             return 211;
 1166              		.loc 1 988 19 is_stmt 0 view .LVU400
 1167 0096 012B     		cmp	r3, #1
 1168 0098 00F0D280 		beq	.L94
 990:Core/Src/main.c ****             return 215;
 1169              		.loc 1 990 16 is_stmt 1 view .LVU401
 990:Core/Src/main.c ****             return 215;
 1170              		.loc 1 990 19 is_stmt 0 view .LVU402
 1171 009c 022B     		cmp	r3, #2
 1172 009e 00F0D180 		beq	.L95
 992:Core/Src/main.c ****             return 219;
 1173              		.loc 1 992 16 is_stmt 1 view .LVU403
 992:Core/Src/main.c ****             return 219;
 1174              		.loc 1 992 19 is_stmt 0 view .LVU404
 1175 00a2 032B     		cmp	r3, #3
 1176 00a4 00F0D080 		beq	.L96
 994:Core/Src/main.c ****             return 223;
 1177              		.loc 1 994 16 is_stmt 1 view .LVU405
 994:Core/Src/main.c ****             return 223;
 1178              		.loc 1 994 19 is_stmt 0 view .LVU406
 1179 00a8 042B     		cmp	r3, #4
 1180 00aa 00F0CF80 		beq	.L97
 996:Core/Src/main.c ****             return 227;
 1181              		.loc 1 996 16 is_stmt 1 view .LVU407
 996:Core/Src/main.c ****             return 227;
 1182              		.loc 1 996 19 is_stmt 0 view .LVU408
 1183 00ae 052B     		cmp	r3, #5
 1184 00b0 00F0CE80 		beq	.L98
 998:Core/Src/main.c ****             return 231;
 1185              		.loc 1 998 16 is_stmt 1 view .LVU409
 998:Core/Src/main.c ****             return 231;
 1186              		.loc 1 998 19 is_stmt 0 view .LVU410
ARM GAS  /tmp/ccn5IMCN.s 			page 43


 1187 00b4 062B     		cmp	r3, #6
 1188 00b6 00F0CD80 		beq	.L99
1000:Core/Src/main.c ****             return 235;
 1189              		.loc 1 1000 16 is_stmt 1 view .LVU411
1000:Core/Src/main.c ****             return 235;
 1190              		.loc 1 1000 19 is_stmt 0 view .LVU412
 1191 00ba 072B     		cmp	r3, #7
 1192 00bc 00F0CC80 		beq	.L100
1002:Core/Src/main.c ****             return 239;
 1193              		.loc 1 1002 16 is_stmt 1 view .LVU413
1002:Core/Src/main.c ****             return 239;
 1194              		.loc 1 1002 19 is_stmt 0 view .LVU414
 1195 00c0 082B     		cmp	r3, #8
 1196 00c2 00F0CB80 		beq	.L101
1004:Core/Src/main.c ****             return 243;
 1197              		.loc 1 1004 16 is_stmt 1 view .LVU415
1004:Core/Src/main.c ****             return 243;
 1198              		.loc 1 1004 19 is_stmt 0 view .LVU416
 1199 00c6 092B     		cmp	r3, #9
 1200 00c8 00F0CA80 		beq	.L102
1006:Core/Src/main.c ****             return 247;
 1201              		.loc 1 1006 16 is_stmt 1 view .LVU417
1006:Core/Src/main.c ****             return 247;
 1202              		.loc 1 1006 19 is_stmt 0 view .LVU418
 1203 00cc 0A2B     		cmp	r3, #10
 1204 00ce 00F0C980 		beq	.L103
1008:Core/Src/main.c ****             return 251;
 1205              		.loc 1 1008 16 is_stmt 1 view .LVU419
1008:Core/Src/main.c ****             return 251;
 1206              		.loc 1 1008 19 is_stmt 0 view .LVU420
 1207 00d2 0B2B     		cmp	r3, #11
 1208 00d4 00F0C880 		beq	.L104
 1209              		.loc 1 1012 12 view .LVU421
 1210 00d8 0020     		movs	r0, #0
 1211              	.LVL59:
 1212              		.loc 1 1012 12 view .LVU422
 1213 00da 4EE0     		b	.L41
 1214              	.LVL60:
 1215              	.L242:
 908:Core/Src/main.c ****             return 54;
 1216              		.loc 1 908 9 is_stmt 1 view .LVU423
 908:Core/Src/main.c ****             return 54;
 1217              		.loc 1 908 12 is_stmt 0 view .LVU424
 1218 00dc 002B     		cmp	r3, #0
 1219 00de 65D0     		beq	.L57
 910:Core/Src/main.c ****             return 58;
 1220              		.loc 1 910 16 is_stmt 1 view .LVU425
 910:Core/Src/main.c ****             return 58;
 1221              		.loc 1 910 19 is_stmt 0 view .LVU426
 1222 00e0 012B     		cmp	r3, #1
 1223 00e2 65D0     		beq	.L58
 912:Core/Src/main.c ****             return 62;
 1224              		.loc 1 912 16 is_stmt 1 view .LVU427
 912:Core/Src/main.c ****             return 62;
 1225              		.loc 1 912 19 is_stmt 0 view .LVU428
 1226 00e4 022B     		cmp	r3, #2
 1227 00e6 65D0     		beq	.L59
ARM GAS  /tmp/ccn5IMCN.s 			page 44


 914:Core/Src/main.c ****             return 66;
 1228              		.loc 1 914 16 is_stmt 1 view .LVU429
 914:Core/Src/main.c ****             return 66;
 1229              		.loc 1 914 19 is_stmt 0 view .LVU430
 1230 00e8 032B     		cmp	r3, #3
 1231 00ea 65D0     		beq	.L60
 916:Core/Src/main.c ****             return 70;
 1232              		.loc 1 916 16 is_stmt 1 view .LVU431
 916:Core/Src/main.c ****             return 70;
 1233              		.loc 1 916 19 is_stmt 0 view .LVU432
 1234 00ec 042B     		cmp	r3, #4
 1235 00ee 65D0     		beq	.L61
 918:Core/Src/main.c ****             return 74;
 1236              		.loc 1 918 16 is_stmt 1 view .LVU433
 918:Core/Src/main.c ****             return 74;
 1237              		.loc 1 918 19 is_stmt 0 view .LVU434
 1238 00f0 052B     		cmp	r3, #5
 1239 00f2 65D0     		beq	.L62
 920:Core/Src/main.c ****             return 78;
 1240              		.loc 1 920 16 is_stmt 1 view .LVU435
 920:Core/Src/main.c ****             return 78;
 1241              		.loc 1 920 19 is_stmt 0 view .LVU436
 1242 00f4 062B     		cmp	r3, #6
 1243 00f6 65D0     		beq	.L63
 922:Core/Src/main.c ****             return 82;
 1244              		.loc 1 922 16 is_stmt 1 view .LVU437
 922:Core/Src/main.c ****             return 82;
 1245              		.loc 1 922 19 is_stmt 0 view .LVU438
 1246 00f8 072B     		cmp	r3, #7
 1247 00fa 65D0     		beq	.L64
 924:Core/Src/main.c ****             return 86;
 1248              		.loc 1 924 16 is_stmt 1 view .LVU439
 924:Core/Src/main.c ****             return 86;
 1249              		.loc 1 924 19 is_stmt 0 view .LVU440
 1250 00fc 082B     		cmp	r3, #8
 1251 00fe 65D0     		beq	.L65
 926:Core/Src/main.c ****             return 90;
 1252              		.loc 1 926 16 is_stmt 1 view .LVU441
 926:Core/Src/main.c ****             return 90;
 1253              		.loc 1 926 19 is_stmt 0 view .LVU442
 1254 0100 092B     		cmp	r3, #9
 1255 0102 65D0     		beq	.L66
 928:Core/Src/main.c ****             return 94;
 1256              		.loc 1 928 16 is_stmt 1 view .LVU443
 928:Core/Src/main.c ****             return 94;
 1257              		.loc 1 928 19 is_stmt 0 view .LVU444
 1258 0104 0A2B     		cmp	r3, #10
 1259 0106 65D0     		beq	.L67
 930:Core/Src/main.c ****             return 98;
 1260              		.loc 1 930 16 is_stmt 1 view .LVU445
 930:Core/Src/main.c ****             return 98;
 1261              		.loc 1 930 19 is_stmt 0 view .LVU446
 1262 0108 0B2B     		cmp	r3, #11
 1263 010a 65D0     		beq	.L68
 1264              		.loc 1 1012 12 view .LVU447
 1265 010c 0020     		movs	r0, #0
 1266              	.LVL61:
ARM GAS  /tmp/ccn5IMCN.s 			page 45


 1267              		.loc 1 1012 12 view .LVU448
 1268 010e 34E0     		b	.L41
 1269              	.LVL62:
 1270              	.L243:
 934:Core/Src/main.c ****             return 105;
 1271              		.loc 1 934 9 is_stmt 1 view .LVU449
 934:Core/Src/main.c ****             return 105;
 1272              		.loc 1 934 12 is_stmt 0 view .LVU450
 1273 0110 002B     		cmp	r3, #0
 1274 0112 63D0     		beq	.L69
 936:Core/Src/main.c ****             return 109;
 1275              		.loc 1 936 16 is_stmt 1 view .LVU451
 936:Core/Src/main.c ****             return 109;
 1276              		.loc 1 936 19 is_stmt 0 view .LVU452
 1277 0114 012B     		cmp	r3, #1
 1278 0116 63D0     		beq	.L70
 938:Core/Src/main.c ****             return 113;
 1279              		.loc 1 938 16 is_stmt 1 view .LVU453
 938:Core/Src/main.c ****             return 113;
 1280              		.loc 1 938 19 is_stmt 0 view .LVU454
 1281 0118 022B     		cmp	r3, #2
 1282 011a 63D0     		beq	.L71
 940:Core/Src/main.c ****             return 117;
 1283              		.loc 1 940 16 is_stmt 1 view .LVU455
 940:Core/Src/main.c ****             return 117;
 1284              		.loc 1 940 19 is_stmt 0 view .LVU456
 1285 011c 032B     		cmp	r3, #3
 1286 011e 63D0     		beq	.L72
 942:Core/Src/main.c ****             return 121;
 1287              		.loc 1 942 16 is_stmt 1 view .LVU457
 942:Core/Src/main.c ****             return 121;
 1288              		.loc 1 942 19 is_stmt 0 view .LVU458
 1289 0120 042B     		cmp	r3, #4
 1290 0122 63D0     		beq	.L73
 944:Core/Src/main.c ****             return 125;
 1291              		.loc 1 944 16 is_stmt 1 view .LVU459
 944:Core/Src/main.c ****             return 125;
 1292              		.loc 1 944 19 is_stmt 0 view .LVU460
 1293 0124 052B     		cmp	r3, #5
 1294 0126 63D0     		beq	.L74
 946:Core/Src/main.c ****             return 129;
 1295              		.loc 1 946 16 is_stmt 1 view .LVU461
 946:Core/Src/main.c ****             return 129;
 1296              		.loc 1 946 19 is_stmt 0 view .LVU462
 1297 0128 062B     		cmp	r3, #6
 1298 012a 63D0     		beq	.L75
 948:Core/Src/main.c ****             return 133;
 1299              		.loc 1 948 16 is_stmt 1 view .LVU463
 948:Core/Src/main.c ****             return 133;
 1300              		.loc 1 948 19 is_stmt 0 view .LVU464
 1301 012c 072B     		cmp	r3, #7
 1302 012e 63D0     		beq	.L76
 950:Core/Src/main.c ****             return 137;
 1303              		.loc 1 950 16 is_stmt 1 view .LVU465
 950:Core/Src/main.c ****             return 137;
 1304              		.loc 1 950 19 is_stmt 0 view .LVU466
 1305 0130 082B     		cmp	r3, #8
ARM GAS  /tmp/ccn5IMCN.s 			page 46


 1306 0132 63D0     		beq	.L77
 952:Core/Src/main.c ****             return 141;
 1307              		.loc 1 952 16 is_stmt 1 view .LVU467
 952:Core/Src/main.c ****             return 141;
 1308              		.loc 1 952 19 is_stmt 0 view .LVU468
 1309 0134 092B     		cmp	r3, #9
 1310 0136 63D0     		beq	.L78
 954:Core/Src/main.c ****             return 145;
 1311              		.loc 1 954 16 is_stmt 1 view .LVU469
 954:Core/Src/main.c ****             return 145;
 1312              		.loc 1 954 19 is_stmt 0 view .LVU470
 1313 0138 0A2B     		cmp	r3, #10
 1314 013a 63D0     		beq	.L79
 956:Core/Src/main.c ****             return 149;
 1315              		.loc 1 956 16 is_stmt 1 view .LVU471
 956:Core/Src/main.c ****             return 149;
 1316              		.loc 1 956 19 is_stmt 0 view .LVU472
 1317 013c 0B2B     		cmp	r3, #11
 1318 013e 63D0     		beq	.L80
 1319              		.loc 1 1012 12 view .LVU473
 1320 0140 0020     		movs	r0, #0
 1321              	.LVL63:
 1322              		.loc 1 1012 12 view .LVU474
 1323 0142 1AE0     		b	.L41
 1324              	.LVL64:
 1325              	.L244:
 960:Core/Src/main.c ****             return 156;
 1326              		.loc 1 960 9 is_stmt 1 view .LVU475
 960:Core/Src/main.c ****             return 156;
 1327              		.loc 1 960 12 is_stmt 0 view .LVU476
 1328 0144 002B     		cmp	r3, #0
 1329 0146 61D0     		beq	.L81
 962:Core/Src/main.c ****             return 160;
 1330              		.loc 1 962 16 is_stmt 1 view .LVU477
 962:Core/Src/main.c ****             return 160;
 1331              		.loc 1 962 19 is_stmt 0 view .LVU478
 1332 0148 012B     		cmp	r3, #1
 1333 014a 61D0     		beq	.L82
 964:Core/Src/main.c ****             return 164;
 1334              		.loc 1 964 16 is_stmt 1 view .LVU479
 964:Core/Src/main.c ****             return 164;
 1335              		.loc 1 964 19 is_stmt 0 view .LVU480
 1336 014c 022B     		cmp	r3, #2
 1337 014e 61D0     		beq	.L83
 966:Core/Src/main.c ****             return 168;
 1338              		.loc 1 966 16 is_stmt 1 view .LVU481
 966:Core/Src/main.c ****             return 168;
 1339              		.loc 1 966 19 is_stmt 0 view .LVU482
 1340 0150 032B     		cmp	r3, #3
 1341 0152 61D0     		beq	.L84
 968:Core/Src/main.c ****             return 172;
 1342              		.loc 1 968 16 is_stmt 1 view .LVU483
 968:Core/Src/main.c ****             return 172;
 1343              		.loc 1 968 19 is_stmt 0 view .LVU484
 1344 0154 042B     		cmp	r3, #4
 1345 0156 61D0     		beq	.L85
 970:Core/Src/main.c ****             return 176;
ARM GAS  /tmp/ccn5IMCN.s 			page 47


 1346              		.loc 1 970 16 is_stmt 1 view .LVU485
 970:Core/Src/main.c ****             return 176;
 1347              		.loc 1 970 19 is_stmt 0 view .LVU486
 1348 0158 052B     		cmp	r3, #5
 1349 015a 61D0     		beq	.L86
 972:Core/Src/main.c ****             return 180;
 1350              		.loc 1 972 16 is_stmt 1 view .LVU487
 972:Core/Src/main.c ****             return 180;
 1351              		.loc 1 972 19 is_stmt 0 view .LVU488
 1352 015c 062B     		cmp	r3, #6
 1353 015e 61D0     		beq	.L87
 974:Core/Src/main.c ****             return 184;
 1354              		.loc 1 974 16 is_stmt 1 view .LVU489
 974:Core/Src/main.c ****             return 184;
 1355              		.loc 1 974 19 is_stmt 0 view .LVU490
 1356 0160 072B     		cmp	r3, #7
 1357 0162 61D0     		beq	.L88
 976:Core/Src/main.c ****             return 188;
 1358              		.loc 1 976 16 is_stmt 1 view .LVU491
 976:Core/Src/main.c ****             return 188;
 1359              		.loc 1 976 19 is_stmt 0 view .LVU492
 1360 0164 082B     		cmp	r3, #8
 1361 0166 61D0     		beq	.L89
 978:Core/Src/main.c ****             return 192;
 1362              		.loc 1 978 16 is_stmt 1 view .LVU493
 978:Core/Src/main.c ****             return 192;
 1363              		.loc 1 978 19 is_stmt 0 view .LVU494
 1364 0168 092B     		cmp	r3, #9
 1365 016a 61D0     		beq	.L90
 980:Core/Src/main.c ****             return 196;
 1366              		.loc 1 980 16 is_stmt 1 view .LVU495
 980:Core/Src/main.c ****             return 196;
 1367              		.loc 1 980 19 is_stmt 0 view .LVU496
 1368 016c 0A2B     		cmp	r3, #10
 1369 016e 61D0     		beq	.L91
 982:Core/Src/main.c ****             return 200;
 1370              		.loc 1 982 16 is_stmt 1 view .LVU497
 982:Core/Src/main.c ****             return 200;
 1371              		.loc 1 982 19 is_stmt 0 view .LVU498
 1372 0170 0B2B     		cmp	r3, #11
 1373 0172 61D0     		beq	.L92
 1374              		.loc 1 1012 12 view .LVU499
 1375 0174 0020     		movs	r0, #0
 1376              	.LVL65:
 1377              		.loc 1 1012 12 view .LVU500
 1378 0176 00E0     		b	.L41
 1379              	.LVL66:
 1380              	.L45:
 883:Core/Src/main.c ****         } else if (channel_num == 1) {
 1381              		.loc 1 883 20 view .LVU501
 1382 0178 0320     		movs	r0, #3
 1383              	.LVL67:
 1384              	.L41:
1013:Core/Src/main.c **** }
 1385              		.loc 1 1013 1 view .LVU502
 1386 017a 5DF8044B 		ldr	r4, [sp], #4
 1387              	.LCFI12:
ARM GAS  /tmp/ccn5IMCN.s 			page 48


 1388              		.cfi_remember_state
 1389              		.cfi_restore 4
 1390              		.cfi_def_cfa_offset 0
 1391 017e 7047     		bx	lr
 1392              	.LVL68:
 1393              	.L46:
 1394              	.LCFI13:
 1395              		.cfi_restore_state
 885:Core/Src/main.c ****         } else if (channel_num == 2) {
 1396              		.loc 1 885 20 view .LVU503
 1397 0180 0720     		movs	r0, #7
 1398              	.LVL69:
 885:Core/Src/main.c ****         } else if (channel_num == 2) {
 1399              		.loc 1 885 20 view .LVU504
 1400 0182 FAE7     		b	.L41
 1401              	.LVL70:
 1402              	.L47:
 887:Core/Src/main.c ****         } else if (channel_num == 3) {
 1403              		.loc 1 887 20 view .LVU505
 1404 0184 0B20     		movs	r0, #11
 1405              	.LVL71:
 887:Core/Src/main.c ****         } else if (channel_num == 3) {
 1406              		.loc 1 887 20 view .LVU506
 1407 0186 F8E7     		b	.L41
 1408              	.LVL72:
 1409              	.L48:
 889:Core/Src/main.c ****         } else if (channel_num == 4) {
 1410              		.loc 1 889 20 view .LVU507
 1411 0188 0F20     		movs	r0, #15
 1412              	.LVL73:
 889:Core/Src/main.c ****         } else if (channel_num == 4) {
 1413              		.loc 1 889 20 view .LVU508
 1414 018a F6E7     		b	.L41
 1415              	.LVL74:
 1416              	.L49:
 891:Core/Src/main.c ****         } else if (channel_num == 5) {
 1417              		.loc 1 891 20 view .LVU509
 1418 018c 1320     		movs	r0, #19
 1419              	.LVL75:
 891:Core/Src/main.c ****         } else if (channel_num == 5) {
 1420              		.loc 1 891 20 view .LVU510
 1421 018e F4E7     		b	.L41
 1422              	.LVL76:
 1423              	.L50:
 893:Core/Src/main.c ****         } else if (channel_num == 6) {
 1424              		.loc 1 893 20 view .LVU511
 1425 0190 1720     		movs	r0, #23
 1426              	.LVL77:
 893:Core/Src/main.c ****         } else if (channel_num == 6) {
 1427              		.loc 1 893 20 view .LVU512
 1428 0192 F2E7     		b	.L41
 1429              	.LVL78:
 1430              	.L51:
 895:Core/Src/main.c ****         } else if (channel_num == 7) {
 1431              		.loc 1 895 20 view .LVU513
 1432 0194 1B20     		movs	r0, #27
 1433              	.LVL79:
ARM GAS  /tmp/ccn5IMCN.s 			page 49


 895:Core/Src/main.c ****         } else if (channel_num == 7) {
 1434              		.loc 1 895 20 view .LVU514
 1435 0196 F0E7     		b	.L41
 1436              	.LVL80:
 1437              	.L52:
 897:Core/Src/main.c ****         } else if (channel_num == 8) {
 1438              		.loc 1 897 20 view .LVU515
 1439 0198 1F20     		movs	r0, #31
 1440              	.LVL81:
 897:Core/Src/main.c ****         } else if (channel_num == 8) {
 1441              		.loc 1 897 20 view .LVU516
 1442 019a EEE7     		b	.L41
 1443              	.LVL82:
 1444              	.L53:
 899:Core/Src/main.c ****         } else if (channel_num == 9) {
 1445              		.loc 1 899 20 view .LVU517
 1446 019c 2320     		movs	r0, #35
 1447              	.LVL83:
 899:Core/Src/main.c ****         } else if (channel_num == 9) {
 1448              		.loc 1 899 20 view .LVU518
 1449 019e ECE7     		b	.L41
 1450              	.LVL84:
 1451              	.L54:
 901:Core/Src/main.c ****         } else if (channel_num == 10) {
 1452              		.loc 1 901 20 view .LVU519
 1453 01a0 2720     		movs	r0, #39
 1454              	.LVL85:
 901:Core/Src/main.c ****         } else if (channel_num == 10) {
 1455              		.loc 1 901 20 view .LVU520
 1456 01a2 EAE7     		b	.L41
 1457              	.LVL86:
 1458              	.L55:
 903:Core/Src/main.c ****         } else if (channel_num == 11) {
 1459              		.loc 1 903 20 view .LVU521
 1460 01a4 2B20     		movs	r0, #43
 1461              	.LVL87:
 903:Core/Src/main.c ****         } else if (channel_num == 11) {
 1462              		.loc 1 903 20 view .LVU522
 1463 01a6 E8E7     		b	.L41
 1464              	.LVL88:
 1465              	.L56:
 905:Core/Src/main.c ****         }
 1466              		.loc 1 905 20 view .LVU523
 1467 01a8 2F20     		movs	r0, #47
 1468              	.LVL89:
 905:Core/Src/main.c ****         }
 1469              		.loc 1 905 20 view .LVU524
 1470 01aa E6E7     		b	.L41
 1471              	.LVL90:
 1472              	.L57:
 909:Core/Src/main.c ****         } else if (channel_num == 1) {
 1473              		.loc 1 909 20 view .LVU525
 1474 01ac 3620     		movs	r0, #54
 1475              	.LVL91:
 909:Core/Src/main.c ****         } else if (channel_num == 1) {
 1476              		.loc 1 909 20 view .LVU526
 1477 01ae E4E7     		b	.L41
ARM GAS  /tmp/ccn5IMCN.s 			page 50


 1478              	.LVL92:
 1479              	.L58:
 911:Core/Src/main.c ****         } else if (channel_num == 2) {
 1480              		.loc 1 911 20 view .LVU527
 1481 01b0 3A20     		movs	r0, #58
 1482              	.LVL93:
 911:Core/Src/main.c ****         } else if (channel_num == 2) {
 1483              		.loc 1 911 20 view .LVU528
 1484 01b2 E2E7     		b	.L41
 1485              	.LVL94:
 1486              	.L59:
 913:Core/Src/main.c ****         } else if (channel_num == 3) {
 1487              		.loc 1 913 20 view .LVU529
 1488 01b4 3E20     		movs	r0, #62
 1489              	.LVL95:
 913:Core/Src/main.c ****         } else if (channel_num == 3) {
 1490              		.loc 1 913 20 view .LVU530
 1491 01b6 E0E7     		b	.L41
 1492              	.LVL96:
 1493              	.L60:
 915:Core/Src/main.c ****         } else if (channel_num == 4) {
 1494              		.loc 1 915 20 view .LVU531
 1495 01b8 4220     		movs	r0, #66
 1496              	.LVL97:
 915:Core/Src/main.c ****         } else if (channel_num == 4) {
 1497              		.loc 1 915 20 view .LVU532
 1498 01ba DEE7     		b	.L41
 1499              	.LVL98:
 1500              	.L61:
 917:Core/Src/main.c ****         } else if (channel_num == 5) {
 1501              		.loc 1 917 20 view .LVU533
 1502 01bc 4620     		movs	r0, #70
 1503              	.LVL99:
 917:Core/Src/main.c ****         } else if (channel_num == 5) {
 1504              		.loc 1 917 20 view .LVU534
 1505 01be DCE7     		b	.L41
 1506              	.LVL100:
 1507              	.L62:
 919:Core/Src/main.c ****         } else if (channel_num == 6) {
 1508              		.loc 1 919 20 view .LVU535
 1509 01c0 4A20     		movs	r0, #74
 1510              	.LVL101:
 919:Core/Src/main.c ****         } else if (channel_num == 6) {
 1511              		.loc 1 919 20 view .LVU536
 1512 01c2 DAE7     		b	.L41
 1513              	.LVL102:
 1514              	.L63:
 921:Core/Src/main.c ****         } else if (channel_num == 7) {
 1515              		.loc 1 921 20 view .LVU537
 1516 01c4 4E20     		movs	r0, #78
 1517              	.LVL103:
 921:Core/Src/main.c ****         } else if (channel_num == 7) {
 1518              		.loc 1 921 20 view .LVU538
 1519 01c6 D8E7     		b	.L41
 1520              	.LVL104:
 1521              	.L64:
 923:Core/Src/main.c ****         } else if (channel_num == 8) {
ARM GAS  /tmp/ccn5IMCN.s 			page 51


 1522              		.loc 1 923 20 view .LVU539
 1523 01c8 5220     		movs	r0, #82
 1524              	.LVL105:
 923:Core/Src/main.c ****         } else if (channel_num == 8) {
 1525              		.loc 1 923 20 view .LVU540
 1526 01ca D6E7     		b	.L41
 1527              	.LVL106:
 1528              	.L65:
 925:Core/Src/main.c ****         } else if (channel_num == 9) {
 1529              		.loc 1 925 20 view .LVU541
 1530 01cc 5620     		movs	r0, #86
 1531              	.LVL107:
 925:Core/Src/main.c ****         } else if (channel_num == 9) {
 1532              		.loc 1 925 20 view .LVU542
 1533 01ce D4E7     		b	.L41
 1534              	.LVL108:
 1535              	.L66:
 927:Core/Src/main.c ****         } else if (channel_num == 10) {
 1536              		.loc 1 927 20 view .LVU543
 1537 01d0 5A20     		movs	r0, #90
 1538              	.LVL109:
 927:Core/Src/main.c ****         } else if (channel_num == 10) {
 1539              		.loc 1 927 20 view .LVU544
 1540 01d2 D2E7     		b	.L41
 1541              	.LVL110:
 1542              	.L67:
 929:Core/Src/main.c ****         } else if (channel_num == 11) {
 1543              		.loc 1 929 20 view .LVU545
 1544 01d4 5E20     		movs	r0, #94
 1545              	.LVL111:
 929:Core/Src/main.c ****         } else if (channel_num == 11) {
 1546              		.loc 1 929 20 view .LVU546
 1547 01d6 D0E7     		b	.L41
 1548              	.LVL112:
 1549              	.L68:
 931:Core/Src/main.c ****         }
 1550              		.loc 1 931 20 view .LVU547
 1551 01d8 6220     		movs	r0, #98
 1552              	.LVL113:
 931:Core/Src/main.c ****         }
 1553              		.loc 1 931 20 view .LVU548
 1554 01da CEE7     		b	.L41
 1555              	.LVL114:
 1556              	.L69:
 935:Core/Src/main.c ****         } else if (channel_num == 1) {
 1557              		.loc 1 935 20 view .LVU549
 1558 01dc 6920     		movs	r0, #105
 1559              	.LVL115:
 935:Core/Src/main.c ****         } else if (channel_num == 1) {
 1560              		.loc 1 935 20 view .LVU550
 1561 01de CCE7     		b	.L41
 1562              	.LVL116:
 1563              	.L70:
 937:Core/Src/main.c ****         } else if (channel_num == 2) {
 1564              		.loc 1 937 20 view .LVU551
 1565 01e0 6D20     		movs	r0, #109
 1566              	.LVL117:
ARM GAS  /tmp/ccn5IMCN.s 			page 52


 937:Core/Src/main.c ****         } else if (channel_num == 2) {
 1567              		.loc 1 937 20 view .LVU552
 1568 01e2 CAE7     		b	.L41
 1569              	.LVL118:
 1570              	.L71:
 939:Core/Src/main.c ****         } else if (channel_num == 3) {
 1571              		.loc 1 939 20 view .LVU553
 1572 01e4 7120     		movs	r0, #113
 1573              	.LVL119:
 939:Core/Src/main.c ****         } else if (channel_num == 3) {
 1574              		.loc 1 939 20 view .LVU554
 1575 01e6 C8E7     		b	.L41
 1576              	.LVL120:
 1577              	.L72:
 941:Core/Src/main.c ****         } else if (channel_num == 4) {
 1578              		.loc 1 941 20 view .LVU555
 1579 01e8 7520     		movs	r0, #117
 1580              	.LVL121:
 941:Core/Src/main.c ****         } else if (channel_num == 4) {
 1581              		.loc 1 941 20 view .LVU556
 1582 01ea C6E7     		b	.L41
 1583              	.LVL122:
 1584              	.L73:
 943:Core/Src/main.c ****         } else if (channel_num == 5) {
 1585              		.loc 1 943 20 view .LVU557
 1586 01ec 7920     		movs	r0, #121
 1587              	.LVL123:
 943:Core/Src/main.c ****         } else if (channel_num == 5) {
 1588              		.loc 1 943 20 view .LVU558
 1589 01ee C4E7     		b	.L41
 1590              	.LVL124:
 1591              	.L74:
 945:Core/Src/main.c ****         } else if (channel_num == 6) {
 1592              		.loc 1 945 20 view .LVU559
 1593 01f0 7D20     		movs	r0, #125
 1594              	.LVL125:
 945:Core/Src/main.c ****         } else if (channel_num == 6) {
 1595              		.loc 1 945 20 view .LVU560
 1596 01f2 C2E7     		b	.L41
 1597              	.LVL126:
 1598              	.L75:
 947:Core/Src/main.c ****         } else if (channel_num == 7) {
 1599              		.loc 1 947 20 view .LVU561
 1600 01f4 8120     		movs	r0, #129
 1601              	.LVL127:
 947:Core/Src/main.c ****         } else if (channel_num == 7) {
 1602              		.loc 1 947 20 view .LVU562
 1603 01f6 C0E7     		b	.L41
 1604              	.LVL128:
 1605              	.L76:
 949:Core/Src/main.c ****         } else if (channel_num == 8) {
 1606              		.loc 1 949 20 view .LVU563
 1607 01f8 8520     		movs	r0, #133
 1608              	.LVL129:
 949:Core/Src/main.c ****         } else if (channel_num == 8) {
 1609              		.loc 1 949 20 view .LVU564
 1610 01fa BEE7     		b	.L41
ARM GAS  /tmp/ccn5IMCN.s 			page 53


 1611              	.LVL130:
 1612              	.L77:
 951:Core/Src/main.c ****         } else if (channel_num == 9) {
 1613              		.loc 1 951 20 view .LVU565
 1614 01fc 8920     		movs	r0, #137
 1615              	.LVL131:
 951:Core/Src/main.c ****         } else if (channel_num == 9) {
 1616              		.loc 1 951 20 view .LVU566
 1617 01fe BCE7     		b	.L41
 1618              	.LVL132:
 1619              	.L78:
 953:Core/Src/main.c ****         } else if (channel_num == 10) {
 1620              		.loc 1 953 20 view .LVU567
 1621 0200 8D20     		movs	r0, #141
 1622              	.LVL133:
 953:Core/Src/main.c ****         } else if (channel_num == 10) {
 1623              		.loc 1 953 20 view .LVU568
 1624 0202 BAE7     		b	.L41
 1625              	.LVL134:
 1626              	.L79:
 955:Core/Src/main.c ****         } else if (channel_num == 11) {
 1627              		.loc 1 955 20 view .LVU569
 1628 0204 9120     		movs	r0, #145
 1629              	.LVL135:
 955:Core/Src/main.c ****         } else if (channel_num == 11) {
 1630              		.loc 1 955 20 view .LVU570
 1631 0206 B8E7     		b	.L41
 1632              	.LVL136:
 1633              	.L80:
 957:Core/Src/main.c ****         }
 1634              		.loc 1 957 20 view .LVU571
 1635 0208 9520     		movs	r0, #149
 1636              	.LVL137:
 957:Core/Src/main.c ****         }
 1637              		.loc 1 957 20 view .LVU572
 1638 020a B6E7     		b	.L41
 1639              	.LVL138:
 1640              	.L81:
 961:Core/Src/main.c ****         } else if (channel_num == 1) {
 1641              		.loc 1 961 20 view .LVU573
 1642 020c 9C20     		movs	r0, #156
 1643              	.LVL139:
 961:Core/Src/main.c ****         } else if (channel_num == 1) {
 1644              		.loc 1 961 20 view .LVU574
 1645 020e B4E7     		b	.L41
 1646              	.LVL140:
 1647              	.L82:
 963:Core/Src/main.c ****         } else if (channel_num == 2) {
 1648              		.loc 1 963 20 view .LVU575
 1649 0210 A020     		movs	r0, #160
 1650              	.LVL141:
 963:Core/Src/main.c ****         } else if (channel_num == 2) {
 1651              		.loc 1 963 20 view .LVU576
 1652 0212 B2E7     		b	.L41
 1653              	.LVL142:
 1654              	.L83:
 965:Core/Src/main.c ****         } else if (channel_num == 3) {
ARM GAS  /tmp/ccn5IMCN.s 			page 54


 1655              		.loc 1 965 20 view .LVU577
 1656 0214 A420     		movs	r0, #164
 1657              	.LVL143:
 965:Core/Src/main.c ****         } else if (channel_num == 3) {
 1658              		.loc 1 965 20 view .LVU578
 1659 0216 B0E7     		b	.L41
 1660              	.LVL144:
 1661              	.L84:
 967:Core/Src/main.c ****         } else if (channel_num == 4) {
 1662              		.loc 1 967 20 view .LVU579
 1663 0218 A820     		movs	r0, #168
 1664              	.LVL145:
 967:Core/Src/main.c ****         } else if (channel_num == 4) {
 1665              		.loc 1 967 20 view .LVU580
 1666 021a AEE7     		b	.L41
 1667              	.LVL146:
 1668              	.L85:
 969:Core/Src/main.c ****         } else if (channel_num == 5) {
 1669              		.loc 1 969 20 view .LVU581
 1670 021c AC20     		movs	r0, #172
 1671              	.LVL147:
 969:Core/Src/main.c ****         } else if (channel_num == 5) {
 1672              		.loc 1 969 20 view .LVU582
 1673 021e ACE7     		b	.L41
 1674              	.LVL148:
 1675              	.L86:
 971:Core/Src/main.c ****         } else if (channel_num == 6) {
 1676              		.loc 1 971 20 view .LVU583
 1677 0220 B020     		movs	r0, #176
 1678              	.LVL149:
 971:Core/Src/main.c ****         } else if (channel_num == 6) {
 1679              		.loc 1 971 20 view .LVU584
 1680 0222 AAE7     		b	.L41
 1681              	.LVL150:
 1682              	.L87:
 973:Core/Src/main.c ****         } else if (channel_num == 7) {
 1683              		.loc 1 973 20 view .LVU585
 1684 0224 B420     		movs	r0, #180
 1685              	.LVL151:
 973:Core/Src/main.c ****         } else if (channel_num == 7) {
 1686              		.loc 1 973 20 view .LVU586
 1687 0226 A8E7     		b	.L41
 1688              	.LVL152:
 1689              	.L88:
 975:Core/Src/main.c ****         } else if (channel_num == 8) {
 1690              		.loc 1 975 20 view .LVU587
 1691 0228 B820     		movs	r0, #184
 1692              	.LVL153:
 975:Core/Src/main.c ****         } else if (channel_num == 8) {
 1693              		.loc 1 975 20 view .LVU588
 1694 022a A6E7     		b	.L41
 1695              	.LVL154:
 1696              	.L89:
 977:Core/Src/main.c ****         } else if (channel_num == 9) {
 1697              		.loc 1 977 20 view .LVU589
 1698 022c BC20     		movs	r0, #188
 1699              	.LVL155:
ARM GAS  /tmp/ccn5IMCN.s 			page 55


 977:Core/Src/main.c ****         } else if (channel_num == 9) {
 1700              		.loc 1 977 20 view .LVU590
 1701 022e A4E7     		b	.L41
 1702              	.LVL156:
 1703              	.L90:
 979:Core/Src/main.c ****         } else if (channel_num == 10) {
 1704              		.loc 1 979 20 view .LVU591
 1705 0230 C020     		movs	r0, #192
 1706              	.LVL157:
 979:Core/Src/main.c ****         } else if (channel_num == 10) {
 1707              		.loc 1 979 20 view .LVU592
 1708 0232 A2E7     		b	.L41
 1709              	.LVL158:
 1710              	.L91:
 981:Core/Src/main.c ****         } else if (channel_num == 11) {
 1711              		.loc 1 981 20 view .LVU593
 1712 0234 C420     		movs	r0, #196
 1713              	.LVL159:
 981:Core/Src/main.c ****         } else if (channel_num == 11) {
 1714              		.loc 1 981 20 view .LVU594
 1715 0236 A0E7     		b	.L41
 1716              	.LVL160:
 1717              	.L92:
 983:Core/Src/main.c ****         }
 1718              		.loc 1 983 20 view .LVU595
 1719 0238 C820     		movs	r0, #200
 1720              	.LVL161:
 983:Core/Src/main.c ****         }
 1721              		.loc 1 983 20 view .LVU596
 1722 023a 9EE7     		b	.L41
 1723              	.LVL162:
 1724              	.L93:
 987:Core/Src/main.c ****         } else if (channel_num == 1) {
 1725              		.loc 1 987 20 view .LVU597
 1726 023c CF20     		movs	r0, #207
 1727              	.LVL163:
 987:Core/Src/main.c ****         } else if (channel_num == 1) {
 1728              		.loc 1 987 20 view .LVU598
 1729 023e 9CE7     		b	.L41
 1730              	.LVL164:
 1731              	.L94:
 989:Core/Src/main.c ****         } else if (channel_num == 2) {
 1732              		.loc 1 989 20 view .LVU599
 1733 0240 D320     		movs	r0, #211
 1734              	.LVL165:
 989:Core/Src/main.c ****         } else if (channel_num == 2) {
 1735              		.loc 1 989 20 view .LVU600
 1736 0242 9AE7     		b	.L41
 1737              	.LVL166:
 1738              	.L95:
 991:Core/Src/main.c ****         } else if (channel_num == 3) {
 1739              		.loc 1 991 20 view .LVU601
 1740 0244 D720     		movs	r0, #215
 1741              	.LVL167:
 991:Core/Src/main.c ****         } else if (channel_num == 3) {
 1742              		.loc 1 991 20 view .LVU602
 1743 0246 98E7     		b	.L41
ARM GAS  /tmp/ccn5IMCN.s 			page 56


 1744              	.LVL168:
 1745              	.L96:
 993:Core/Src/main.c ****         } else if (channel_num == 4) {
 1746              		.loc 1 993 20 view .LVU603
 1747 0248 DB20     		movs	r0, #219
 1748              	.LVL169:
 993:Core/Src/main.c ****         } else if (channel_num == 4) {
 1749              		.loc 1 993 20 view .LVU604
 1750 024a 96E7     		b	.L41
 1751              	.LVL170:
 1752              	.L97:
 995:Core/Src/main.c ****         } else if (channel_num == 5) {
 1753              		.loc 1 995 20 view .LVU605
 1754 024c DF20     		movs	r0, #223
 1755              	.LVL171:
 995:Core/Src/main.c ****         } else if (channel_num == 5) {
 1756              		.loc 1 995 20 view .LVU606
 1757 024e 94E7     		b	.L41
 1758              	.LVL172:
 1759              	.L98:
 997:Core/Src/main.c ****         } else if (channel_num == 6) {
 1760              		.loc 1 997 20 view .LVU607
 1761 0250 E320     		movs	r0, #227
 1762              	.LVL173:
 997:Core/Src/main.c ****         } else if (channel_num == 6) {
 1763              		.loc 1 997 20 view .LVU608
 1764 0252 92E7     		b	.L41
 1765              	.LVL174:
 1766              	.L99:
 999:Core/Src/main.c ****         } else if (channel_num == 7) {
 1767              		.loc 1 999 20 view .LVU609
 1768 0254 E720     		movs	r0, #231
 1769              	.LVL175:
 999:Core/Src/main.c ****         } else if (channel_num == 7) {
 1770              		.loc 1 999 20 view .LVU610
 1771 0256 90E7     		b	.L41
 1772              	.LVL176:
 1773              	.L100:
1001:Core/Src/main.c ****         } else if (channel_num == 8) {
 1774              		.loc 1 1001 20 view .LVU611
 1775 0258 EB20     		movs	r0, #235
 1776              	.LVL177:
1001:Core/Src/main.c ****         } else if (channel_num == 8) {
 1777              		.loc 1 1001 20 view .LVU612
 1778 025a 8EE7     		b	.L41
 1779              	.LVL178:
 1780              	.L101:
1003:Core/Src/main.c ****         } else if (channel_num == 9) {
 1781              		.loc 1 1003 20 view .LVU613
 1782 025c EF20     		movs	r0, #239
 1783              	.LVL179:
1003:Core/Src/main.c ****         } else if (channel_num == 9) {
 1784              		.loc 1 1003 20 view .LVU614
 1785 025e 8CE7     		b	.L41
 1786              	.LVL180:
 1787              	.L102:
1005:Core/Src/main.c ****         } else if (channel_num == 10) {
ARM GAS  /tmp/ccn5IMCN.s 			page 57


 1788              		.loc 1 1005 20 view .LVU615
 1789 0260 F320     		movs	r0, #243
 1790              	.LVL181:
1005:Core/Src/main.c ****         } else if (channel_num == 10) {
 1791              		.loc 1 1005 20 view .LVU616
 1792 0262 8AE7     		b	.L41
 1793              	.LVL182:
 1794              	.L103:
1007:Core/Src/main.c ****         } else if (channel_num == 11) {
 1795              		.loc 1 1007 20 view .LVU617
 1796 0264 F720     		movs	r0, #247
 1797              	.LVL183:
1007:Core/Src/main.c ****         } else if (channel_num == 11) {
 1798              		.loc 1 1007 20 view .LVU618
 1799 0266 88E7     		b	.L41
 1800              	.LVL184:
 1801              	.L104:
1009:Core/Src/main.c ****         }
 1802              		.loc 1 1009 20 view .LVU619
 1803 0268 FB20     		movs	r0, #251
 1804              	.LVL185:
1009:Core/Src/main.c ****         }
 1805              		.loc 1 1009 20 view .LVU620
 1806 026a 86E7     		b	.L41
 1807              	.LVL186:
 1808              	.L240:
 1809              	.LCFI14:
 1810              		.cfi_def_cfa_offset 0
 1811              		.cfi_restore 4
 865:Core/Src/main.c ****     
 1812              		.loc 1 865 9 view .LVU621
 1813 026c 0C23     		movs	r3, #12
 1814              	.LVL187:
 881:Core/Src/main.c ****         if (channel_num == 0) {
 1815              		.loc 1 881 5 is_stmt 1 view .LVU622
 881:Core/Src/main.c ****         if (channel_num == 0) {
 1816              		.loc 1 881 8 is_stmt 0 view .LVU623
 1817 026e 2ABB     		cbnz	r2, .L110
 882:Core/Src/main.c ****             return 3;
 1818              		.loc 1 882 9 is_stmt 1 view .LVU624
 882:Core/Src/main.c ****             return 3;
 1819              		.loc 1 882 12 is_stmt 0 view .LVU625
 1820 0270 002B     		cmp	r3, #0
 1821 0272 00F09D80 		beq	.L111
 884:Core/Src/main.c ****             return 7;
 1822              		.loc 1 884 16 is_stmt 1 view .LVU626
 884:Core/Src/main.c ****             return 7;
 1823              		.loc 1 884 19 is_stmt 0 view .LVU627
 1824 0276 012B     		cmp	r3, #1
 1825 0278 00F09C80 		beq	.L113
 886:Core/Src/main.c ****             return 11;
 1826              		.loc 1 886 16 is_stmt 1 view .LVU628
 886:Core/Src/main.c ****             return 11;
 1827              		.loc 1 886 19 is_stmt 0 view .LVU629
 1828 027c 022B     		cmp	r3, #2
 1829 027e 00F09B80 		beq	.L115
 888:Core/Src/main.c ****             return 15;
ARM GAS  /tmp/ccn5IMCN.s 			page 58


 1830              		.loc 1 888 16 is_stmt 1 view .LVU630
 888:Core/Src/main.c ****             return 15;
 1831              		.loc 1 888 19 is_stmt 0 view .LVU631
 1832 0282 032B     		cmp	r3, #3
 1833 0284 00F09A80 		beq	.L117
 890:Core/Src/main.c ****             return 19;
 1834              		.loc 1 890 16 is_stmt 1 view .LVU632
 890:Core/Src/main.c ****             return 19;
 1835              		.loc 1 890 19 is_stmt 0 view .LVU633
 1836 0288 042B     		cmp	r3, #4
 1837 028a 00F09980 		beq	.L119
 892:Core/Src/main.c ****             return 23;
 1838              		.loc 1 892 16 is_stmt 1 view .LVU634
 892:Core/Src/main.c ****             return 23;
 1839              		.loc 1 892 19 is_stmt 0 view .LVU635
 1840 028e 052B     		cmp	r3, #5
 1841 0290 00F09880 		beq	.L121
 894:Core/Src/main.c ****             return 27;
 1842              		.loc 1 894 16 is_stmt 1 view .LVU636
 894:Core/Src/main.c ****             return 27;
 1843              		.loc 1 894 19 is_stmt 0 view .LVU637
 1844 0294 062B     		cmp	r3, #6
 1845 0296 00F09780 		beq	.L123
 896:Core/Src/main.c ****             return 31;
 1846              		.loc 1 896 16 is_stmt 1 view .LVU638
 896:Core/Src/main.c ****             return 31;
 1847              		.loc 1 896 19 is_stmt 0 view .LVU639
 1848 029a 072B     		cmp	r3, #7
 1849 029c 00F09680 		beq	.L125
 898:Core/Src/main.c ****             return 35;
 1850              		.loc 1 898 16 is_stmt 1 view .LVU640
 898:Core/Src/main.c ****             return 35;
 1851              		.loc 1 898 19 is_stmt 0 view .LVU641
 1852 02a0 082B     		cmp	r3, #8
 1853 02a2 00F09580 		beq	.L127
 900:Core/Src/main.c ****             return 39;
 1854              		.loc 1 900 16 is_stmt 1 view .LVU642
 900:Core/Src/main.c ****             return 39;
 1855              		.loc 1 900 19 is_stmt 0 view .LVU643
 1856 02a6 092B     		cmp	r3, #9
 1857 02a8 00F09480 		beq	.L129
 902:Core/Src/main.c ****             return 43;
 1858              		.loc 1 902 16 is_stmt 1 view .LVU644
 902:Core/Src/main.c ****             return 43;
 1859              		.loc 1 902 19 is_stmt 0 view .LVU645
 1860 02ac 0A2B     		cmp	r3, #10
 1861 02ae 00F09380 		beq	.L131
 904:Core/Src/main.c ****             return 47;
 1862              		.loc 1 904 16 is_stmt 1 view .LVU646
 904:Core/Src/main.c ****             return 47;
 1863              		.loc 1 904 19 is_stmt 0 view .LVU647
 1864 02b2 0B2B     		cmp	r3, #11
 1865 02b4 00F09280 		beq	.L133
1012:Core/Src/main.c **** }
 1866              		.loc 1 1012 12 view .LVU648
 1867 02b8 0020     		movs	r0, #0
 1868              	.LVL188:
ARM GAS  /tmp/ccn5IMCN.s 			page 59


1012:Core/Src/main.c **** }
 1869              		.loc 1 1012 12 view .LVU649
 1870 02ba 7047     		bx	lr
 1871              	.LVL189:
 1872              	.L110:
 907:Core/Src/main.c ****         if (channel_num == 0) {
 1873              		.loc 1 907 12 is_stmt 1 view .LVU650
 907:Core/Src/main.c ****         if (channel_num == 0) {
 1874              		.loc 1 907 15 is_stmt 0 view .LVU651
 1875 02bc 012A     		cmp	r2, #1
 1876 02be 29D0     		beq	.L245
 933:Core/Src/main.c ****         if (channel_num == 0) {
 1877              		.loc 1 933 12 is_stmt 1 view .LVU652
 933:Core/Src/main.c ****         if (channel_num == 0) {
 1878              		.loc 1 933 15 is_stmt 0 view .LVU653
 1879 02c0 022A     		cmp	r2, #2
 1880 02c2 41D0     		beq	.L246
 959:Core/Src/main.c ****         if (channel_num == 0) {
 1881              		.loc 1 959 12 is_stmt 1 view .LVU654
 959:Core/Src/main.c ****         if (channel_num == 0) {
 1882              		.loc 1 959 15 is_stmt 0 view .LVU655
 1883 02c4 032A     		cmp	r2, #3
 1884 02c6 59D0     		beq	.L247
 986:Core/Src/main.c ****             return 207;
 1885              		.loc 1 986 9 is_stmt 1 view .LVU656
 986:Core/Src/main.c ****             return 207;
 1886              		.loc 1 986 12 is_stmt 0 view .LVU657
 1887 02c8 002B     		cmp	r3, #0
 1888 02ca 00F0D180 		beq	.L214
 988:Core/Src/main.c ****             return 211;
 1889              		.loc 1 988 16 is_stmt 1 view .LVU658
 988:Core/Src/main.c ****             return 211;
 1890              		.loc 1 988 19 is_stmt 0 view .LVU659
 1891 02ce 012B     		cmp	r3, #1
 1892 02d0 00F0D080 		beq	.L216
 990:Core/Src/main.c ****             return 215;
 1893              		.loc 1 990 16 is_stmt 1 view .LVU660
 990:Core/Src/main.c ****             return 215;
 1894              		.loc 1 990 19 is_stmt 0 view .LVU661
 1895 02d4 022B     		cmp	r3, #2
 1896 02d6 00F0CF80 		beq	.L218
 992:Core/Src/main.c ****             return 219;
 1897              		.loc 1 992 16 is_stmt 1 view .LVU662
 992:Core/Src/main.c ****             return 219;
 1898              		.loc 1 992 19 is_stmt 0 view .LVU663
 1899 02da 032B     		cmp	r3, #3
 1900 02dc 00F0CE80 		beq	.L220
 994:Core/Src/main.c ****             return 223;
 1901              		.loc 1 994 16 is_stmt 1 view .LVU664
 994:Core/Src/main.c ****             return 223;
 1902              		.loc 1 994 19 is_stmt 0 view .LVU665
 1903 02e0 042B     		cmp	r3, #4
 1904 02e2 00F0CD80 		beq	.L222
 996:Core/Src/main.c ****             return 227;
 1905              		.loc 1 996 16 is_stmt 1 view .LVU666
 996:Core/Src/main.c ****             return 227;
 1906              		.loc 1 996 19 is_stmt 0 view .LVU667
ARM GAS  /tmp/ccn5IMCN.s 			page 60


 1907 02e6 052B     		cmp	r3, #5
 1908 02e8 00F0CC80 		beq	.L224
 998:Core/Src/main.c ****             return 231;
 1909              		.loc 1 998 16 is_stmt 1 view .LVU668
 998:Core/Src/main.c ****             return 231;
 1910              		.loc 1 998 19 is_stmt 0 view .LVU669
 1911 02ec 062B     		cmp	r3, #6
 1912 02ee 00F0CB80 		beq	.L226
1000:Core/Src/main.c ****             return 235;
 1913              		.loc 1 1000 16 is_stmt 1 view .LVU670
1000:Core/Src/main.c ****             return 235;
 1914              		.loc 1 1000 19 is_stmt 0 view .LVU671
 1915 02f2 072B     		cmp	r3, #7
 1916 02f4 00F0CA80 		beq	.L228
1002:Core/Src/main.c ****             return 239;
 1917              		.loc 1 1002 16 is_stmt 1 view .LVU672
1002:Core/Src/main.c ****             return 239;
 1918              		.loc 1 1002 19 is_stmt 0 view .LVU673
 1919 02f8 082B     		cmp	r3, #8
 1920 02fa 00F0C980 		beq	.L230
1004:Core/Src/main.c ****             return 243;
 1921              		.loc 1 1004 16 is_stmt 1 view .LVU674
1004:Core/Src/main.c ****             return 243;
 1922              		.loc 1 1004 19 is_stmt 0 view .LVU675
 1923 02fe 092B     		cmp	r3, #9
 1924 0300 00F0C880 		beq	.L232
1006:Core/Src/main.c ****             return 247;
 1925              		.loc 1 1006 16 is_stmt 1 view .LVU676
1006:Core/Src/main.c ****             return 247;
 1926              		.loc 1 1006 19 is_stmt 0 view .LVU677
 1927 0304 0A2B     		cmp	r3, #10
 1928 0306 00F0C780 		beq	.L234
1008:Core/Src/main.c ****             return 251;
 1929              		.loc 1 1008 16 is_stmt 1 view .LVU678
1008:Core/Src/main.c ****             return 251;
 1930              		.loc 1 1008 19 is_stmt 0 view .LVU679
 1931 030a 0B2B     		cmp	r3, #11
 1932 030c 00F0C680 		beq	.L236
1012:Core/Src/main.c **** }
 1933              		.loc 1 1012 12 view .LVU680
 1934 0310 0020     		movs	r0, #0
 1935              	.LVL190:
1012:Core/Src/main.c **** }
 1936              		.loc 1 1012 12 view .LVU681
 1937 0312 7047     		bx	lr
 1938              	.LVL191:
 1939              	.L245:
 908:Core/Src/main.c ****             return 54;
 1940              		.loc 1 908 9 is_stmt 1 view .LVU682
 908:Core/Src/main.c ****             return 54;
 1941              		.loc 1 908 12 is_stmt 0 view .LVU683
 1942 0314 002B     		cmp	r3, #0
 1943 0316 63D0     		beq	.L138
 910:Core/Src/main.c ****             return 58;
 1944              		.loc 1 910 16 is_stmt 1 view .LVU684
 910:Core/Src/main.c ****             return 58;
 1945              		.loc 1 910 19 is_stmt 0 view .LVU685
ARM GAS  /tmp/ccn5IMCN.s 			page 61


 1946 0318 012B     		cmp	r3, #1
 1947 031a 63D0     		beq	.L140
 912:Core/Src/main.c ****             return 62;
 1948              		.loc 1 912 16 is_stmt 1 view .LVU686
 912:Core/Src/main.c ****             return 62;
 1949              		.loc 1 912 19 is_stmt 0 view .LVU687
 1950 031c 022B     		cmp	r3, #2
 1951 031e 63D0     		beq	.L142
 914:Core/Src/main.c ****             return 66;
 1952              		.loc 1 914 16 is_stmt 1 view .LVU688
 914:Core/Src/main.c ****             return 66;
 1953              		.loc 1 914 19 is_stmt 0 view .LVU689
 1954 0320 032B     		cmp	r3, #3
 1955 0322 63D0     		beq	.L144
 916:Core/Src/main.c ****             return 70;
 1956              		.loc 1 916 16 is_stmt 1 view .LVU690
 916:Core/Src/main.c ****             return 70;
 1957              		.loc 1 916 19 is_stmt 0 view .LVU691
 1958 0324 042B     		cmp	r3, #4
 1959 0326 63D0     		beq	.L146
 918:Core/Src/main.c ****             return 74;
 1960              		.loc 1 918 16 is_stmt 1 view .LVU692
 918:Core/Src/main.c ****             return 74;
 1961              		.loc 1 918 19 is_stmt 0 view .LVU693
 1962 0328 052B     		cmp	r3, #5
 1963 032a 63D0     		beq	.L148
 920:Core/Src/main.c ****             return 78;
 1964              		.loc 1 920 16 is_stmt 1 view .LVU694
 920:Core/Src/main.c ****             return 78;
 1965              		.loc 1 920 19 is_stmt 0 view .LVU695
 1966 032c 062B     		cmp	r3, #6
 1967 032e 63D0     		beq	.L150
 922:Core/Src/main.c ****             return 82;
 1968              		.loc 1 922 16 is_stmt 1 view .LVU696
 922:Core/Src/main.c ****             return 82;
 1969              		.loc 1 922 19 is_stmt 0 view .LVU697
 1970 0330 072B     		cmp	r3, #7
 1971 0332 63D0     		beq	.L152
 924:Core/Src/main.c ****             return 86;
 1972              		.loc 1 924 16 is_stmt 1 view .LVU698
 924:Core/Src/main.c ****             return 86;
 1973              		.loc 1 924 19 is_stmt 0 view .LVU699
 1974 0334 082B     		cmp	r3, #8
 1975 0336 63D0     		beq	.L154
 926:Core/Src/main.c ****             return 90;
 1976              		.loc 1 926 16 is_stmt 1 view .LVU700
 926:Core/Src/main.c ****             return 90;
 1977              		.loc 1 926 19 is_stmt 0 view .LVU701
 1978 0338 092B     		cmp	r3, #9
 1979 033a 63D0     		beq	.L156
 928:Core/Src/main.c ****             return 94;
 1980              		.loc 1 928 16 is_stmt 1 view .LVU702
 928:Core/Src/main.c ****             return 94;
 1981              		.loc 1 928 19 is_stmt 0 view .LVU703
 1982 033c 0A2B     		cmp	r3, #10
 1983 033e 63D0     		beq	.L158
 930:Core/Src/main.c ****             return 98;
ARM GAS  /tmp/ccn5IMCN.s 			page 62


 1984              		.loc 1 930 16 is_stmt 1 view .LVU704
 930:Core/Src/main.c ****             return 98;
 1985              		.loc 1 930 19 is_stmt 0 view .LVU705
 1986 0340 0B2B     		cmp	r3, #11
 1987 0342 63D0     		beq	.L160
1012:Core/Src/main.c **** }
 1988              		.loc 1 1012 12 view .LVU706
 1989 0344 0020     		movs	r0, #0
 1990              	.LVL192:
1012:Core/Src/main.c **** }
 1991              		.loc 1 1012 12 view .LVU707
 1992 0346 7047     		bx	lr
 1993              	.LVL193:
 1994              	.L246:
 934:Core/Src/main.c ****             return 105;
 1995              		.loc 1 934 9 is_stmt 1 view .LVU708
 934:Core/Src/main.c ****             return 105;
 1996              		.loc 1 934 12 is_stmt 0 view .LVU709
 1997 0348 002B     		cmp	r3, #0
 1998 034a 61D0     		beq	.L164
 936:Core/Src/main.c ****             return 109;
 1999              		.loc 1 936 16 is_stmt 1 view .LVU710
 936:Core/Src/main.c ****             return 109;
 2000              		.loc 1 936 19 is_stmt 0 view .LVU711
 2001 034c 012B     		cmp	r3, #1
 2002 034e 61D0     		beq	.L166
 938:Core/Src/main.c ****             return 113;
 2003              		.loc 1 938 16 is_stmt 1 view .LVU712
 938:Core/Src/main.c ****             return 113;
 2004              		.loc 1 938 19 is_stmt 0 view .LVU713
 2005 0350 022B     		cmp	r3, #2
 2006 0352 61D0     		beq	.L168
 940:Core/Src/main.c ****             return 117;
 2007              		.loc 1 940 16 is_stmt 1 view .LVU714
 940:Core/Src/main.c ****             return 117;
 2008              		.loc 1 940 19 is_stmt 0 view .LVU715
 2009 0354 032B     		cmp	r3, #3
 2010 0356 61D0     		beq	.L170
 942:Core/Src/main.c ****             return 121;
 2011              		.loc 1 942 16 is_stmt 1 view .LVU716
 942:Core/Src/main.c ****             return 121;
 2012              		.loc 1 942 19 is_stmt 0 view .LVU717
 2013 0358 042B     		cmp	r3, #4
 2014 035a 61D0     		beq	.L172
 944:Core/Src/main.c ****             return 125;
 2015              		.loc 1 944 16 is_stmt 1 view .LVU718
 944:Core/Src/main.c ****             return 125;
 2016              		.loc 1 944 19 is_stmt 0 view .LVU719
 2017 035c 052B     		cmp	r3, #5
 2018 035e 61D0     		beq	.L174
 946:Core/Src/main.c ****             return 129;
 2019              		.loc 1 946 16 is_stmt 1 view .LVU720
 946:Core/Src/main.c ****             return 129;
 2020              		.loc 1 946 19 is_stmt 0 view .LVU721
 2021 0360 062B     		cmp	r3, #6
 2022 0362 61D0     		beq	.L176
 948:Core/Src/main.c ****             return 133;
ARM GAS  /tmp/ccn5IMCN.s 			page 63


 2023              		.loc 1 948 16 is_stmt 1 view .LVU722
 948:Core/Src/main.c ****             return 133;
 2024              		.loc 1 948 19 is_stmt 0 view .LVU723
 2025 0364 072B     		cmp	r3, #7
 2026 0366 61D0     		beq	.L178
 950:Core/Src/main.c ****             return 137;
 2027              		.loc 1 950 16 is_stmt 1 view .LVU724
 950:Core/Src/main.c ****             return 137;
 2028              		.loc 1 950 19 is_stmt 0 view .LVU725
 2029 0368 082B     		cmp	r3, #8
 2030 036a 61D0     		beq	.L180
 952:Core/Src/main.c ****             return 141;
 2031              		.loc 1 952 16 is_stmt 1 view .LVU726
 952:Core/Src/main.c ****             return 141;
 2032              		.loc 1 952 19 is_stmt 0 view .LVU727
 2033 036c 092B     		cmp	r3, #9
 2034 036e 61D0     		beq	.L182
 954:Core/Src/main.c ****             return 145;
 2035              		.loc 1 954 16 is_stmt 1 view .LVU728
 954:Core/Src/main.c ****             return 145;
 2036              		.loc 1 954 19 is_stmt 0 view .LVU729
 2037 0370 0A2B     		cmp	r3, #10
 2038 0372 61D0     		beq	.L184
 956:Core/Src/main.c ****             return 149;
 2039              		.loc 1 956 16 is_stmt 1 view .LVU730
 956:Core/Src/main.c ****             return 149;
 2040              		.loc 1 956 19 is_stmt 0 view .LVU731
 2041 0374 0B2B     		cmp	r3, #11
 2042 0376 61D0     		beq	.L186
1012:Core/Src/main.c **** }
 2043              		.loc 1 1012 12 view .LVU732
 2044 0378 0020     		movs	r0, #0
 2045              	.LVL194:
1012:Core/Src/main.c **** }
 2046              		.loc 1 1012 12 view .LVU733
 2047 037a 7047     		bx	lr
 2048              	.LVL195:
 2049              	.L247:
 960:Core/Src/main.c ****             return 156;
 2050              		.loc 1 960 9 is_stmt 1 view .LVU734
 960:Core/Src/main.c ****             return 156;
 2051              		.loc 1 960 12 is_stmt 0 view .LVU735
 2052 037c 002B     		cmp	r3, #0
 2053 037e 5FD0     		beq	.L190
 962:Core/Src/main.c ****             return 160;
 2054              		.loc 1 962 16 is_stmt 1 view .LVU736
 962:Core/Src/main.c ****             return 160;
 2055              		.loc 1 962 19 is_stmt 0 view .LVU737
 2056 0380 012B     		cmp	r3, #1
 2057 0382 5FD0     		beq	.L192
 964:Core/Src/main.c ****             return 164;
 2058              		.loc 1 964 16 is_stmt 1 view .LVU738
 964:Core/Src/main.c ****             return 164;
 2059              		.loc 1 964 19 is_stmt 0 view .LVU739
 2060 0384 022B     		cmp	r3, #2
 2061 0386 5FD0     		beq	.L194
 966:Core/Src/main.c ****             return 168;
ARM GAS  /tmp/ccn5IMCN.s 			page 64


 2062              		.loc 1 966 16 is_stmt 1 view .LVU740
 966:Core/Src/main.c ****             return 168;
 2063              		.loc 1 966 19 is_stmt 0 view .LVU741
 2064 0388 032B     		cmp	r3, #3
 2065 038a 5FD0     		beq	.L196
 968:Core/Src/main.c ****             return 172;
 2066              		.loc 1 968 16 is_stmt 1 view .LVU742
 968:Core/Src/main.c ****             return 172;
 2067              		.loc 1 968 19 is_stmt 0 view .LVU743
 2068 038c 042B     		cmp	r3, #4
 2069 038e 5FD0     		beq	.L198
 970:Core/Src/main.c ****             return 176;
 2070              		.loc 1 970 16 is_stmt 1 view .LVU744
 970:Core/Src/main.c ****             return 176;
 2071              		.loc 1 970 19 is_stmt 0 view .LVU745
 2072 0390 052B     		cmp	r3, #5
 2073 0392 5FD0     		beq	.L200
 972:Core/Src/main.c ****             return 180;
 2074              		.loc 1 972 16 is_stmt 1 view .LVU746
 972:Core/Src/main.c ****             return 180;
 2075              		.loc 1 972 19 is_stmt 0 view .LVU747
 2076 0394 062B     		cmp	r3, #6
 2077 0396 5FD0     		beq	.L202
 974:Core/Src/main.c ****             return 184;
 2078              		.loc 1 974 16 is_stmt 1 view .LVU748
 974:Core/Src/main.c ****             return 184;
 2079              		.loc 1 974 19 is_stmt 0 view .LVU749
 2080 0398 072B     		cmp	r3, #7
 2081 039a 5FD0     		beq	.L204
 976:Core/Src/main.c ****             return 188;
 2082              		.loc 1 976 16 is_stmt 1 view .LVU750
 976:Core/Src/main.c ****             return 188;
 2083              		.loc 1 976 19 is_stmt 0 view .LVU751
 2084 039c 082B     		cmp	r3, #8
 2085 039e 5FD0     		beq	.L206
 978:Core/Src/main.c ****             return 192;
 2086              		.loc 1 978 16 is_stmt 1 view .LVU752
 978:Core/Src/main.c ****             return 192;
 2087              		.loc 1 978 19 is_stmt 0 view .LVU753
 2088 03a0 092B     		cmp	r3, #9
 2089 03a2 5FD0     		beq	.L208
 980:Core/Src/main.c ****             return 196;
 2090              		.loc 1 980 16 is_stmt 1 view .LVU754
 980:Core/Src/main.c ****             return 196;
 2091              		.loc 1 980 19 is_stmt 0 view .LVU755
 2092 03a4 0A2B     		cmp	r3, #10
 2093 03a6 5FD0     		beq	.L210
 982:Core/Src/main.c ****             return 200;
 2094              		.loc 1 982 16 is_stmt 1 view .LVU756
 982:Core/Src/main.c ****             return 200;
 2095              		.loc 1 982 19 is_stmt 0 view .LVU757
 2096 03a8 0B2B     		cmp	r3, #11
 2097 03aa 5FD0     		beq	.L212
1012:Core/Src/main.c **** }
 2098              		.loc 1 1012 12 view .LVU758
 2099 03ac 0020     		movs	r0, #0
 2100              	.LVL196:
ARM GAS  /tmp/ccn5IMCN.s 			page 65


1012:Core/Src/main.c **** }
 2101              		.loc 1 1012 12 view .LVU759
 2102 03ae 7047     		bx	lr
 2103              	.LVL197:
 2104              	.L111:
 883:Core/Src/main.c ****         } else if (channel_num == 1) {
 2105              		.loc 1 883 20 view .LVU760
 2106 03b0 0320     		movs	r0, #3
 2107              	.LVL198:
 883:Core/Src/main.c ****         } else if (channel_num == 1) {
 2108              		.loc 1 883 20 view .LVU761
 2109 03b2 7047     		bx	lr
 2110              	.LVL199:
 2111              	.L113:
 885:Core/Src/main.c ****         } else if (channel_num == 2) {
 2112              		.loc 1 885 20 view .LVU762
 2113 03b4 0720     		movs	r0, #7
 2114              	.LVL200:
 885:Core/Src/main.c ****         } else if (channel_num == 2) {
 2115              		.loc 1 885 20 view .LVU763
 2116 03b6 7047     		bx	lr
 2117              	.LVL201:
 2118              	.L115:
 887:Core/Src/main.c ****         } else if (channel_num == 3) {
 2119              		.loc 1 887 20 view .LVU764
 2120 03b8 0B20     		movs	r0, #11
 2121              	.LVL202:
 887:Core/Src/main.c ****         } else if (channel_num == 3) {
 2122              		.loc 1 887 20 view .LVU765
 2123 03ba 7047     		bx	lr
 2124              	.LVL203:
 2125              	.L117:
 889:Core/Src/main.c ****         } else if (channel_num == 4) {
 2126              		.loc 1 889 20 view .LVU766
 2127 03bc 0F20     		movs	r0, #15
 2128              	.LVL204:
 889:Core/Src/main.c ****         } else if (channel_num == 4) {
 2129              		.loc 1 889 20 view .LVU767
 2130 03be 7047     		bx	lr
 2131              	.LVL205:
 2132              	.L119:
 891:Core/Src/main.c ****         } else if (channel_num == 5) {
 2133              		.loc 1 891 20 view .LVU768
 2134 03c0 1320     		movs	r0, #19
 2135              	.LVL206:
 891:Core/Src/main.c ****         } else if (channel_num == 5) {
 2136              		.loc 1 891 20 view .LVU769
 2137 03c2 7047     		bx	lr
 2138              	.LVL207:
 2139              	.L121:
 893:Core/Src/main.c ****         } else if (channel_num == 6) {
 2140              		.loc 1 893 20 view .LVU770
 2141 03c4 1720     		movs	r0, #23
 2142              	.LVL208:
 893:Core/Src/main.c ****         } else if (channel_num == 6) {
 2143              		.loc 1 893 20 view .LVU771
 2144 03c6 7047     		bx	lr
ARM GAS  /tmp/ccn5IMCN.s 			page 66


 2145              	.LVL209:
 2146              	.L123:
 895:Core/Src/main.c ****         } else if (channel_num == 7) {
 2147              		.loc 1 895 20 view .LVU772
 2148 03c8 1B20     		movs	r0, #27
 2149              	.LVL210:
 895:Core/Src/main.c ****         } else if (channel_num == 7) {
 2150              		.loc 1 895 20 view .LVU773
 2151 03ca 7047     		bx	lr
 2152              	.LVL211:
 2153              	.L125:
 897:Core/Src/main.c ****         } else if (channel_num == 8) {
 2154              		.loc 1 897 20 view .LVU774
 2155 03cc 1F20     		movs	r0, #31
 2156              	.LVL212:
 897:Core/Src/main.c ****         } else if (channel_num == 8) {
 2157              		.loc 1 897 20 view .LVU775
 2158 03ce 7047     		bx	lr
 2159              	.LVL213:
 2160              	.L127:
 899:Core/Src/main.c ****         } else if (channel_num == 9) {
 2161              		.loc 1 899 20 view .LVU776
 2162 03d0 2320     		movs	r0, #35
 2163              	.LVL214:
 899:Core/Src/main.c ****         } else if (channel_num == 9) {
 2164              		.loc 1 899 20 view .LVU777
 2165 03d2 7047     		bx	lr
 2166              	.LVL215:
 2167              	.L129:
 901:Core/Src/main.c ****         } else if (channel_num == 10) {
 2168              		.loc 1 901 20 view .LVU778
 2169 03d4 2720     		movs	r0, #39
 2170              	.LVL216:
 901:Core/Src/main.c ****         } else if (channel_num == 10) {
 2171              		.loc 1 901 20 view .LVU779
 2172 03d6 7047     		bx	lr
 2173              	.LVL217:
 2174              	.L131:
 903:Core/Src/main.c ****         } else if (channel_num == 11) {
 2175              		.loc 1 903 20 view .LVU780
 2176 03d8 2B20     		movs	r0, #43
 2177              	.LVL218:
 903:Core/Src/main.c ****         } else if (channel_num == 11) {
 2178              		.loc 1 903 20 view .LVU781
 2179 03da 7047     		bx	lr
 2180              	.LVL219:
 2181              	.L133:
 905:Core/Src/main.c ****         }
 2182              		.loc 1 905 20 view .LVU782
 2183 03dc 2F20     		movs	r0, #47
 2184              	.LVL220:
 905:Core/Src/main.c ****         }
 2185              		.loc 1 905 20 view .LVU783
 2186 03de 7047     		bx	lr
 2187              	.LVL221:
 2188              	.L138:
 909:Core/Src/main.c ****         } else if (channel_num == 1) {
ARM GAS  /tmp/ccn5IMCN.s 			page 67


 2189              		.loc 1 909 20 view .LVU784
 2190 03e0 3620     		movs	r0, #54
 2191              	.LVL222:
 909:Core/Src/main.c ****         } else if (channel_num == 1) {
 2192              		.loc 1 909 20 view .LVU785
 2193 03e2 7047     		bx	lr
 2194              	.LVL223:
 2195              	.L140:
 911:Core/Src/main.c ****         } else if (channel_num == 2) {
 2196              		.loc 1 911 20 view .LVU786
 2197 03e4 3A20     		movs	r0, #58
 2198              	.LVL224:
 911:Core/Src/main.c ****         } else if (channel_num == 2) {
 2199              		.loc 1 911 20 view .LVU787
 2200 03e6 7047     		bx	lr
 2201              	.LVL225:
 2202              	.L142:
 913:Core/Src/main.c ****         } else if (channel_num == 3) {
 2203              		.loc 1 913 20 view .LVU788
 2204 03e8 3E20     		movs	r0, #62
 2205              	.LVL226:
 913:Core/Src/main.c ****         } else if (channel_num == 3) {
 2206              		.loc 1 913 20 view .LVU789
 2207 03ea 7047     		bx	lr
 2208              	.LVL227:
 2209              	.L144:
 915:Core/Src/main.c ****         } else if (channel_num == 4) {
 2210              		.loc 1 915 20 view .LVU790
 2211 03ec 4220     		movs	r0, #66
 2212              	.LVL228:
 915:Core/Src/main.c ****         } else if (channel_num == 4) {
 2213              		.loc 1 915 20 view .LVU791
 2214 03ee 7047     		bx	lr
 2215              	.LVL229:
 2216              	.L146:
 917:Core/Src/main.c ****         } else if (channel_num == 5) {
 2217              		.loc 1 917 20 view .LVU792
 2218 03f0 4620     		movs	r0, #70
 2219              	.LVL230:
 917:Core/Src/main.c ****         } else if (channel_num == 5) {
 2220              		.loc 1 917 20 view .LVU793
 2221 03f2 7047     		bx	lr
 2222              	.LVL231:
 2223              	.L148:
 919:Core/Src/main.c ****         } else if (channel_num == 6) {
 2224              		.loc 1 919 20 view .LVU794
 2225 03f4 4A20     		movs	r0, #74
 2226              	.LVL232:
 919:Core/Src/main.c ****         } else if (channel_num == 6) {
 2227              		.loc 1 919 20 view .LVU795
 2228 03f6 7047     		bx	lr
 2229              	.LVL233:
 2230              	.L150:
 921:Core/Src/main.c ****         } else if (channel_num == 7) {
 2231              		.loc 1 921 20 view .LVU796
 2232 03f8 4E20     		movs	r0, #78
 2233              	.LVL234:
ARM GAS  /tmp/ccn5IMCN.s 			page 68


 921:Core/Src/main.c ****         } else if (channel_num == 7) {
 2234              		.loc 1 921 20 view .LVU797
 2235 03fa 7047     		bx	lr
 2236              	.LVL235:
 2237              	.L152:
 923:Core/Src/main.c ****         } else if (channel_num == 8) {
 2238              		.loc 1 923 20 view .LVU798
 2239 03fc 5220     		movs	r0, #82
 2240              	.LVL236:
 923:Core/Src/main.c ****         } else if (channel_num == 8) {
 2241              		.loc 1 923 20 view .LVU799
 2242 03fe 7047     		bx	lr
 2243              	.LVL237:
 2244              	.L154:
 925:Core/Src/main.c ****         } else if (channel_num == 9) {
 2245              		.loc 1 925 20 view .LVU800
 2246 0400 5620     		movs	r0, #86
 2247              	.LVL238:
 925:Core/Src/main.c ****         } else if (channel_num == 9) {
 2248              		.loc 1 925 20 view .LVU801
 2249 0402 7047     		bx	lr
 2250              	.LVL239:
 2251              	.L156:
 927:Core/Src/main.c ****         } else if (channel_num == 10) {
 2252              		.loc 1 927 20 view .LVU802
 2253 0404 5A20     		movs	r0, #90
 2254              	.LVL240:
 927:Core/Src/main.c ****         } else if (channel_num == 10) {
 2255              		.loc 1 927 20 view .LVU803
 2256 0406 7047     		bx	lr
 2257              	.LVL241:
 2258              	.L158:
 929:Core/Src/main.c ****         } else if (channel_num == 11) {
 2259              		.loc 1 929 20 view .LVU804
 2260 0408 5E20     		movs	r0, #94
 2261              	.LVL242:
 929:Core/Src/main.c ****         } else if (channel_num == 11) {
 2262              		.loc 1 929 20 view .LVU805
 2263 040a 7047     		bx	lr
 2264              	.LVL243:
 2265              	.L160:
 931:Core/Src/main.c ****         }
 2266              		.loc 1 931 20 view .LVU806
 2267 040c 6220     		movs	r0, #98
 2268              	.LVL244:
 931:Core/Src/main.c ****         }
 2269              		.loc 1 931 20 view .LVU807
 2270 040e 7047     		bx	lr
 2271              	.LVL245:
 2272              	.L164:
 935:Core/Src/main.c ****         } else if (channel_num == 1) {
 2273              		.loc 1 935 20 view .LVU808
 2274 0410 6920     		movs	r0, #105
 2275              	.LVL246:
 935:Core/Src/main.c ****         } else if (channel_num == 1) {
 2276              		.loc 1 935 20 view .LVU809
 2277 0412 7047     		bx	lr
ARM GAS  /tmp/ccn5IMCN.s 			page 69


 2278              	.LVL247:
 2279              	.L166:
 937:Core/Src/main.c ****         } else if (channel_num == 2) {
 2280              		.loc 1 937 20 view .LVU810
 2281 0414 6D20     		movs	r0, #109
 2282              	.LVL248:
 937:Core/Src/main.c ****         } else if (channel_num == 2) {
 2283              		.loc 1 937 20 view .LVU811
 2284 0416 7047     		bx	lr
 2285              	.LVL249:
 2286              	.L168:
 939:Core/Src/main.c ****         } else if (channel_num == 3) {
 2287              		.loc 1 939 20 view .LVU812
 2288 0418 7120     		movs	r0, #113
 2289              	.LVL250:
 939:Core/Src/main.c ****         } else if (channel_num == 3) {
 2290              		.loc 1 939 20 view .LVU813
 2291 041a 7047     		bx	lr
 2292              	.LVL251:
 2293              	.L170:
 941:Core/Src/main.c ****         } else if (channel_num == 4) {
 2294              		.loc 1 941 20 view .LVU814
 2295 041c 7520     		movs	r0, #117
 2296              	.LVL252:
 941:Core/Src/main.c ****         } else if (channel_num == 4) {
 2297              		.loc 1 941 20 view .LVU815
 2298 041e 7047     		bx	lr
 2299              	.LVL253:
 2300              	.L172:
 943:Core/Src/main.c ****         } else if (channel_num == 5) {
 2301              		.loc 1 943 20 view .LVU816
 2302 0420 7920     		movs	r0, #121
 2303              	.LVL254:
 943:Core/Src/main.c ****         } else if (channel_num == 5) {
 2304              		.loc 1 943 20 view .LVU817
 2305 0422 7047     		bx	lr
 2306              	.LVL255:
 2307              	.L174:
 945:Core/Src/main.c ****         } else if (channel_num == 6) {
 2308              		.loc 1 945 20 view .LVU818
 2309 0424 7D20     		movs	r0, #125
 2310              	.LVL256:
 945:Core/Src/main.c ****         } else if (channel_num == 6) {
 2311              		.loc 1 945 20 view .LVU819
 2312 0426 7047     		bx	lr
 2313              	.LVL257:
 2314              	.L176:
 947:Core/Src/main.c ****         } else if (channel_num == 7) {
 2315              		.loc 1 947 20 view .LVU820
 2316 0428 8120     		movs	r0, #129
 2317              	.LVL258:
 947:Core/Src/main.c ****         } else if (channel_num == 7) {
 2318              		.loc 1 947 20 view .LVU821
 2319 042a 7047     		bx	lr
 2320              	.LVL259:
 2321              	.L178:
 949:Core/Src/main.c ****         } else if (channel_num == 8) {
ARM GAS  /tmp/ccn5IMCN.s 			page 70


 2322              		.loc 1 949 20 view .LVU822
 2323 042c 8520     		movs	r0, #133
 2324              	.LVL260:
 949:Core/Src/main.c ****         } else if (channel_num == 8) {
 2325              		.loc 1 949 20 view .LVU823
 2326 042e 7047     		bx	lr
 2327              	.LVL261:
 2328              	.L180:
 951:Core/Src/main.c ****         } else if (channel_num == 9) {
 2329              		.loc 1 951 20 view .LVU824
 2330 0430 8920     		movs	r0, #137
 2331              	.LVL262:
 951:Core/Src/main.c ****         } else if (channel_num == 9) {
 2332              		.loc 1 951 20 view .LVU825
 2333 0432 7047     		bx	lr
 2334              	.LVL263:
 2335              	.L182:
 953:Core/Src/main.c ****         } else if (channel_num == 10) {
 2336              		.loc 1 953 20 view .LVU826
 2337 0434 8D20     		movs	r0, #141
 2338              	.LVL264:
 953:Core/Src/main.c ****         } else if (channel_num == 10) {
 2339              		.loc 1 953 20 view .LVU827
 2340 0436 7047     		bx	lr
 2341              	.LVL265:
 2342              	.L184:
 955:Core/Src/main.c ****         } else if (channel_num == 11) {
 2343              		.loc 1 955 20 view .LVU828
 2344 0438 9120     		movs	r0, #145
 2345              	.LVL266:
 955:Core/Src/main.c ****         } else if (channel_num == 11) {
 2346              		.loc 1 955 20 view .LVU829
 2347 043a 7047     		bx	lr
 2348              	.LVL267:
 2349              	.L186:
 957:Core/Src/main.c ****         }
 2350              		.loc 1 957 20 view .LVU830
 2351 043c 9520     		movs	r0, #149
 2352              	.LVL268:
 957:Core/Src/main.c ****         }
 2353              		.loc 1 957 20 view .LVU831
 2354 043e 7047     		bx	lr
 2355              	.LVL269:
 2356              	.L190:
 961:Core/Src/main.c ****         } else if (channel_num == 1) {
 2357              		.loc 1 961 20 view .LVU832
 2358 0440 9C20     		movs	r0, #156
 2359              	.LVL270:
 961:Core/Src/main.c ****         } else if (channel_num == 1) {
 2360              		.loc 1 961 20 view .LVU833
 2361 0442 7047     		bx	lr
 2362              	.LVL271:
 2363              	.L192:
 963:Core/Src/main.c ****         } else if (channel_num == 2) {
 2364              		.loc 1 963 20 view .LVU834
 2365 0444 A020     		movs	r0, #160
 2366              	.LVL272:
ARM GAS  /tmp/ccn5IMCN.s 			page 71


 963:Core/Src/main.c ****         } else if (channel_num == 2) {
 2367              		.loc 1 963 20 view .LVU835
 2368 0446 7047     		bx	lr
 2369              	.LVL273:
 2370              	.L194:
 965:Core/Src/main.c ****         } else if (channel_num == 3) {
 2371              		.loc 1 965 20 view .LVU836
 2372 0448 A420     		movs	r0, #164
 2373              	.LVL274:
 965:Core/Src/main.c ****         } else if (channel_num == 3) {
 2374              		.loc 1 965 20 view .LVU837
 2375 044a 7047     		bx	lr
 2376              	.LVL275:
 2377              	.L196:
 967:Core/Src/main.c ****         } else if (channel_num == 4) {
 2378              		.loc 1 967 20 view .LVU838
 2379 044c A820     		movs	r0, #168
 2380              	.LVL276:
 967:Core/Src/main.c ****         } else if (channel_num == 4) {
 2381              		.loc 1 967 20 view .LVU839
 2382 044e 7047     		bx	lr
 2383              	.LVL277:
 2384              	.L198:
 969:Core/Src/main.c ****         } else if (channel_num == 5) {
 2385              		.loc 1 969 20 view .LVU840
 2386 0450 AC20     		movs	r0, #172
 2387              	.LVL278:
 969:Core/Src/main.c ****         } else if (channel_num == 5) {
 2388              		.loc 1 969 20 view .LVU841
 2389 0452 7047     		bx	lr
 2390              	.LVL279:
 2391              	.L200:
 971:Core/Src/main.c ****         } else if (channel_num == 6) {
 2392              		.loc 1 971 20 view .LVU842
 2393 0454 B020     		movs	r0, #176
 2394              	.LVL280:
 971:Core/Src/main.c ****         } else if (channel_num == 6) {
 2395              		.loc 1 971 20 view .LVU843
 2396 0456 7047     		bx	lr
 2397              	.LVL281:
 2398              	.L202:
 973:Core/Src/main.c ****         } else if (channel_num == 7) {
 2399              		.loc 1 973 20 view .LVU844
 2400 0458 B420     		movs	r0, #180
 2401              	.LVL282:
 973:Core/Src/main.c ****         } else if (channel_num == 7) {
 2402              		.loc 1 973 20 view .LVU845
 2403 045a 7047     		bx	lr
 2404              	.LVL283:
 2405              	.L204:
 975:Core/Src/main.c ****         } else if (channel_num == 8) {
 2406              		.loc 1 975 20 view .LVU846
 2407 045c B820     		movs	r0, #184
 2408              	.LVL284:
 975:Core/Src/main.c ****         } else if (channel_num == 8) {
 2409              		.loc 1 975 20 view .LVU847
 2410 045e 7047     		bx	lr
ARM GAS  /tmp/ccn5IMCN.s 			page 72


 2411              	.LVL285:
 2412              	.L206:
 977:Core/Src/main.c ****         } else if (channel_num == 9) {
 2413              		.loc 1 977 20 view .LVU848
 2414 0460 BC20     		movs	r0, #188
 2415              	.LVL286:
 977:Core/Src/main.c ****         } else if (channel_num == 9) {
 2416              		.loc 1 977 20 view .LVU849
 2417 0462 7047     		bx	lr
 2418              	.LVL287:
 2419              	.L208:
 979:Core/Src/main.c ****         } else if (channel_num == 10) {
 2420              		.loc 1 979 20 view .LVU850
 2421 0464 C020     		movs	r0, #192
 2422              	.LVL288:
 979:Core/Src/main.c ****         } else if (channel_num == 10) {
 2423              		.loc 1 979 20 view .LVU851
 2424 0466 7047     		bx	lr
 2425              	.LVL289:
 2426              	.L210:
 981:Core/Src/main.c ****         } else if (channel_num == 11) {
 2427              		.loc 1 981 20 view .LVU852
 2428 0468 C420     		movs	r0, #196
 2429              	.LVL290:
 981:Core/Src/main.c ****         } else if (channel_num == 11) {
 2430              		.loc 1 981 20 view .LVU853
 2431 046a 7047     		bx	lr
 2432              	.LVL291:
 2433              	.L212:
 983:Core/Src/main.c ****         }
 2434              		.loc 1 983 20 view .LVU854
 2435 046c C820     		movs	r0, #200
 2436              	.LVL292:
 983:Core/Src/main.c ****         }
 2437              		.loc 1 983 20 view .LVU855
 2438 046e 7047     		bx	lr
 2439              	.LVL293:
 2440              	.L214:
 987:Core/Src/main.c ****         } else if (channel_num == 1) {
 2441              		.loc 1 987 20 view .LVU856
 2442 0470 CF20     		movs	r0, #207
 2443              	.LVL294:
 987:Core/Src/main.c ****         } else if (channel_num == 1) {
 2444              		.loc 1 987 20 view .LVU857
 2445 0472 7047     		bx	lr
 2446              	.LVL295:
 2447              	.L216:
 989:Core/Src/main.c ****         } else if (channel_num == 2) {
 2448              		.loc 1 989 20 view .LVU858
 2449 0474 D320     		movs	r0, #211
 2450              	.LVL296:
 989:Core/Src/main.c ****         } else if (channel_num == 2) {
 2451              		.loc 1 989 20 view .LVU859
 2452 0476 7047     		bx	lr
 2453              	.LVL297:
 2454              	.L218:
 991:Core/Src/main.c ****         } else if (channel_num == 3) {
ARM GAS  /tmp/ccn5IMCN.s 			page 73


 2455              		.loc 1 991 20 view .LVU860
 2456 0478 D720     		movs	r0, #215
 2457              	.LVL298:
 991:Core/Src/main.c ****         } else if (channel_num == 3) {
 2458              		.loc 1 991 20 view .LVU861
 2459 047a 7047     		bx	lr
 2460              	.LVL299:
 2461              	.L220:
 993:Core/Src/main.c ****         } else if (channel_num == 4) {
 2462              		.loc 1 993 20 view .LVU862
 2463 047c DB20     		movs	r0, #219
 2464              	.LVL300:
 993:Core/Src/main.c ****         } else if (channel_num == 4) {
 2465              		.loc 1 993 20 view .LVU863
 2466 047e 7047     		bx	lr
 2467              	.LVL301:
 2468              	.L222:
 995:Core/Src/main.c ****         } else if (channel_num == 5) {
 2469              		.loc 1 995 20 view .LVU864
 2470 0480 DF20     		movs	r0, #223
 2471              	.LVL302:
 995:Core/Src/main.c ****         } else if (channel_num == 5) {
 2472              		.loc 1 995 20 view .LVU865
 2473 0482 7047     		bx	lr
 2474              	.LVL303:
 2475              	.L224:
 997:Core/Src/main.c ****         } else if (channel_num == 6) {
 2476              		.loc 1 997 20 view .LVU866
 2477 0484 E320     		movs	r0, #227
 2478              	.LVL304:
 997:Core/Src/main.c ****         } else if (channel_num == 6) {
 2479              		.loc 1 997 20 view .LVU867
 2480 0486 7047     		bx	lr
 2481              	.LVL305:
 2482              	.L226:
 999:Core/Src/main.c ****         } else if (channel_num == 7) {
 2483              		.loc 1 999 20 view .LVU868
 2484 0488 E720     		movs	r0, #231
 2485              	.LVL306:
 999:Core/Src/main.c ****         } else if (channel_num == 7) {
 2486              		.loc 1 999 20 view .LVU869
 2487 048a 7047     		bx	lr
 2488              	.LVL307:
 2489              	.L228:
1001:Core/Src/main.c ****         } else if (channel_num == 8) {
 2490              		.loc 1 1001 20 view .LVU870
 2491 048c EB20     		movs	r0, #235
 2492              	.LVL308:
1001:Core/Src/main.c ****         } else if (channel_num == 8) {
 2493              		.loc 1 1001 20 view .LVU871
 2494 048e 7047     		bx	lr
 2495              	.LVL309:
 2496              	.L230:
1003:Core/Src/main.c ****         } else if (channel_num == 9) {
 2497              		.loc 1 1003 20 view .LVU872
 2498 0490 EF20     		movs	r0, #239
 2499              	.LVL310:
ARM GAS  /tmp/ccn5IMCN.s 			page 74


1003:Core/Src/main.c ****         } else if (channel_num == 9) {
 2500              		.loc 1 1003 20 view .LVU873
 2501 0492 7047     		bx	lr
 2502              	.LVL311:
 2503              	.L232:
1005:Core/Src/main.c ****         } else if (channel_num == 10) {
 2504              		.loc 1 1005 20 view .LVU874
 2505 0494 F320     		movs	r0, #243
 2506              	.LVL312:
1005:Core/Src/main.c ****         } else if (channel_num == 10) {
 2507              		.loc 1 1005 20 view .LVU875
 2508 0496 7047     		bx	lr
 2509              	.LVL313:
 2510              	.L234:
1007:Core/Src/main.c ****         } else if (channel_num == 11) {
 2511              		.loc 1 1007 20 view .LVU876
 2512 0498 F720     		movs	r0, #247
 2513              	.LVL314:
1007:Core/Src/main.c ****         } else if (channel_num == 11) {
 2514              		.loc 1 1007 20 view .LVU877
 2515 049a 7047     		bx	lr
 2516              	.LVL315:
 2517              	.L236:
1009:Core/Src/main.c ****         }
 2518              		.loc 1 1009 20 view .LVU878
 2519 049c FB20     		movs	r0, #251
 2520              	.LVL316:
 2521              		.loc 1 1013 1 view .LVU879
 2522 049e 7047     		bx	lr
 2523              		.cfi_endproc
 2524              	.LFE221:
 2526              		.section	.text.Error_Handler,"ax",%progbits
 2527              		.align	1
 2528              		.global	Error_Handler
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv4-sp-d16
 2534              	Error_Handler:
 2535              	.LFB222:
1014:Core/Src/main.c **** 
1015:Core/Src/main.c **** 
1016:Core/Src/main.c **** /* USER CODE END 4 */
1017:Core/Src/main.c **** 
1018:Core/Src/main.c **** /**
1019:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1020:Core/Src/main.c ****   * @retval None
1021:Core/Src/main.c ****   */
1022:Core/Src/main.c **** void Error_Handler(void)
1023:Core/Src/main.c **** {
 2536              		.loc 1 1023 1 is_stmt 1 view -0
 2537              		.cfi_startproc
 2538              		@ Volatile: function does not return.
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541              		@ link register save eliminated.
1024:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccn5IMCN.s 			page 75


1025:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1026:Core/Src/main.c ****   __disable_irq();
 2542              		.loc 1 1026 3 view .LVU881
 2543              	.LBB33:
 2544              	.LBI33:
 2545              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccn5IMCN.s 			page 76


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccn5IMCN.s 			page 77


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccn5IMCN.s 			page 78


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2546              		.loc 3 207 27 view .LVU882
 2547              	.LBB34:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2548              		.loc 3 209 3 view .LVU883
 2549              		.syntax unified
 2550              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2551 0000 72B6     		cpsid i
 2552              	@ 0 "" 2
 2553              		.thumb
 2554              		.syntax unified
 2555              	.L249:
 2556              	.LBE34:
 2557              	.LBE33:
1027:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccn5IMCN.s 			page 79


 2558              		.loc 1 1027 3 discriminator 1 view .LVU884
1028:Core/Src/main.c ****   {
1029:Core/Src/main.c ****   }
 2559              		.loc 1 1029 3 discriminator 1 view .LVU885
1027:Core/Src/main.c ****   while (1)
 2560              		.loc 1 1027 9 discriminator 1 view .LVU886
 2561 0002 FEE7     		b	.L249
 2562              		.cfi_endproc
 2563              	.LFE222:
 2565              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2566              		.align	1
 2567              		.syntax unified
 2568              		.thumb
 2569              		.thumb_func
 2570              		.fpu fpv4-sp-d16
 2572              	MX_SPI1_Init:
 2573              	.LFB210:
 419:Core/Src/main.c **** 
 2574              		.loc 1 419 1 view -0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 0
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578 0000 08B5     		push	{r3, lr}
 2579              	.LCFI15:
 2580              		.cfi_def_cfa_offset 8
 2581              		.cfi_offset 3, -8
 2582              		.cfi_offset 14, -4
 429:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2583              		.loc 1 429 3 view .LVU888
 429:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2584              		.loc 1 429 18 is_stmt 0 view .LVU889
 2585 0002 0F48     		ldr	r0, .L254
 2586 0004 0F4B     		ldr	r3, .L254+4
 2587 0006 0360     		str	r3, [r0]
 430:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2588              		.loc 1 430 3 is_stmt 1 view .LVU890
 430:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2589              		.loc 1 430 19 is_stmt 0 view .LVU891
 2590 0008 4FF48273 		mov	r3, #260
 2591 000c 4360     		str	r3, [r0, #4]
 431:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2592              		.loc 1 431 3 is_stmt 1 view .LVU892
 431:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2593              		.loc 1 431 24 is_stmt 0 view .LVU893
 2594 000e 0023     		movs	r3, #0
 2595 0010 8360     		str	r3, [r0, #8]
 432:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2596              		.loc 1 432 3 is_stmt 1 view .LVU894
 432:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2597              		.loc 1 432 23 is_stmt 0 view .LVU895
 2598 0012 4FF4E062 		mov	r2, #1792
 2599 0016 C260     		str	r2, [r0, #12]
 433:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2600              		.loc 1 433 3 is_stmt 1 view .LVU896
 433:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2601              		.loc 1 433 26 is_stmt 0 view .LVU897
 2602 0018 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccn5IMCN.s 			page 80


 434:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2603              		.loc 1 434 3 is_stmt 1 view .LVU898
 434:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2604              		.loc 1 434 23 is_stmt 0 view .LVU899
 2605 001a 4361     		str	r3, [r0, #20]
 435:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 2606              		.loc 1 435 3 is_stmt 1 view .LVU900
 435:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 2607              		.loc 1 435 18 is_stmt 0 view .LVU901
 2608 001c 4FF40072 		mov	r2, #512
 2609 0020 8261     		str	r2, [r0, #24]
 436:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2610              		.loc 1 436 3 is_stmt 1 view .LVU902
 436:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2611              		.loc 1 436 32 is_stmt 0 view .LVU903
 2612 0022 2022     		movs	r2, #32
 2613 0024 C261     		str	r2, [r0, #28]
 437:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2614              		.loc 1 437 3 is_stmt 1 view .LVU904
 437:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2615              		.loc 1 437 23 is_stmt 0 view .LVU905
 2616 0026 0362     		str	r3, [r0, #32]
 438:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2617              		.loc 1 438 3 is_stmt 1 view .LVU906
 438:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2618              		.loc 1 438 21 is_stmt 0 view .LVU907
 2619 0028 4362     		str	r3, [r0, #36]
 439:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2620              		.loc 1 439 3 is_stmt 1 view .LVU908
 439:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 2621              		.loc 1 439 29 is_stmt 0 view .LVU909
 2622 002a 8362     		str	r3, [r0, #40]
 440:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2623              		.loc 1 440 3 is_stmt 1 view .LVU910
 440:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2624              		.loc 1 440 28 is_stmt 0 view .LVU911
 2625 002c 0722     		movs	r2, #7
 2626 002e C262     		str	r2, [r0, #44]
 441:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2627              		.loc 1 441 3 is_stmt 1 view .LVU912
 441:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2628              		.loc 1 441 24 is_stmt 0 view .LVU913
 2629 0030 0363     		str	r3, [r0, #48]
 442:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2630              		.loc 1 442 3 is_stmt 1 view .LVU914
 442:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2631              		.loc 1 442 23 is_stmt 0 view .LVU915
 2632 0032 4363     		str	r3, [r0, #52]
 443:Core/Src/main.c ****   {
 2633              		.loc 1 443 3 is_stmt 1 view .LVU916
 443:Core/Src/main.c ****   {
 2634              		.loc 1 443 7 is_stmt 0 view .LVU917
 2635 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2636              	.LVL317:
 443:Core/Src/main.c ****   {
 2637              		.loc 1 443 6 view .LVU918
 2638 0038 00B9     		cbnz	r0, .L253
ARM GAS  /tmp/ccn5IMCN.s 			page 81


 451:Core/Src/main.c **** 
 2639              		.loc 1 451 1 view .LVU919
 2640 003a 08BD     		pop	{r3, pc}
 2641              	.L253:
 445:Core/Src/main.c ****   }
 2642              		.loc 1 445 5 is_stmt 1 view .LVU920
 2643 003c FFF7FEFF 		bl	Error_Handler
 2644              	.LVL318:
 2645              	.L255:
 2646              		.align	2
 2647              	.L254:
 2648 0040 00000000 		.word	.LANCHOR3
 2649 0044 00300140 		.word	1073819648
 2650              		.cfi_endproc
 2651              	.LFE210:
 2653              		.section	.text.MX_I2C1_Init,"ax",%progbits
 2654              		.align	1
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu fpv4-sp-d16
 2660              	MX_I2C1_Init:
 2661              	.LFB209:
 371:Core/Src/main.c **** 
 2662              		.loc 1 371 1 view -0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666 0000 08B5     		push	{r3, lr}
 2667              	.LCFI16:
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 3, -8
 2670              		.cfi_offset 14, -4
 380:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 2671              		.loc 1 380 3 view .LVU922
 380:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 2672              		.loc 1 380 18 is_stmt 0 view .LVU923
 2673 0002 1148     		ldr	r0, .L264
 2674 0004 114B     		ldr	r3, .L264+4
 2675 0006 0360     		str	r3, [r0]
 381:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 2676              		.loc 1 381 3 is_stmt 1 view .LVU924
 381:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 2677              		.loc 1 381 21 is_stmt 0 view .LVU925
 2678 0008 114B     		ldr	r3, .L264+8
 2679 000a 4360     		str	r3, [r0, #4]
 382:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2680              		.loc 1 382 3 is_stmt 1 view .LVU926
 382:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2681              		.loc 1 382 26 is_stmt 0 view .LVU927
 2682 000c 0023     		movs	r3, #0
 2683 000e 8360     		str	r3, [r0, #8]
 383:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2684              		.loc 1 383 3 is_stmt 1 view .LVU928
 383:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2685              		.loc 1 383 29 is_stmt 0 view .LVU929
 2686 0010 0122     		movs	r2, #1
ARM GAS  /tmp/ccn5IMCN.s 			page 82


 2687 0012 C260     		str	r2, [r0, #12]
 384:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 2688              		.loc 1 384 3 is_stmt 1 view .LVU930
 384:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 2689              		.loc 1 384 30 is_stmt 0 view .LVU931
 2690 0014 0361     		str	r3, [r0, #16]
 385:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2691              		.loc 1 385 3 is_stmt 1 view .LVU932
 385:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2692              		.loc 1 385 26 is_stmt 0 view .LVU933
 2693 0016 4361     		str	r3, [r0, #20]
 386:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2694              		.loc 1 386 3 is_stmt 1 view .LVU934
 386:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2695              		.loc 1 386 31 is_stmt 0 view .LVU935
 2696 0018 8361     		str	r3, [r0, #24]
 387:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2697              		.loc 1 387 3 is_stmt 1 view .LVU936
 387:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2698              		.loc 1 387 30 is_stmt 0 view .LVU937
 2699 001a C361     		str	r3, [r0, #28]
 388:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 2700              		.loc 1 388 3 is_stmt 1 view .LVU938
 388:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 2701              		.loc 1 388 28 is_stmt 0 view .LVU939
 2702 001c 0362     		str	r3, [r0, #32]
 389:Core/Src/main.c ****   {
 2703              		.loc 1 389 3 is_stmt 1 view .LVU940
 389:Core/Src/main.c ****   {
 2704              		.loc 1 389 7 is_stmt 0 view .LVU941
 2705 001e FFF7FEFF 		bl	HAL_I2C_Init
 2706              	.LVL319:
 389:Core/Src/main.c ****   {
 2707              		.loc 1 389 6 view .LVU942
 2708 0022 50B9     		cbnz	r0, .L261
 396:Core/Src/main.c ****   {
 2709              		.loc 1 396 3 is_stmt 1 view .LVU943
 396:Core/Src/main.c ****   {
 2710              		.loc 1 396 7 is_stmt 0 view .LVU944
 2711 0024 0021     		movs	r1, #0
 2712 0026 0848     		ldr	r0, .L264
 2713 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 2714              	.LVL320:
 396:Core/Src/main.c ****   {
 2715              		.loc 1 396 6 view .LVU945
 2716 002c 38B9     		cbnz	r0, .L262
 403:Core/Src/main.c ****   {
 2717              		.loc 1 403 3 is_stmt 1 view .LVU946
 403:Core/Src/main.c ****   {
 2718              		.loc 1 403 7 is_stmt 0 view .LVU947
 2719 002e 0021     		movs	r1, #0
 2720 0030 0548     		ldr	r0, .L264
 2721 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 2722              	.LVL321:
 403:Core/Src/main.c ****   {
 2723              		.loc 1 403 6 view .LVU948
 2724 0036 20B9     		cbnz	r0, .L263
ARM GAS  /tmp/ccn5IMCN.s 			page 83


 411:Core/Src/main.c **** 
 2725              		.loc 1 411 1 view .LVU949
 2726 0038 08BD     		pop	{r3, pc}
 2727              	.L261:
 391:Core/Src/main.c ****   }
 2728              		.loc 1 391 5 is_stmt 1 view .LVU950
 2729 003a FFF7FEFF 		bl	Error_Handler
 2730              	.LVL322:
 2731              	.L262:
 398:Core/Src/main.c ****   }
 2732              		.loc 1 398 5 view .LVU951
 2733 003e FFF7FEFF 		bl	Error_Handler
 2734              	.LVL323:
 2735              	.L263:
 405:Core/Src/main.c ****   }
 2736              		.loc 1 405 5 view .LVU952
 2737 0042 FFF7FEFF 		bl	Error_Handler
 2738              	.LVL324:
 2739              	.L265:
 2740 0046 00BF     		.align	2
 2741              	.L264:
 2742 0048 00000000 		.word	.LANCHOR4
 2743 004c 00540040 		.word	1073763328
 2744 0050 EC9C9010 		.word	277912812
 2745              		.cfi_endproc
 2746              	.LFE209:
 2748              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2749              		.align	1
 2750              		.syntax unified
 2751              		.thumb
 2752              		.thumb_func
 2753              		.fpu fpv4-sp-d16
 2755              	MX_SPI2_Init:
 2756              	.LFB211:
 459:Core/Src/main.c **** 
 2757              		.loc 1 459 1 view -0
 2758              		.cfi_startproc
 2759              		@ args = 0, pretend = 0, frame = 0
 2760              		@ frame_needed = 0, uses_anonymous_args = 0
 2761 0000 08B5     		push	{r3, lr}
 2762              	.LCFI17:
 2763              		.cfi_def_cfa_offset 8
 2764              		.cfi_offset 3, -8
 2765              		.cfi_offset 14, -4
 469:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2766              		.loc 1 469 3 view .LVU954
 469:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2767              		.loc 1 469 18 is_stmt 0 view .LVU955
 2768 0002 0F48     		ldr	r0, .L270
 2769 0004 0F4B     		ldr	r3, .L270+4
 2770 0006 0360     		str	r3, [r0]
 470:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2771              		.loc 1 470 3 is_stmt 1 view .LVU956
 470:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2772              		.loc 1 470 19 is_stmt 0 view .LVU957
 2773 0008 4FF48273 		mov	r3, #260
 2774 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccn5IMCN.s 			page 84


 471:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2775              		.loc 1 471 3 is_stmt 1 view .LVU958
 471:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2776              		.loc 1 471 24 is_stmt 0 view .LVU959
 2777 000e 0023     		movs	r3, #0
 2778 0010 8360     		str	r3, [r0, #8]
 472:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2779              		.loc 1 472 3 is_stmt 1 view .LVU960
 472:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2780              		.loc 1 472 23 is_stmt 0 view .LVU961
 2781 0012 4FF4E062 		mov	r2, #1792
 2782 0016 C260     		str	r2, [r0, #12]
 473:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2783              		.loc 1 473 3 is_stmt 1 view .LVU962
 473:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2784              		.loc 1 473 26 is_stmt 0 view .LVU963
 2785 0018 0361     		str	r3, [r0, #16]
 474:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2786              		.loc 1 474 3 is_stmt 1 view .LVU964
 474:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2787              		.loc 1 474 23 is_stmt 0 view .LVU965
 2788 001a 4361     		str	r3, [r0, #20]
 475:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2789              		.loc 1 475 3 is_stmt 1 view .LVU966
 475:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2790              		.loc 1 475 18 is_stmt 0 view .LVU967
 2791 001c 4FF40072 		mov	r2, #512
 2792 0020 8261     		str	r2, [r0, #24]
 476:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 2793              		.loc 1 476 3 is_stmt 1 view .LVU968
 476:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 2794              		.loc 1 476 32 is_stmt 0 view .LVU969
 2795 0022 C361     		str	r3, [r0, #28]
 477:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2796              		.loc 1 477 3 is_stmt 1 view .LVU970
 477:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2797              		.loc 1 477 23 is_stmt 0 view .LVU971
 2798 0024 8022     		movs	r2, #128
 2799 0026 0262     		str	r2, [r0, #32]
 478:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2800              		.loc 1 478 3 is_stmt 1 view .LVU972
 478:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2801              		.loc 1 478 21 is_stmt 0 view .LVU973
 2802 0028 4362     		str	r3, [r0, #36]
 479:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 2803              		.loc 1 479 3 is_stmt 1 view .LVU974
 479:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 2804              		.loc 1 479 29 is_stmt 0 view .LVU975
 2805 002a 8362     		str	r3, [r0, #40]
 480:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2806              		.loc 1 480 3 is_stmt 1 view .LVU976
 480:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2807              		.loc 1 480 28 is_stmt 0 view .LVU977
 2808 002c 0722     		movs	r2, #7
 2809 002e C262     		str	r2, [r0, #44]
 481:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2810              		.loc 1 481 3 is_stmt 1 view .LVU978
ARM GAS  /tmp/ccn5IMCN.s 			page 85


 481:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 2811              		.loc 1 481 24 is_stmt 0 view .LVU979
 2812 0030 0363     		str	r3, [r0, #48]
 482:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2813              		.loc 1 482 3 is_stmt 1 view .LVU980
 482:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2814              		.loc 1 482 23 is_stmt 0 view .LVU981
 2815 0032 4363     		str	r3, [r0, #52]
 483:Core/Src/main.c ****   {
 2816              		.loc 1 483 3 is_stmt 1 view .LVU982
 483:Core/Src/main.c ****   {
 2817              		.loc 1 483 7 is_stmt 0 view .LVU983
 2818 0034 FFF7FEFF 		bl	HAL_SPI_Init
 2819              	.LVL325:
 483:Core/Src/main.c ****   {
 2820              		.loc 1 483 6 view .LVU984
 2821 0038 00B9     		cbnz	r0, .L269
 491:Core/Src/main.c **** 
 2822              		.loc 1 491 1 view .LVU985
 2823 003a 08BD     		pop	{r3, pc}
 2824              	.L269:
 485:Core/Src/main.c ****   }
 2825              		.loc 1 485 5 is_stmt 1 view .LVU986
 2826 003c FFF7FEFF 		bl	Error_Handler
 2827              	.LVL326:
 2828              	.L271:
 2829              		.align	2
 2830              	.L270:
 2831 0040 00000000 		.word	.LANCHOR5
 2832 0044 00380040 		.word	1073756160
 2833              		.cfi_endproc
 2834              	.LFE211:
 2836              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 2837              		.align	1
 2838              		.syntax unified
 2839              		.thumb
 2840              		.thumb_func
 2841              		.fpu fpv4-sp-d16
 2843              	MX_USART2_UART_Init:
 2844              	.LFB212:
 499:Core/Src/main.c **** 
 2845              		.loc 1 499 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
 2849 0000 08B5     		push	{r3, lr}
 2850              	.LCFI18:
 2851              		.cfi_def_cfa_offset 8
 2852              		.cfi_offset 3, -8
 2853              		.cfi_offset 14, -4
 508:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2854              		.loc 1 508 3 view .LVU988
 508:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2855              		.loc 1 508 19 is_stmt 0 view .LVU989
 2856 0002 0B48     		ldr	r0, .L276
 2857 0004 0B4B     		ldr	r3, .L276+4
 2858 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccn5IMCN.s 			page 86


 509:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2859              		.loc 1 509 3 is_stmt 1 view .LVU990
 509:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2860              		.loc 1 509 24 is_stmt 0 view .LVU991
 2861 0008 4FF4E133 		mov	r3, #115200
 2862 000c 4360     		str	r3, [r0, #4]
 510:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2863              		.loc 1 510 3 is_stmt 1 view .LVU992
 510:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2864              		.loc 1 510 26 is_stmt 0 view .LVU993
 2865 000e 0023     		movs	r3, #0
 2866 0010 8360     		str	r3, [r0, #8]
 511:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2867              		.loc 1 511 3 is_stmt 1 view .LVU994
 511:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2868              		.loc 1 511 24 is_stmt 0 view .LVU995
 2869 0012 C360     		str	r3, [r0, #12]
 512:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2870              		.loc 1 512 3 is_stmt 1 view .LVU996
 512:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2871              		.loc 1 512 22 is_stmt 0 view .LVU997
 2872 0014 0361     		str	r3, [r0, #16]
 513:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2873              		.loc 1 513 3 is_stmt 1 view .LVU998
 513:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2874              		.loc 1 513 20 is_stmt 0 view .LVU999
 2875 0016 0C22     		movs	r2, #12
 2876 0018 4261     		str	r2, [r0, #20]
 514:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2877              		.loc 1 514 3 is_stmt 1 view .LVU1000
 514:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2878              		.loc 1 514 25 is_stmt 0 view .LVU1001
 2879 001a 8361     		str	r3, [r0, #24]
 515:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2880              		.loc 1 515 3 is_stmt 1 view .LVU1002
 515:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2881              		.loc 1 515 28 is_stmt 0 view .LVU1003
 2882 001c C361     		str	r3, [r0, #28]
 516:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2883              		.loc 1 516 3 is_stmt 1 view .LVU1004
 516:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2884              		.loc 1 516 30 is_stmt 0 view .LVU1005
 2885 001e 0362     		str	r3, [r0, #32]
 517:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2886              		.loc 1 517 3 is_stmt 1 view .LVU1006
 517:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2887              		.loc 1 517 38 is_stmt 0 view .LVU1007
 2888 0020 4362     		str	r3, [r0, #36]
 518:Core/Src/main.c ****   {
 2889              		.loc 1 518 3 is_stmt 1 view .LVU1008
 518:Core/Src/main.c ****   {
 2890              		.loc 1 518 7 is_stmt 0 view .LVU1009
 2891 0022 FFF7FEFF 		bl	HAL_UART_Init
 2892              	.LVL327:
 518:Core/Src/main.c ****   {
 2893              		.loc 1 518 6 view .LVU1010
 2894 0026 00B9     		cbnz	r0, .L275
ARM GAS  /tmp/ccn5IMCN.s 			page 87


 526:Core/Src/main.c **** 
 2895              		.loc 1 526 1 view .LVU1011
 2896 0028 08BD     		pop	{r3, pc}
 2897              	.L275:
 520:Core/Src/main.c ****   }
 2898              		.loc 1 520 5 is_stmt 1 view .LVU1012
 2899 002a FFF7FEFF 		bl	Error_Handler
 2900              	.LVL328:
 2901              	.L277:
 2902 002e 00BF     		.align	2
 2903              	.L276:
 2904 0030 00000000 		.word	.LANCHOR6
 2905 0034 00440040 		.word	1073759232
 2906              		.cfi_endproc
 2907              	.LFE212:
 2909              		.section	.text.SystemClock_Config,"ax",%progbits
 2910              		.align	1
 2911              		.global	SystemClock_Config
 2912              		.syntax unified
 2913              		.thumb
 2914              		.thumb_func
 2915              		.fpu fpv4-sp-d16
 2917              	SystemClock_Config:
 2918              	.LFB207:
 295:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2919              		.loc 1 295 1 view -0
 2920              		.cfi_startproc
 2921              		@ args = 0, pretend = 0, frame = 88
 2922              		@ frame_needed = 0, uses_anonymous_args = 0
 2923 0000 00B5     		push	{lr}
 2924              	.LCFI19:
 2925              		.cfi_def_cfa_offset 4
 2926              		.cfi_offset 14, -4
 2927 0002 97B0     		sub	sp, sp, #92
 2928              	.LCFI20:
 2929              		.cfi_def_cfa_offset 96
 296:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2930              		.loc 1 296 3 view .LVU1014
 296:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2931              		.loc 1 296 22 is_stmt 0 view .LVU1015
 2932 0004 4422     		movs	r2, #68
 2933 0006 0021     		movs	r1, #0
 2934 0008 05A8     		add	r0, sp, #20
 2935 000a FFF7FEFF 		bl	memset
 2936              	.LVL329:
 297:Core/Src/main.c **** 
 2937              		.loc 1 297 3 is_stmt 1 view .LVU1016
 297:Core/Src/main.c **** 
 2938              		.loc 1 297 22 is_stmt 0 view .LVU1017
 2939 000e 0023     		movs	r3, #0
 2940 0010 0093     		str	r3, [sp]
 2941 0012 0193     		str	r3, [sp, #4]
 2942 0014 0293     		str	r3, [sp, #8]
 2943 0016 0393     		str	r3, [sp, #12]
 2944 0018 0493     		str	r3, [sp, #16]
 301:Core/Src/main.c ****   {
 2945              		.loc 1 301 3 is_stmt 1 view .LVU1018
ARM GAS  /tmp/ccn5IMCN.s 			page 88


 301:Core/Src/main.c ****   {
 2946              		.loc 1 301 7 is_stmt 0 view .LVU1019
 2947 001a 4FF40070 		mov	r0, #512
 2948 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 2949              	.LVL330:
 301:Core/Src/main.c ****   {
 2950              		.loc 1 301 6 view .LVU1020
 2951 0022 28BB     		cbnz	r0, .L283
 309:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2952              		.loc 1 309 3 is_stmt 1 view .LVU1021
 309:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2953              		.loc 1 309 36 is_stmt 0 view .LVU1022
 2954 0024 1023     		movs	r3, #16
 2955 0026 0593     		str	r3, [sp, #20]
 310:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 2956              		.loc 1 310 3 is_stmt 1 view .LVU1023
 310:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 2957              		.loc 1 310 30 is_stmt 0 view .LVU1024
 2958 0028 0122     		movs	r2, #1
 2959 002a 0B92     		str	r2, [sp, #44]
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 2960              		.loc 1 311 3 is_stmt 1 view .LVU1025
 311:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 2961              		.loc 1 311 41 is_stmt 0 view .LVU1026
 2962 002c 0023     		movs	r3, #0
 2963 002e 0C93     		str	r3, [sp, #48]
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2964              		.loc 1 312 3 is_stmt 1 view .LVU1027
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2965              		.loc 1 312 35 is_stmt 0 view .LVU1028
 2966 0030 6023     		movs	r3, #96
 2967 0032 0D93     		str	r3, [sp, #52]
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 2968              		.loc 1 313 3 is_stmt 1 view .LVU1029
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 2969              		.loc 1 313 34 is_stmt 0 view .LVU1030
 2970 0034 0223     		movs	r3, #2
 2971 0036 0F93     		str	r3, [sp, #60]
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2972              		.loc 1 314 3 is_stmt 1 view .LVU1031
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2973              		.loc 1 314 35 is_stmt 0 view .LVU1032
 2974 0038 1092     		str	r2, [sp, #64]
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 2975              		.loc 1 315 3 is_stmt 1 view .LVU1033
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 2976              		.loc 1 315 30 is_stmt 0 view .LVU1034
 2977 003a 1192     		str	r2, [sp, #68]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 2978              		.loc 1 316 3 is_stmt 1 view .LVU1035
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 2979              		.loc 1 316 30 is_stmt 0 view .LVU1036
 2980 003c 2822     		movs	r2, #40
 2981 003e 1292     		str	r2, [sp, #72]
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 2982              		.loc 1 317 3 is_stmt 1 view .LVU1037
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
ARM GAS  /tmp/ccn5IMCN.s 			page 89


 2983              		.loc 1 317 30 is_stmt 0 view .LVU1038
 2984 0040 0722     		movs	r2, #7
 2985 0042 1392     		str	r2, [sp, #76]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 2986              		.loc 1 318 3 is_stmt 1 view .LVU1039
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 2987              		.loc 1 318 30 is_stmt 0 view .LVU1040
 2988 0044 1493     		str	r3, [sp, #80]
 319:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2989              		.loc 1 319 3 is_stmt 1 view .LVU1041
 319:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2990              		.loc 1 319 30 is_stmt 0 view .LVU1042
 2991 0046 1593     		str	r3, [sp, #84]
 320:Core/Src/main.c ****   {
 2992              		.loc 1 320 3 is_stmt 1 view .LVU1043
 320:Core/Src/main.c ****   {
 2993              		.loc 1 320 7 is_stmt 0 view .LVU1044
 2994 0048 05A8     		add	r0, sp, #20
 2995 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 2996              	.LVL331:
 320:Core/Src/main.c ****   {
 2997              		.loc 1 320 6 view .LVU1045
 2998 004e 88B9     		cbnz	r0, .L284
 327:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2999              		.loc 1 327 3 is_stmt 1 view .LVU1046
 327:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3000              		.loc 1 327 31 is_stmt 0 view .LVU1047
 3001 0050 0F23     		movs	r3, #15
 3002 0052 0093     		str	r3, [sp]
 329:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3003              		.loc 1 329 3 is_stmt 1 view .LVU1048
 329:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3004              		.loc 1 329 34 is_stmt 0 view .LVU1049
 3005 0054 0323     		movs	r3, #3
 3006 0056 0193     		str	r3, [sp, #4]
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3007              		.loc 1 330 3 is_stmt 1 view .LVU1050
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3008              		.loc 1 330 35 is_stmt 0 view .LVU1051
 3009 0058 0023     		movs	r3, #0
 3010 005a 0293     		str	r3, [sp, #8]
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3011              		.loc 1 331 3 is_stmt 1 view .LVU1052
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3012              		.loc 1 331 36 is_stmt 0 view .LVU1053
 3013 005c 0393     		str	r3, [sp, #12]
 332:Core/Src/main.c **** 
 3014              		.loc 1 332 3 is_stmt 1 view .LVU1054
 332:Core/Src/main.c **** 
 3015              		.loc 1 332 36 is_stmt 0 view .LVU1055
 3016 005e 0493     		str	r3, [sp, #16]
 334:Core/Src/main.c ****   {
 3017              		.loc 1 334 3 is_stmt 1 view .LVU1056
 334:Core/Src/main.c ****   {
 3018              		.loc 1 334 7 is_stmt 0 view .LVU1057
 3019 0060 0421     		movs	r1, #4
 3020 0062 6846     		mov	r0, sp
ARM GAS  /tmp/ccn5IMCN.s 			page 90


 3021 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3022              	.LVL332:
 334:Core/Src/main.c ****   {
 3023              		.loc 1 334 6 view .LVU1058
 3024 0068 30B9     		cbnz	r0, .L285
 338:Core/Src/main.c **** 
 3025              		.loc 1 338 1 view .LVU1059
 3026 006a 17B0     		add	sp, sp, #92
 3027              	.LCFI21:
 3028              		.cfi_remember_state
 3029              		.cfi_def_cfa_offset 4
 3030              		@ sp needed
 3031 006c 5DF804FB 		ldr	pc, [sp], #4
 3032              	.L283:
 3033              	.LCFI22:
 3034              		.cfi_restore_state
 303:Core/Src/main.c ****   }
 3035              		.loc 1 303 5 is_stmt 1 view .LVU1060
 3036 0070 FFF7FEFF 		bl	Error_Handler
 3037              	.LVL333:
 3038              	.L284:
 322:Core/Src/main.c ****   }
 3039              		.loc 1 322 5 view .LVU1061
 3040 0074 FFF7FEFF 		bl	Error_Handler
 3041              	.LVL334:
 3042              	.L285:
 336:Core/Src/main.c ****   }
 3043              		.loc 1 336 5 view .LVU1062
 3044 0078 FFF7FEFF 		bl	Error_Handler
 3045              	.LVL335:
 3046              		.cfi_endproc
 3047              	.LFE207:
 3049              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 3050              		.align	1
 3051              		.global	PeriphCommonClock_Config
 3052              		.syntax unified
 3053              		.thumb
 3054              		.thumb_func
 3055              		.fpu fpv4-sp-d16
 3057              	PeriphCommonClock_Config:
 3058              	.LFB208:
 345:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 3059              		.loc 1 345 1 view -0
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 136
 3062              		@ frame_needed = 0, uses_anonymous_args = 0
 3063 0000 00B5     		push	{lr}
 3064              	.LCFI23:
 3065              		.cfi_def_cfa_offset 4
 3066              		.cfi_offset 14, -4
 3067 0002 A3B0     		sub	sp, sp, #140
 3068              	.LCFI24:
 3069              		.cfi_def_cfa_offset 144
 346:Core/Src/main.c **** 
 3070              		.loc 1 346 3 view .LVU1064
 346:Core/Src/main.c **** 
 3071              		.loc 1 346 28 is_stmt 0 view .LVU1065
ARM GAS  /tmp/ccn5IMCN.s 			page 91


 3072 0004 8822     		movs	r2, #136
 3073 0006 0021     		movs	r1, #0
 3074 0008 6846     		mov	r0, sp
 3075 000a FFF7FEFF 		bl	memset
 3076              	.LVL336:
 350:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 3077              		.loc 1 350 3 is_stmt 1 view .LVU1066
 350:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 3078              		.loc 1 350 38 is_stmt 0 view .LVU1067
 3079 000e 4FF40053 		mov	r3, #8192
 3080 0012 0093     		str	r3, [sp]
 351:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 3081              		.loc 1 351 3 is_stmt 1 view .LVU1068
 351:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 3082              		.loc 1 351 35 is_stmt 0 view .LVU1069
 3083 0014 4FF08063 		mov	r3, #67108864
 3084 0018 1B93     		str	r3, [sp, #108]
 352:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 3085              		.loc 1 352 3 is_stmt 1 view .LVU1070
 352:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 3086              		.loc 1 352 39 is_stmt 0 view .LVU1071
 3087 001a 0123     		movs	r3, #1
 3088 001c 0193     		str	r3, [sp, #4]
 353:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 3089              		.loc 1 353 3 is_stmt 1 view .LVU1072
 353:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 3090              		.loc 1 353 34 is_stmt 0 view .LVU1073
 3091 001e 0293     		str	r3, [sp, #8]
 354:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 3092              		.loc 1 354 3 is_stmt 1 view .LVU1074
 354:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 3093              		.loc 1 354 34 is_stmt 0 view .LVU1075
 3094 0020 1823     		movs	r3, #24
 3095 0022 0393     		str	r3, [sp, #12]
 355:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 3096              		.loc 1 355 3 is_stmt 1 view .LVU1076
 355:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 3097              		.loc 1 355 34 is_stmt 0 view .LVU1077
 3098 0024 0723     		movs	r3, #7
 3099 0026 0493     		str	r3, [sp, #16]
 356:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 3100              		.loc 1 356 3 is_stmt 1 view .LVU1078
 356:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 3101              		.loc 1 356 34 is_stmt 0 view .LVU1079
 3102 0028 0223     		movs	r3, #2
 3103 002a 0593     		str	r3, [sp, #20]
 357:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 3104              		.loc 1 357 3 is_stmt 1 view .LVU1080
 357:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 3105              		.loc 1 357 34 is_stmt 0 view .LVU1081
 3106 002c 0693     		str	r3, [sp, #24]
 358:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 3107              		.loc 1 358 3 is_stmt 1 view .LVU1082
 358:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 3108              		.loc 1 358 41 is_stmt 0 view .LVU1083
 3109 002e 4FF48013 		mov	r3, #1048576
 3110 0032 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccn5IMCN.s 			page 92


 359:Core/Src/main.c ****   {
 3111              		.loc 1 359 3 is_stmt 1 view .LVU1084
 359:Core/Src/main.c ****   {
 3112              		.loc 1 359 7 is_stmt 0 view .LVU1085
 3113 0034 6846     		mov	r0, sp
 3114 0036 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3115              	.LVL337:
 359:Core/Src/main.c ****   {
 3116              		.loc 1 359 6 view .LVU1086
 3117 003a 10B9     		cbnz	r0, .L289
 363:Core/Src/main.c **** 
 3118              		.loc 1 363 1 view .LVU1087
 3119 003c 23B0     		add	sp, sp, #140
 3120              	.LCFI25:
 3121              		.cfi_remember_state
 3122              		.cfi_def_cfa_offset 4
 3123              		@ sp needed
 3124 003e 5DF804FB 		ldr	pc, [sp], #4
 3125              	.L289:
 3126              	.LCFI26:
 3127              		.cfi_restore_state
 361:Core/Src/main.c ****   }
 3128              		.loc 1 361 5 is_stmt 1 view .LVU1088
 3129 0042 FFF7FEFF 		bl	Error_Handler
 3130              	.LVL338:
 3131              		.cfi_endproc
 3132              	.LFE208:
 3134              		.section	.text.main,"ax",%progbits
 3135              		.align	1
 3136              		.global	main
 3137              		.syntax unified
 3138              		.thumb
 3139              		.thumb_func
 3140              		.fpu fpv4-sp-d16
 3142              	main:
 3143              	.LFB206:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3144              		.loc 1 119 1 view -0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 0
 3147              		@ frame_needed = 0, uses_anonymous_args = 0
 3148 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3149              	.LCFI27:
 3150              		.cfi_def_cfa_offset 32
 3151              		.cfi_offset 4, -32
 3152              		.cfi_offset 5, -28
 3153              		.cfi_offset 6, -24
 3154              		.cfi_offset 7, -20
 3155              		.cfi_offset 8, -16
 3156              		.cfi_offset 9, -12
 3157              		.cfi_offset 10, -8
 3158              		.cfi_offset 14, -4
 3159 0004 82B0     		sub	sp, sp, #8
 3160              	.LCFI28:
 3161              		.cfi_def_cfa_offset 40
 127:Core/Src/main.c **** 
 3162              		.loc 1 127 3 view .LVU1090
ARM GAS  /tmp/ccn5IMCN.s 			page 93


 3163 0006 FFF7FEFF 		bl	HAL_Init
 3164              	.LVL339:
 134:Core/Src/main.c **** 
 3165              		.loc 1 134 3 view .LVU1091
 3166 000a FFF7FEFF 		bl	SystemClock_Config
 3167              	.LVL340:
 137:Core/Src/main.c **** 
 3168              		.loc 1 137 3 view .LVU1092
 3169 000e FFF7FEFF 		bl	PeriphCommonClock_Config
 3170              	.LVL341:
 144:Core/Src/main.c ****   MX_DMA_Init();
 3171              		.loc 1 144 3 view .LVU1093
 3172 0012 FFF7FEFF 		bl	MX_GPIO_Init
 3173              	.LVL342:
 145:Core/Src/main.c ****   MX_SPI1_Init();
 3174              		.loc 1 145 3 view .LVU1094
 3175 0016 FFF7FEFF 		bl	MX_DMA_Init
 3176              	.LVL343:
 146:Core/Src/main.c ****   MX_I2C1_Init();
 3177              		.loc 1 146 3 view .LVU1095
 3178 001a FFF7FEFF 		bl	MX_SPI1_Init
 3179              	.LVL344:
 147:Core/Src/main.c ****   MX_USB_OTG_FS_USB_Init();
 3180              		.loc 1 147 3 view .LVU1096
 3181 001e FFF7FEFF 		bl	MX_I2C1_Init
 3182              	.LVL345:
 148:Core/Src/main.c ****   MX_SPI2_Init();
 3183              		.loc 1 148 3 view .LVU1097
 149:Core/Src/main.c ****   MX_USART2_UART_Init();
 3184              		.loc 1 149 3 view .LVU1098
 3185 0022 FFF7FEFF 		bl	MX_SPI2_Init
 3186              	.LVL346:
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3187              		.loc 1 150 3 view .LVU1099
 3188 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 3189              	.LVL347:
 155:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 3190              		.loc 1 155 3 view .LVU1100
 3191 002a FFF7FEFF 		bl	tusb_init
 3192              	.LVL348:
 160:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3193              		.loc 1 160 3 view .LVU1101
 160:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3194              		.loc 1 160 20 is_stmt 0 view .LVU1102
 3195 002e 704B     		ldr	r3, .L307
 3196 0030 0124     		movs	r4, #1
 3197 0032 1C70     		strb	r4, [r3]
 162:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3198              		.loc 1 162 3 is_stmt 1 view .LVU1103
 162:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3199              		.loc 1 162 20 is_stmt 0 view .LVU1104
 3200 0034 8022     		movs	r2, #128
 3201 0036 5A70     		strb	r2, [r3, #1]
 164:Core/Src/main.c **** 
 3202              		.loc 1 164 3 is_stmt 1 view .LVU1105
 164:Core/Src/main.c **** 
 3203              		.loc 1 164 20 is_stmt 0 view .LVU1106
ARM GAS  /tmp/ccn5IMCN.s 			page 94


 3204 0038 0027     		movs	r7, #0
 3205 003a 9F70     		strb	r7, [r3, #2]
 167:Core/Src/main.c **** 
 3206              		.loc 1 167 3 is_stmt 1 view .LVU1107
 3207              	.LVL349:
 170:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 3208              		.loc 1 170 3 view .LVU1108
 170:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 3209              		.loc 1 170 20 is_stmt 0 view .LVU1109
 3210 003c 6D4A     		ldr	r2, .L307+4
 3211 003e 1023     		movs	r3, #16
 3212 0040 1370     		strb	r3, [r2]
 171:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 3213              		.loc 1 171 3 is_stmt 1 view .LVU1110
 3214 0042 4FF47A73 		mov	r3, #1000
 3215 0046 0093     		str	r3, [sp]
 3216 0048 2346     		mov	r3, r4
 3217 004a 5821     		movs	r1, #88
 3218 004c 6A48     		ldr	r0, .L307+8
 3219 004e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3220              	.LVL350:
 172:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 3221              		.loc 1 172 3 view .LVU1111
 3222 0052 6A4D     		ldr	r5, .L307+12
 3223 0054 2246     		mov	r2, r4
 3224 0056 4FF48051 		mov	r1, #4096
 3225 005a 2846     		mov	r0, r5
 3226 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 3227              	.LVL351:
 173:Core/Src/main.c **** 
 3228              		.loc 1 173 3 view .LVU1112
 3229 0060 2246     		mov	r2, r4
 3230 0062 4FF40061 		mov	r1, #2048
 3231 0066 2846     		mov	r0, r5
 3232 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3233              	.LVL352:
 175:Core/Src/main.c ****   bool flag1 = false;
 3234              		.loc 1 175 3 view .LVU1113
 176:Core/Src/main.c ****   bool flag2 = false;
 3235              		.loc 1 176 3 view .LVU1114
 177:Core/Src/main.c **** 
 3236              		.loc 1 177 3 view .LVU1115
 180:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 3237              		.loc 1 180 3 view .LVU1116
 177:Core/Src/main.c **** 
 3238              		.loc 1 177 8 is_stmt 0 view .LVU1117
 3239 006c B846     		mov	r8, r7
 176:Core/Src/main.c ****   bool flag2 = false;
 3240              		.loc 1 176 8 view .LVU1118
 3241 006e B946     		mov	r9, r7
 175:Core/Src/main.c ****   bool flag1 = false;
 3242              		.loc 1 175 7 view .LVU1119
 3243 0070 0226     		movs	r6, #2
 3244 0072 81E0     		b	.L301
 3245              	.LVL353:
 3246              	.L302:
 209:Core/Src/main.c ****     }
ARM GAS  /tmp/ccn5IMCN.s 			page 95


 3247              		.loc 1 209 13 view .LVU1120
 3248 0074 4FF00109 		mov	r9, #1
 3249              	.LVL354:
 208:Core/Src/main.c ****       flag1 = true;
 3250              		.loc 1 208 37 view .LVU1121
 3251 0078 0426     		movs	r6, #4
 3252              	.LVL355:
 208:Core/Src/main.c ****       flag1 = true;
 3253              		.loc 1 208 37 view .LVU1122
 3254 007a 8CE0     		b	.L291
 3255              	.LVL356:
 3256              	.L304:
 217:Core/Src/main.c ****     }
 3257              		.loc 1 217 13 view .LVU1123
 3258 007c 4FF00108 		mov	r8, #1
 3259              	.LVL357:
 216:Core/Src/main.c ****       flag2 = true;
 3260              		.loc 1 216 37 view .LVU1124
 3261 0080 0026     		movs	r6, #0
 3262              	.LVL358:
 216:Core/Src/main.c ****       flag2 = true;
 3263              		.loc 1 216 37 view .LVU1125
 3264 0082 9EE0     		b	.L293
 3265              	.LVL359:
 3266              	.L296:
 3267              	.LBB35:
 224:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3268              		.loc 1 224 5 is_stmt 1 discriminator 3 view .LVU1126
 224:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3269              		.loc 1 224 39 is_stmt 0 discriminator 3 view .LVU1127
 3270 0084 2301     		lsls	r3, r4, #4
 224:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3271              		.loc 1 224 35 discriminator 3 view .LVU1128
 3272 0086 63F07F03 		orn	r3, r3, #127
 224:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3273              		.loc 1 224 22 discriminator 3 view .LVU1129
 3274 008a DFF864A1 		ldr	r10, .L307
 3275 008e 8AF80130 		strb	r3, [r10, #1]
 226:Core/Src/main.c ****     // one full duplex interaction
 3276              		.loc 1 226 5 is_stmt 1 discriminator 3 view .LVU1130
 3277 0092 5A4D     		ldr	r5, .L307+12
 3278 0094 0022     		movs	r2, #0
 3279 0096 4FF48051 		mov	r1, #4096
 3280 009a 2846     		mov	r0, r5
 3281 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 3282              	.LVL360:
 228:Core/Src/main.c ****     // now need to parse data
 3283              		.loc 1 228 5 discriminator 3 view .LVU1131
 3284 00a0 574F     		ldr	r7, .L307+16
 3285 00a2 4FF47A73 		mov	r3, #1000
 3286 00a6 0093     		str	r3, [sp]
 3287 00a8 0323     		movs	r3, #3
 3288 00aa 3A46     		mov	r2, r7
 3289 00ac 5146     		mov	r1, r10
 3290 00ae 5548     		ldr	r0, .L307+20
 3291 00b0 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3292              	.LVL361:
ARM GAS  /tmp/ccn5IMCN.s 			page 96


 230:Core/Src/main.c ****     // default CS to be high
 3293              		.loc 1 230 5 discriminator 3 view .LVU1132
 230:Core/Src/main.c ****     // default CS to be high
 3294              		.loc 1 230 35 is_stmt 0 discriminator 3 view .LVU1133
 3295 00b4 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 230:Core/Src/main.c ****     // default CS to be high
 3296              		.loc 1 230 44 discriminator 3 view .LVU1134
 3297 00b6 1B02     		lsls	r3, r3, #8
 3298 00b8 03F44073 		and	r3, r3, #768
 230:Core/Src/main.c ****     // default CS to be high
 3299              		.loc 1 230 62 discriminator 3 view .LVU1135
 3300 00bc BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 230:Core/Src/main.c ****     // default CS to be high
 3301              		.loc 1 230 48 discriminator 3 view .LVU1136
 3302 00be 1343     		orrs	r3, r3, r2
 230:Core/Src/main.c ****     // default CS to be high
 3303              		.loc 1 230 17 discriminator 3 view .LVU1137
 3304 00c0 514A     		ldr	r2, .L307+24
 3305 00c2 42F82430 		str	r3, [r2, r4, lsl #2]
 232:Core/Src/main.c ****     //if(i == 7) i = 0;
 3306              		.loc 1 232 5 is_stmt 1 discriminator 3 view .LVU1138
 3307 00c6 0122     		movs	r2, #1
 3308 00c8 4FF48051 		mov	r1, #4096
 3309 00cc 2846     		mov	r0, r5
 3310 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 3311              	.LVL362:
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3312              		.loc 1 223 28 discriminator 3 view .LVU1139
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3313              		.loc 1 223 29 is_stmt 0 discriminator 3 view .LVU1140
 3314 00d2 0134     		adds	r4, r4, #1
 3315              	.LVL363:
 3316              	.L295:
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3317              		.loc 1 223 21 is_stmt 1 discriminator 1 view .LVU1141
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3318              		.loc 1 223 5 is_stmt 0 discriminator 1 view .LVU1142
 3319 00d4 072C     		cmp	r4, #7
 3320 00d6 D5DD     		ble	.L296
 3321              	.LBE35:
 3322              	.LBB36:
 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3323              		.loc 1 237 14 view .LVU1143
 3324 00d8 0024     		movs	r4, #0
 3325              	.LVL364:
 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3326              		.loc 1 237 14 view .LVU1144
 3327 00da 27E0     		b	.L297
 3328              	.LVL365:
 3329              	.L298:
 238:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3330              		.loc 1 238 5 is_stmt 1 discriminator 3 view .LVU1145
 238:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3331              		.loc 1 238 39 is_stmt 0 discriminator 3 view .LVU1146
 3332 00dc 2301     		lsls	r3, r4, #4
 238:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3333              		.loc 1 238 35 discriminator 3 view .LVU1147
ARM GAS  /tmp/ccn5IMCN.s 			page 97


 3334 00de 63F07F03 		orn	r3, r3, #127
 238:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3335              		.loc 1 238 22 discriminator 3 view .LVU1148
 3336 00e2 DFF80CA1 		ldr	r10, .L307
 3337 00e6 8AF80130 		strb	r3, [r10, #1]
 240:Core/Src/main.c ****     // one full duplex interaction
 3338              		.loc 1 240 5 is_stmt 1 discriminator 3 view .LVU1149
 3339 00ea 444D     		ldr	r5, .L307+12
 3340 00ec 0022     		movs	r2, #0
 3341 00ee 4FF40061 		mov	r1, #2048
 3342 00f2 2846     		mov	r0, r5
 3343 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3344              	.LVL366:
 242:Core/Src/main.c ****     // now need to parse data
 3345              		.loc 1 242 5 discriminator 3 view .LVU1150
 3346 00f8 414F     		ldr	r7, .L307+16
 3347 00fa 4FF47A73 		mov	r3, #1000
 3348 00fe 0093     		str	r3, [sp]
 3349 0100 0323     		movs	r3, #3
 3350 0102 3A46     		mov	r2, r7
 3351 0104 5146     		mov	r1, r10
 3352 0106 3F48     		ldr	r0, .L307+20
 3353 0108 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3354              	.LVL367:
 244:Core/Src/main.c ****     // default CS to be high
 3355              		.loc 1 244 5 discriminator 3 view .LVU1151
 244:Core/Src/main.c ****     // default CS to be high
 3356              		.loc 1 244 35 is_stmt 0 discriminator 3 view .LVU1152
 3357 010c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 244:Core/Src/main.c ****     // default CS to be high
 3358              		.loc 1 244 44 discriminator 3 view .LVU1153
 3359 010e 1B02     		lsls	r3, r3, #8
 3360 0110 03F44073 		and	r3, r3, #768
 244:Core/Src/main.c ****     // default CS to be high
 3361              		.loc 1 244 62 discriminator 3 view .LVU1154
 3362 0114 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 244:Core/Src/main.c ****     // default CS to be high
 3363              		.loc 1 244 48 discriminator 3 view .LVU1155
 3364 0116 1343     		orrs	r3, r3, r2
 244:Core/Src/main.c ****     // default CS to be high
 3365              		.loc 1 244 17 discriminator 3 view .LVU1156
 3366 0118 3C4A     		ldr	r2, .L307+28
 3367 011a 42F82430 		str	r3, [r2, r4, lsl #2]
 246:Core/Src/main.c ****     }
 3368              		.loc 1 246 5 is_stmt 1 discriminator 3 view .LVU1157
 3369 011e 0122     		movs	r2, #1
 3370 0120 4FF40061 		mov	r1, #2048
 3371 0124 2846     		mov	r0, r5
 3372 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3373              	.LVL368:
 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3374              		.loc 1 237 28 discriminator 3 view .LVU1158
 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3375              		.loc 1 237 29 is_stmt 0 discriminator 3 view .LVU1159
 3376 012a 0134     		adds	r4, r4, #1
 3377              	.LVL369:
 3378              	.L297:
ARM GAS  /tmp/ccn5IMCN.s 			page 98


 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3379              		.loc 1 237 21 is_stmt 1 discriminator 1 view .LVU1160
 237:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3380              		.loc 1 237 5 is_stmt 0 discriminator 1 view .LVU1161
 3381 012c 072C     		cmp	r4, #7
 3382 012e D5DD     		ble	.L298
 3383              	.LBE36:
 250:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3384              		.loc 1 250 5 is_stmt 1 view .LVU1162
 250:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3385              		.loc 1 250 10 is_stmt 0 view .LVU1163
 3386 0130 4FF48071 		mov	r1, #256
 3387 0134 3148     		ldr	r0, .L307+12
 3388 0136 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3389              	.LVL370:
 250:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3390              		.loc 1 250 8 view .LVU1164
 3391 013a 0028     		cmp	r0, #0
 3392 013c 4BD1     		bne	.L299
 252:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3393              		.loc 1 252 7 is_stmt 1 view .LVU1165
 252:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3394              		.loc 1 252 24 is_stmt 0 view .LVU1166
 3395 013e 2D4C     		ldr	r4, .L307+4
 3396              	.LVL371:
 252:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3397              		.loc 1 252 24 view .LVU1167
 3398 0140 0023     		movs	r3, #0
 3399 0142 2370     		strb	r3, [r4]
 253:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3400              		.loc 1 253 7 is_stmt 1 view .LVU1168
 253:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3401              		.loc 1 253 26 is_stmt 0 view .LVU1169
 3402 0144 3246     		mov	r2, r6
 3403 0146 3149     		ldr	r1, .L307+28
 3404 0148 2F48     		ldr	r0, .L307+24
 3405 014a FFF7FEFF 		bl	HALL_TO_DAC
 3406              	.LVL372:
 253:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3407              		.loc 1 253 24 view .LVU1170
 3408 014e 6070     		strb	r0, [r4, #1]
 254:Core/Src/main.c ****     }
 3409              		.loc 1 254 7 is_stmt 1 view .LVU1171
 3410 0150 4FF47A73 		mov	r3, #1000
 3411 0154 0093     		str	r3, [sp]
 3412 0156 0223     		movs	r3, #2
 3413 0158 2246     		mov	r2, r4
 3414 015a 5821     		movs	r1, #88
 3415 015c 2648     		ldr	r0, .L307+8
 3416 015e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3417              	.LVL373:
 3418              	.L300:
 279:Core/Src/main.c ****     midi_task();
 3419              		.loc 1 279 5 view .LVU1172
 3420              	.LBB37:
 3421              	.LBI37:
 3422              		.file 4 "tinyusb/src/device/usbd.h"
ARM GAS  /tmp/ccn5IMCN.s 			page 99


   1:tinyusb/src/device/usbd.h **** /*
   2:tinyusb/src/device/usbd.h ****  * The MIT License (MIT)
   3:tinyusb/src/device/usbd.h ****  *
   4:tinyusb/src/device/usbd.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/device/usbd.h ****  *
   6:tinyusb/src/device/usbd.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/device/usbd.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/device/usbd.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/device/usbd.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/device/usbd.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/device/usbd.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/device/usbd.h ****  *
  13:tinyusb/src/device/usbd.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/device/usbd.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/device/usbd.h ****  *
  16:tinyusb/src/device/usbd.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tinyusb/src/device/usbd.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/device/usbd.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/device/usbd.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/device/usbd.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/device/usbd.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/device/usbd.h ****  * THE SOFTWARE.
  23:tinyusb/src/device/usbd.h ****  *
  24:tinyusb/src/device/usbd.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/device/usbd.h ****  */
  26:tinyusb/src/device/usbd.h **** 
  27:tinyusb/src/device/usbd.h **** #ifndef _TUSB_USBD_H_
  28:tinyusb/src/device/usbd.h **** #define _TUSB_USBD_H_
  29:tinyusb/src/device/usbd.h **** 
  30:tinyusb/src/device/usbd.h **** #include "common/tusb_common.h"
  31:tinyusb/src/device/usbd.h **** 
  32:tinyusb/src/device/usbd.h **** #ifdef __cplusplus
  33:tinyusb/src/device/usbd.h **** extern "C" {
  34:tinyusb/src/device/usbd.h **** #endif
  35:tinyusb/src/device/usbd.h **** 
  36:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  37:tinyusb/src/device/usbd.h **** // Application API
  38:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  39:tinyusb/src/device/usbd.h **** 
  40:tinyusb/src/device/usbd.h **** // Init device stack
  41:tinyusb/src/device/usbd.h **** bool tud_init (uint8_t rhport);
  42:tinyusb/src/device/usbd.h **** 
  43:tinyusb/src/device/usbd.h **** // Check if device stack is already initialized
  44:tinyusb/src/device/usbd.h **** bool tud_inited(void);
  45:tinyusb/src/device/usbd.h **** 
  46:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop, extended version of tud_task()
  47:tinyusb/src/device/usbd.h **** // - timeout_ms: millisecond to wait, zero = no wait, 0xFFFFFFFF = wait forever
  48:tinyusb/src/device/usbd.h **** // - in_isr: if function is called in ISR
  49:tinyusb/src/device/usbd.h **** void tud_task_ext(uint32_t timeout_ms, bool in_isr);
  50:tinyusb/src/device/usbd.h **** 
  51:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop
  52:tinyusb/src/device/usbd.h **** TU_ATTR_ALWAYS_INLINE static inline
  53:tinyusb/src/device/usbd.h **** void tud_task (void) {
 3423              		.loc 4 53 6 view .LVU1173
 3424              	.LBB38:
  54:tinyusb/src/device/usbd.h ****   tud_task_ext(UINT32_MAX, false);
 3425              		.loc 4 54 3 view .LVU1174
ARM GAS  /tmp/ccn5IMCN.s 			page 100


 3426 0162 0021     		movs	r1, #0
 3427 0164 4FF0FF30 		mov	r0, #-1
 3428 0168 FFF7FEFF 		bl	tud_task_ext
 3429              	.LVL374:
 3430              	.LBE38:
 3431              	.LBE37:
 280:Core/Src/main.c ****     HAL_Delay(1000);
 3432              		.loc 1 280 5 view .LVU1175
 3433 016c FFF7FEFF 		bl	midi_task
 3434              	.LVL375:
 281:Core/Src/main.c **** 
 3435              		.loc 1 281 5 view .LVU1176
 3436 0170 4FF47A70 		mov	r0, #1000
 3437 0174 FFF7FEFF 		bl	HAL_Delay
 3438              	.LVL376:
 200:Core/Src/main.c ****   {
 3439              		.loc 1 200 9 view .LVU1177
 3440              	.L301:
 200:Core/Src/main.c ****   {
 3441              		.loc 1 200 3 view .LVU1178
 206:Core/Src/main.c ****       octave_num = octave_num + 1;
 3442              		.loc 1 206 5 view .LVU1179
 206:Core/Src/main.c ****       octave_num = octave_num + 1;
 3443              		.loc 1 206 10 is_stmt 0 view .LVU1180
 3444 0178 0221     		movs	r1, #2
 3445 017a 4FF09040 		mov	r0, #1207959552
 3446 017e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3447              	.LVL377:
 206:Core/Src/main.c ****       octave_num = octave_num + 1;
 3448              		.loc 1 206 8 view .LVU1181
 3449 0182 40B9     		cbnz	r0, .L291
 206:Core/Src/main.c ****       octave_num = octave_num + 1;
 3450              		.loc 1 206 46 discriminator 1 view .LVU1182
 3451 0184 B9F1000F 		cmp	r9, #0
 3452 0188 05D1     		bne	.L291
 207:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3453              		.loc 1 207 7 is_stmt 1 view .LVU1183
 207:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3454              		.loc 1 207 18 is_stmt 0 view .LVU1184
 3455 018a 0136     		adds	r6, r6, #1
 3456              	.LVL378:
 208:Core/Src/main.c ****       flag1 = true;
 3457              		.loc 1 208 7 is_stmt 1 view .LVU1185
 208:Core/Src/main.c ****       flag1 = true;
 3458              		.loc 1 208 9 is_stmt 0 view .LVU1186
 3459 018c 042E     		cmp	r6, #4
 3460 018e 3FF771AF 		bgt	.L302
 209:Core/Src/main.c ****     }
 3461              		.loc 1 209 13 view .LVU1187
 3462 0192 4FF00109 		mov	r9, #1
 3463              	.LVL379:
 3464              	.L291:
 212:Core/Src/main.c **** 
 3465              		.loc 1 212 5 is_stmt 1 view .LVU1188
 212:Core/Src/main.c **** 
 3466              		.loc 1 212 9 is_stmt 0 view .LVU1189
 3467 0196 0221     		movs	r1, #2
ARM GAS  /tmp/ccn5IMCN.s 			page 101


 3468 0198 4FF09040 		mov	r0, #1207959552
 3469 019c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3470              	.LVL380:
 212:Core/Src/main.c **** 
 3471              		.loc 1 212 8 view .LVU1190
 3472 01a0 08B1     		cbz	r0, .L292
 212:Core/Src/main.c **** 
 3473              		.loc 1 212 52 view .LVU1191
 3474 01a2 4FF00009 		mov	r9, #0
 3475              	.LVL381:
 3476              	.L292:
 214:Core/Src/main.c ****       octave_num = octave_num - 1;
 3477              		.loc 1 214 5 is_stmt 1 view .LVU1192
 214:Core/Src/main.c ****       octave_num = octave_num - 1;
 3478              		.loc 1 214 10 is_stmt 0 view .LVU1193
 3479 01a6 0421     		movs	r1, #4
 3480 01a8 4FF09040 		mov	r0, #1207959552
 3481 01ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3482              	.LVL382:
 214:Core/Src/main.c ****       octave_num = octave_num - 1;
 3483              		.loc 1 214 8 view .LVU1194
 3484 01b0 38B9     		cbnz	r0, .L293
 214:Core/Src/main.c ****       octave_num = octave_num - 1;
 3485              		.loc 1 214 46 discriminator 1 view .LVU1195
 3486 01b2 B8F1000F 		cmp	r8, #0
 3487 01b6 04D1     		bne	.L293
 215:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 3488              		.loc 1 215 7 is_stmt 1 view .LVU1196
 3489              	.LVL383:
 216:Core/Src/main.c ****       flag2 = true;
 3490              		.loc 1 216 7 view .LVU1197
 216:Core/Src/main.c ****       flag2 = true;
 3491              		.loc 1 216 9 is_stmt 0 view .LVU1198
 3492 01b8 013E     		subs	r6, r6, #1
 3493              	.LVL384:
 216:Core/Src/main.c ****       flag2 = true;
 3494              		.loc 1 216 9 view .LVU1199
 3495 01ba 3FF55FAF 		bmi	.L304
 217:Core/Src/main.c ****     }
 3496              		.loc 1 217 13 view .LVU1200
 3497 01be 4FF00108 		mov	r8, #1
 3498              	.LVL385:
 3499              	.L293:
 220:Core/Src/main.c **** 
 3500              		.loc 1 220 5 is_stmt 1 view .LVU1201
 220:Core/Src/main.c **** 
 3501              		.loc 1 220 9 is_stmt 0 view .LVU1202
 3502 01c2 0421     		movs	r1, #4
 3503 01c4 4FF09040 		mov	r0, #1207959552
 3504 01c8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3505              	.LVL386:
 220:Core/Src/main.c **** 
 3506              		.loc 1 220 8 view .LVU1203
 3507 01cc 08B1     		cbz	r0, .L294
 220:Core/Src/main.c **** 
 3508              		.loc 1 220 52 view .LVU1204
 3509 01ce 4FF00008 		mov	r8, #0
ARM GAS  /tmp/ccn5IMCN.s 			page 102


 3510              	.LVL387:
 3511              	.L294:
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3512              		.loc 1 223 5 is_stmt 1 view .LVU1205
 3513              	.LBB39:
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3514              		.loc 1 223 10 view .LVU1206
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3515              		.loc 1 223 14 is_stmt 0 view .LVU1207
 3516 01d2 0024     		movs	r4, #0
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3517              		.loc 1 223 5 view .LVU1208
 3518 01d4 7EE7     		b	.L295
 3519              	.LVL388:
 3520              	.L299:
 223:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3521              		.loc 1 223 5 view .LVU1209
 3522              	.LBE39:
 258:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3523              		.loc 1 258 7 is_stmt 1 view .LVU1210
 258:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3524              		.loc 1 258 24 is_stmt 0 view .LVU1211
 3525 01d6 074A     		ldr	r2, .L307+4
 3526 01d8 0023     		movs	r3, #0
 3527 01da 1370     		strb	r3, [r2]
 259:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3528              		.loc 1 259 7 is_stmt 1 view .LVU1212
 259:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3529              		.loc 1 259 24 is_stmt 0 view .LVU1213
 3530 01dc 5370     		strb	r3, [r2, #1]
 260:Core/Src/main.c ****     }
 3531              		.loc 1 260 7 is_stmt 1 view .LVU1214
 3532 01de 4FF47A73 		mov	r3, #1000
 3533 01e2 0093     		str	r3, [sp]
 3534 01e4 0223     		movs	r3, #2
 3535 01e6 5821     		movs	r1, #88
 3536 01e8 0348     		ldr	r0, .L307+8
 3537 01ea FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3538              	.LVL389:
 3539 01ee B8E7     		b	.L300
 3540              	.L308:
 3541              		.align	2
 3542              	.L307:
 3543 01f0 00000000 		.word	.LANCHOR7
 3544 01f4 00000000 		.word	.LANCHOR8
 3545 01f8 00000000 		.word	.LANCHOR4
 3546 01fc 00100048 		.word	1207963648
 3547 0200 00000000 		.word	.LANCHOR9
 3548 0204 00000000 		.word	.LANCHOR3
 3549 0208 00000000 		.word	.LANCHOR10
 3550 020c 00000000 		.word	.LANCHOR11
 3551              		.cfi_endproc
 3552              	.LFE206:
 3554              		.global	SPI_RX_Buffer
 3555              		.global	SPI_TX_Buffer
 3556              		.global	ADC2_VAL
 3557              		.global	ADC1_VAL
ARM GAS  /tmp/ccn5IMCN.s 			page 103


 3558              		.global	I2C_TX_Buffer
 3559              		.global	huart2
 3560              		.global	hdma_spi2_rx
 3561              		.global	hdma_spi1_rx
 3562              		.global	hdma_spi1_tx
 3563              		.global	hspi2
 3564              		.global	hspi1
 3565              		.global	hi2c1
 3566              		.global	note_sequence
 3567              		.global	note_pos
 3568              		.section	.bss.ADC1_VAL,"aw",%nobits
 3569              		.align	2
 3570              		.set	.LANCHOR10,. + 0
 3573              	ADC1_VAL:
 3574 0000 00000000 		.space	32
 3574      00000000 
 3574      00000000 
 3574      00000000 
 3574      00000000 
 3575              		.section	.bss.ADC2_VAL,"aw",%nobits
 3576              		.align	2
 3577              		.set	.LANCHOR11,. + 0
 3580              	ADC2_VAL:
 3581 0000 00000000 		.space	32
 3581      00000000 
 3581      00000000 
 3581      00000000 
 3581      00000000 
 3582              		.section	.bss.I2C_TX_Buffer,"aw",%nobits
 3583              		.align	2
 3584              		.set	.LANCHOR8,. + 0
 3587              	I2C_TX_Buffer:
 3588 0000 0000     		.space	2
 3589              		.section	.bss.SPI_RX_Buffer,"aw",%nobits
 3590              		.align	2
 3591              		.set	.LANCHOR9,. + 0
 3594              	SPI_RX_Buffer:
 3595 0000 000000   		.space	3
 3596              		.section	.bss.SPI_TX_Buffer,"aw",%nobits
 3597              		.align	2
 3598              		.set	.LANCHOR7,. + 0
 3601              	SPI_TX_Buffer:
 3602 0000 000000   		.space	3
 3603              		.section	.bss.blink_interval_ms,"aw",%nobits
 3604              		.align	2
 3605              		.set	.LANCHOR0,. + 0
 3608              	blink_interval_ms:
 3609 0000 00000000 		.space	4
 3610              		.section	.bss.hdma_spi1_rx,"aw",%nobits
 3611              		.align	2
 3614              	hdma_spi1_rx:
 3615 0000 00000000 		.space	72
 3615      00000000 
 3615      00000000 
 3615      00000000 
 3615      00000000 
 3616              		.section	.bss.hdma_spi1_tx,"aw",%nobits
ARM GAS  /tmp/ccn5IMCN.s 			page 104


 3617              		.align	2
 3620              	hdma_spi1_tx:
 3621 0000 00000000 		.space	72
 3621      00000000 
 3621      00000000 
 3621      00000000 
 3621      00000000 
 3622              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 3623              		.align	2
 3626              	hdma_spi2_rx:
 3627 0000 00000000 		.space	72
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3628              		.section	.bss.hi2c1,"aw",%nobits
 3629              		.align	2
 3630              		.set	.LANCHOR4,. + 0
 3633              	hi2c1:
 3634 0000 00000000 		.space	84
 3634      00000000 
 3634      00000000 
 3634      00000000 
 3634      00000000 
 3635              		.section	.bss.hspi1,"aw",%nobits
 3636              		.align	2
 3637              		.set	.LANCHOR3,. + 0
 3640              	hspi1:
 3641 0000 00000000 		.space	100
 3641      00000000 
 3641      00000000 
 3641      00000000 
 3641      00000000 
 3642              		.section	.bss.hspi2,"aw",%nobits
 3643              		.align	2
 3644              		.set	.LANCHOR5,. + 0
 3647              	hspi2:
 3648 0000 00000000 		.space	100
 3648      00000000 
 3648      00000000 
 3648      00000000 
 3648      00000000 
 3649              		.section	.bss.huart2,"aw",%nobits
 3650              		.align	2
 3651              		.set	.LANCHOR6,. + 0
 3654              	huart2:
 3655 0000 00000000 		.space	132
 3655      00000000 
 3655      00000000 
 3655      00000000 
 3655      00000000 
 3656              		.section	.bss.note_pos,"aw",%nobits
 3657              		.align	2
 3658              		.set	.LANCHOR1,. + 0
 3661              	note_pos:
 3662 0000 00000000 		.space	4
 3663              		.section	.data.note_sequence,"aw"
ARM GAS  /tmp/ccn5IMCN.s 			page 105


 3664              		.align	2
 3665              		.set	.LANCHOR2,. + 0
 3668              	note_sequence:
 3669 0000 4A4E5156 		.ascii	"JNQVZ]bf9=BEINQUX\\ada\\XUQNJEB>9>BEJNQVZ]afa]ZUQNI"
 3669      5A5D6266 
 3669      393D4245 
 3669      494E5155 
 3669      585C6164 
 3670 0031 44403D38 		.ascii	"D@=8=@DJNQVZ]bf"
 3670      3D40444A 
 3670      4E51565A 
 3670      5D6266
 3671              		.text
 3672              	.Letext0:
 3673              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 3674              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3675              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3676              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3677              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 3678              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 3679              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3680              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 3681              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 3682              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 3683              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 3684              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 3685              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 3686              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 3687              		.file 19 "tinyusb/src/tusb.h"
 3688              		.file 20 "<built-in>"
ARM GAS  /tmp/ccn5IMCN.s 			page 106


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccn5IMCN.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccn5IMCN.s:622    .text.MX_GPIO_Init:00000000000002c8 $d
     /tmp/ccn5IMCN.s:631    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:637    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccn5IMCN.s:705    .text.MX_DMA_Init:0000000000000050 $d
     /tmp/ccn5IMCN.s:710    .text.tud_mount_cb:0000000000000000 $t
     /tmp/ccn5IMCN.s:717    .text.tud_mount_cb:0000000000000000 tud_mount_cb
     /tmp/ccn5IMCN.s:734    .text.tud_mount_cb:000000000000000c $d
     /tmp/ccn5IMCN.s:739    .text.tud_umount_cb:0000000000000000 $t
     /tmp/ccn5IMCN.s:746    .text.tud_umount_cb:0000000000000000 tud_umount_cb
     /tmp/ccn5IMCN.s:763    .text.tud_umount_cb:0000000000000008 $d
     /tmp/ccn5IMCN.s:768    .text.tud_suspend_cb:0000000000000000 $t
     /tmp/ccn5IMCN.s:775    .text.tud_suspend_cb:0000000000000000 tud_suspend_cb
     /tmp/ccn5IMCN.s:794    .text.tud_suspend_cb:000000000000000c $d
     /tmp/ccn5IMCN.s:799    .text.tud_resume_cb:0000000000000000 $t
     /tmp/ccn5IMCN.s:806    .text.tud_resume_cb:0000000000000000 tud_resume_cb
     /tmp/ccn5IMCN.s:837    .text.tud_resume_cb:0000000000000018 $d
     /tmp/ccn5IMCN.s:842    .text.midi_task:0000000000000000 $t
     /tmp/ccn5IMCN.s:849    .text.midi_task:0000000000000000 midi_task
     /tmp/ccn5IMCN.s:1014   .text.midi_task:0000000000000078 $d
     /tmp/ccn5IMCN.s:1020   .text.HALL_TO_DAC:0000000000000000 $t
     /tmp/ccn5IMCN.s:1027   .text.HALL_TO_DAC:0000000000000000 HALL_TO_DAC
     /tmp/ccn5IMCN.s:2527   .text.Error_Handler:0000000000000000 $t
     /tmp/ccn5IMCN.s:2534   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccn5IMCN.s:2566   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:2572   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccn5IMCN.s:2648   .text.MX_SPI1_Init:0000000000000040 $d
     /tmp/ccn5IMCN.s:2654   .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:2660   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccn5IMCN.s:2742   .text.MX_I2C1_Init:0000000000000048 $d
     /tmp/ccn5IMCN.s:2749   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:2755   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccn5IMCN.s:2831   .text.MX_SPI2_Init:0000000000000040 $d
     /tmp/ccn5IMCN.s:2837   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccn5IMCN.s:2843   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccn5IMCN.s:2904   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccn5IMCN.s:2910   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccn5IMCN.s:2917   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccn5IMCN.s:3050   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccn5IMCN.s:3057   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccn5IMCN.s:3135   .text.main:0000000000000000 $t
     /tmp/ccn5IMCN.s:3142   .text.main:0000000000000000 main
     /tmp/ccn5IMCN.s:3543   .text.main:00000000000001f0 $d
     /tmp/ccn5IMCN.s:3594   .bss.SPI_RX_Buffer:0000000000000000 SPI_RX_Buffer
     /tmp/ccn5IMCN.s:3601   .bss.SPI_TX_Buffer:0000000000000000 SPI_TX_Buffer
     /tmp/ccn5IMCN.s:3580   .bss.ADC2_VAL:0000000000000000 ADC2_VAL
     /tmp/ccn5IMCN.s:3573   .bss.ADC1_VAL:0000000000000000 ADC1_VAL
     /tmp/ccn5IMCN.s:3587   .bss.I2C_TX_Buffer:0000000000000000 I2C_TX_Buffer
     /tmp/ccn5IMCN.s:3654   .bss.huart2:0000000000000000 huart2
     /tmp/ccn5IMCN.s:3626   .bss.hdma_spi2_rx:0000000000000000 hdma_spi2_rx
     /tmp/ccn5IMCN.s:3614   .bss.hdma_spi1_rx:0000000000000000 hdma_spi1_rx
     /tmp/ccn5IMCN.s:3620   .bss.hdma_spi1_tx:0000000000000000 hdma_spi1_tx
     /tmp/ccn5IMCN.s:3647   .bss.hspi2:0000000000000000 hspi2
     /tmp/ccn5IMCN.s:3640   .bss.hspi1:0000000000000000 hspi1
ARM GAS  /tmp/ccn5IMCN.s 			page 107


     /tmp/ccn5IMCN.s:3633   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccn5IMCN.s:3668   .data.note_sequence:0000000000000000 note_sequence
     /tmp/ccn5IMCN.s:3661   .bss.note_pos:0000000000000000 note_pos
     /tmp/ccn5IMCN.s:3569   .bss.ADC1_VAL:0000000000000000 $d
     /tmp/ccn5IMCN.s:3576   .bss.ADC2_VAL:0000000000000000 $d
     /tmp/ccn5IMCN.s:3583   .bss.I2C_TX_Buffer:0000000000000000 $d
     /tmp/ccn5IMCN.s:3590   .bss.SPI_RX_Buffer:0000000000000000 $d
     /tmp/ccn5IMCN.s:3597   .bss.SPI_TX_Buffer:0000000000000000 $d
     /tmp/ccn5IMCN.s:3604   .bss.blink_interval_ms:0000000000000000 $d
     /tmp/ccn5IMCN.s:3608   .bss.blink_interval_ms:0000000000000000 blink_interval_ms
     /tmp/ccn5IMCN.s:3611   .bss.hdma_spi1_rx:0000000000000000 $d
     /tmp/ccn5IMCN.s:3617   .bss.hdma_spi1_tx:0000000000000000 $d
     /tmp/ccn5IMCN.s:3623   .bss.hdma_spi2_rx:0000000000000000 $d
     /tmp/ccn5IMCN.s:3629   .bss.hi2c1:0000000000000000 $d
     /tmp/ccn5IMCN.s:3636   .bss.hspi1:0000000000000000 $d
     /tmp/ccn5IMCN.s:3643   .bss.hspi2:0000000000000000 $d
     /tmp/ccn5IMCN.s:3650   .bss.huart2:0000000000000000 $d
     /tmp/ccn5IMCN.s:3657   .bss.note_pos:0000000000000000 $d
     /tmp/ccn5IMCN.s:3664   .data.note_sequence:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
tud_mounted
tud_midi_n_packet_read
tud_midi_n_available
tud_midi_n_stream_write
HAL_SPI_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
tusb_init
HAL_I2C_Master_Transmit
HAL_SPI_TransmitReceive
HAL_GPIO_ReadPin
tud_task_ext
HAL_Delay
