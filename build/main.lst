ARM GAS  /tmp/ccrYMPR3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB213:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "tusb.h"
  25:Core/Src/main.c **** #include "tusb_config.h"
  26:Core/Src/main.c **** #include "board_api.h"
  27:Core/Src/main.c **** //#include "../../tinyusb/hw/bsp/board_api.h"
  28:Core/Src/main.c **** //#include "family.c"
  29:Core/Src/main.c **** //#include "tinyusb/bsp/stm32l4/family" this isnt valid but find way to include this file
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccrYMPR3.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** #define SPI_LENGTH 3
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** enum  {
  43:Core/Src/main.c ****   BLINK_NOT_MOUNTED = 250,
  44:Core/Src/main.c ****   BLINK_MOUNTED = 1000,
  45:Core/Src/main.c ****   BLINK_SUSPENDED = 2500,
  46:Core/Src/main.c **** };
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** static uint32_t blink_interval_ms = BLINK_NOT_MOUNTED;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** // Variable that holds the current position in the sequence.
  51:Core/Src/main.c **** uint32_t note_pos = 0;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** // Store example melody as an array of note values
  54:Core/Src/main.c **** uint8_t note_sequence[] =
  55:Core/Src/main.c **** {
  56:Core/Src/main.c ****   74,78,81,86,90,93,98,102,57,61,66,69,73,78,81,85,88,92,97,100,97,92,88,85,81,78,
  57:Core/Src/main.c ****   74,69,66,62,57,62,66,69,74,78,81,86,90,93,97,102,97,93,90,85,81,78,73,68,64,61,
  58:Core/Src/main.c ****   56,61,64,68,74,78,81,86,90,93,98,102
  59:Core/Src/main.c **** };
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** // tracks which keys are pressed
  62:Core/Src/main.c **** uint16_t KEYPRESS = 0;
  63:Core/Src/main.c **** uint16_t KEYPRESSED = 0;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PD */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN PM */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PM */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  73:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  76:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  77:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  78:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  79:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** UART_HandleTypeDef huart2;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE BEGIN PV */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** //uint16_t I2C_TX_Buffer[]; //buffer for i2c data (wrong?)
  86:Core/Src/main.c **** uint8_t I2C_TX_Buffer[ 2 ]; //buffer for i2c data
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** uint32_t ADC1_VAL[ 8 ]; // one element for each ADC channel (one device)
ARM GAS  /tmp/ccrYMPR3.s 			page 3


  89:Core/Src/main.c **** uint32_t ADC2_VAL[ 8 ]; // one element for each ADC channel (one device)
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** uint32_t ADC1_VAL_TEST[ 8 ]; // one element for each ADC channel (one device)
  93:Core/Src/main.c **** uint32_t ADC2_VAL_TEST[ 8 ]; // one element for each ADC channel (one device)
  94:Core/Src/main.c **** //uint32_t adc_val;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** uint8_t SPI_TX_Buffer[ SPI_LENGTH ];
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** uint8_t SPI_RX_Buffer[ SPI_LENGTH ];
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END PV */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 104:Core/Src/main.c **** void SystemClock_Config(void);
 105:Core/Src/main.c **** static void MX_GPIO_Init(void);
 106:Core/Src/main.c **** static void MX_DMA_Init(void);
 107:Core/Src/main.c **** static void MX_SPI1_Init(void);
 108:Core/Src/main.c **** static void MX_I2C1_Init(void);
 109:Core/Src/main.c **** static void MX_SPI2_Init(void);
 110:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 111:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** void midi_task(void);
 114:Core/Src/main.c **** void READ_KEYPRESS(uint32_t adc1_val[], uint32_t adc2_val[]);
 115:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num);
 116:Core/Src/main.c **** uint8_t DAC_TO_MIDI(uint8_t val);
 117:Core/Src/main.c **** void MIDI_TASK(int octave_num);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /* USER CODE END PFP */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 122:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* USER CODE END 0 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief  The application entry point.
 128:Core/Src/main.c ****   * @retval int
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** int main(void)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END 1 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 139:Core/Src/main.c ****   HAL_Init();
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END Init */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /tmp/ccrYMPR3.s 			page 4


 146:Core/Src/main.c ****   //SystemClock_Config();
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 149:Core/Src/main.c ****   /* INITIALIZE TINYUSB */
 150:Core/Src/main.c ****   board_init();
 151:Core/Src/main.c ****   //tusb_init();
 152:Core/Src/main.c ****   /* USER CODE END SysInit */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Initialize all configured peripherals */
 155:Core/Src/main.c ****   MX_GPIO_Init();
 156:Core/Src/main.c ****   MX_DMA_Init();
 157:Core/Src/main.c ****   MX_SPI1_Init();
 158:Core/Src/main.c ****   MX_I2C1_Init();
 159:Core/Src/main.c ****   MX_SPI2_Init();
 160:Core/Src/main.c ****   MX_USART2_UART_Init();
 161:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* INITIALIZE TINYUSB */
 164:Core/Src/main.c ****   //board_init();
 165:Core/Src/main.c ****   tusb_init();
 166:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   // initialize transmit buffer for test case
 169:Core/Src/main.c ****   // START BIT
 170:Core/Src/main.c ****   SPI_TX_Buffer[0] = 0b00000001;
 171:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 172:Core/Src/main.c ****   SPI_TX_Buffer[1] = 0b10000000; // single ended, ch0 (top 4 bits)
 173:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 174:Core/Src/main.c ****   SPI_TX_Buffer[2] = 0b00000000;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   // set slave address of i2c device
 177:Core/Src/main.c ****   uint8_t slave_address = 0b01011000;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   //reset dac registers
 180:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 181:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 182:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 183:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   int octave_num = 2;
 186:Core/Src/main.c ****   bool flag1 = false;
 187:Core/Src/main.c ****   bool flag2 = false;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   // MIDI == 0 , DAC == 1
 190:Core/Src/main.c ****   bool output_state = 0;
 191:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 192:Core/Src/main.c ****   //volatile int PA_2_VAL = 0;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /*
 195:Core/Src/main.c ****   I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 
 196:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 197:Core/Src/main.c ****   I2C_TX_Buffer[0] = 0b00010000; // send command byte, select OUT0
 198:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   //I2C_TX_Buffer[0] = slave_address; // set slave address to AD0 -- put in header file!
 202:Core/Src/main.c ****   //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
ARM GAS  /tmp/ccrYMPR3.s 			page 5


 203:Core/Src/main.c ****   //HAL_Delay(100);
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   //int i = 0;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* TEST CODE FOR MIDI INTERFACE*/
 208:Core/Src/main.c ****   //zero out test ADC buffers
 209:Core/Src/main.c ****   /*
 210:Core/Src/main.c ****   for(int i = 0;i<12;i++){
 211:Core/Src/main.c ****     ADC1_VAL_TEST[i] = 0x0;
 212:Core/Src/main.c ****     ADC2_VAL_TEST[i] = 0x0;
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   int j = 0;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END 2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* Infinite loop */
 221:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 222:Core/Src/main.c ****   while (1) 
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     // TEST CODE, SET EACH VALUE IN BUFFER ABOVE THRESHOLD FOR NOTE ON
 226:Core/Src/main.c ****     /*
 227:Core/Src/main.c ****     if(j > 7) j = 0;
 228:Core/Src/main.c ****     if(j == 0) {
 229:Core/Src/main.c ****       ADC1_VAL_TEST[j] = 650;
 230:Core/Src/main.c ****       ADC1_VAL_TEST[j+1] = 650;
 231:Core/Src/main.c ****       ADC1_VAL_TEST[7] = 0;
 232:Core/Src/main.c ****     }
 233:Core/Src/main.c ****     else {
 234:Core/Src/main.c ****       ADC1_VAL_TEST[j] = 650;
 235:Core/Src/main.c ****       ADC1_VAL_TEST[j+1] = 650;
 236:Core/Src/main.c ****       ADC1_VAL_TEST[j-1] = 0;
 237:Core/Src/main.c ****     }
 238:Core/Src/main.c ****     j = j+1;
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****     READ_KEYPRESS(ADC1_VAL_TEST,ADC2_VAL_TEST);
 241:Core/Src/main.c ****     tud_task(); // tinyusb device task
 242:Core/Src/main.c ****     MIDI_TASK(octave_num);
 243:Core/Src/main.c ****     */
 244:Core/Src/main.c ****     //HAL_Delay(1000);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     //PA_1_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_1);
 247:Core/Src/main.c ****     //PA_2_VAL = HAL_GPIO_ReadPin (GPIOA, GPIO_PIN_2);
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****     tud_task(); // tinyusb device task
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) && !flag1){
 252:Core/Src/main.c ****       octave_num = octave_num + 1;
 253:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 254:Core/Src/main.c ****       flag1 = true;
 255:Core/Src/main.c ****     }
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1)) flag1 = false;
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) && !flag2){
ARM GAS  /tmp/ccrYMPR3.s 			page 6


 260:Core/Src/main.c ****       octave_num = octave_num - 1;
 261:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 262:Core/Src/main.c ****       flag2 = true;
 263:Core/Src/main.c ****     }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2)) flag2 = false;
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****     // SPI ADC TEST (IN BLOCKING MODE)
 268:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 269:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 270:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 271:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_RESET);
 272:Core/Src/main.c ****     // one full duplex interaction
 273:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 274:Core/Src/main.c ****     // now need to parse data
 275:Core/Src/main.c ****     ADC1_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 276:Core/Src/main.c ****     // default CS to be high
 277:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 278:Core/Src/main.c ****     //if(i == 7) i = 0;
 279:Core/Src/main.c ****     //else i++; 
 280:Core/Src/main.c ****     }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     for (int i = 0; i < 8; i++) {
 283:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 284:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 285:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_RESET);
 286:Core/Src/main.c ****     // one full duplex interaction
 287:Core/Src/main.c ****     HAL_SPI_TransmitReceive (&hspi1, SPI_TX_Buffer, SPI_RX_Buffer, 3, 1000);
 288:Core/Src/main.c ****     // now need to parse data
 289:Core/Src/main.c ****     ADC2_VAL[i] = (((SPI_RX_Buffer[1]&0x03)<<8)|SPI_RX_Buffer[2]);
 290:Core/Src/main.c ****     // default CS to be high
 291:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 292:Core/Src/main.c ****     }
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     /* CHECK OUTPUT SWITCH, SEND 0x00 from DAC if in MIDI mode*/
 295:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(GPIOE, GPIO_PIN_8)){
 296:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 297:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 298:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 299:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 300:Core/Src/main.c ****     }
 301:Core/Src/main.c ****     /* EVENTUALLY should send DAC = 0 (SET GATE also eventually) AND midi signal */
 302:Core/Src/main.c ****     else{
 303:Core/Src/main.c ****       I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 304:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 305:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 306:Core/Src/main.c ****       /* CODE BELOW SHOULD BE GOOD, JUST COMMENTED OUT FOR TESTING PURPOSES */
 307:Core/Src/main.c ****       READ_KEYPRESS(ADC1_VAL,ADC2_VAL);
 308:Core/Src/main.c ****       MIDI_TASK(octave_num);
 309:Core/Src/main.c ****     }
 310:Core/Src/main.c ****     /* I2C protocol test -- move test cases to auxiliary files */
 311:Core/Src/main.c ****     
 312:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 313:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0xFF; // data byte, full VREF
 314:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 315:Core/Src/main.c ****     //HAL_Delay(1000);
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccrYMPR3.s 			page 7


 317:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 318:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x80; // data byte, half VREF
 319:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 320:Core/Src/main.c ****     //HAL_Delay(1000);
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****     //I2C_TX_Buffer[0] = 0x0; // command byte, select OUT0
 323:Core/Src/main.c ****     //I2C_TX_Buffer[1] = 0x0; // data byte, GND
 324:Core/Src/main.c ****     //HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 325:Core/Src/main.c ****     //HAL_Delay(1000);
 326:Core/Src/main.c ****     
 327:Core/Src/main.c ****     //tud_task(); // tinyusb device task
 328:Core/Src/main.c ****     //MIDI_TASK();
 329:Core/Src/main.c ****     //midi_task();
 330:Core/Src/main.c ****     //HAL_Delay(1000);
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     /* USER CODE END WHILE */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   /* USER CODE END 3 */
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /**
 340:Core/Src/main.c ****   * @brief System Clock Configuration
 341:Core/Src/main.c ****   * @retval None
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c **** void SystemClock_Config(void)
 344:Core/Src/main.c **** {
 345:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 346:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 356:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 359:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 360:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 361:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 363:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 364:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 365:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 366:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 367:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 368:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 369:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****     Error_Handler();
 372:Core/Src/main.c ****   }
 373:Core/Src/main.c **** 
ARM GAS  /tmp/ccrYMPR3.s 			page 8


 374:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 375:Core/Src/main.c ****   */
 376:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 377:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 378:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 379:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 380:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 381:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c **** }
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** /**
 390:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 391:Core/Src/main.c ****   * @param None
 392:Core/Src/main.c ****   * @retval None
 393:Core/Src/main.c ****   */
 394:Core/Src/main.c **** static void MX_I2C1_Init(void)
 395:Core/Src/main.c **** {
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 404:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 405:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 406:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 407:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 408:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 409:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 410:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 411:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 412:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 413:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     Error_Handler();
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /** Configure Analogue filter
 419:Core/Src/main.c ****   */
 420:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****     Error_Handler();
 423:Core/Src/main.c ****   }
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /** Configure Digital filter
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  /tmp/ccrYMPR3.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /**
 438:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 439:Core/Src/main.c ****   * @param None
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** static void MX_SPI1_Init(void)
 443:Core/Src/main.c **** {
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 452:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 453:Core/Src/main.c ****   hspi1.Instance = SPI1;
 454:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 455:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 456:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 457:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 458:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 459:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 460:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 461:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 462:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 463:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 464:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 465:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 466:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 467:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****     Error_Handler();
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** /**
 478:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 479:Core/Src/main.c ****   * @param None
 480:Core/Src/main.c ****   * @retval None
 481:Core/Src/main.c ****   */
 482:Core/Src/main.c **** static void MX_SPI2_Init(void)
 483:Core/Src/main.c **** {
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
ARM GAS  /tmp/ccrYMPR3.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 492:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 493:Core/Src/main.c ****   hspi2.Instance = SPI2;
 494:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 495:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 496:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 497:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 498:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 499:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 500:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 501:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 502:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 503:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 504:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 505:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 506:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 507:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** }
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** /**
 518:Core/Src/main.c ****   * @brief USART2 Initialization Function
 519:Core/Src/main.c ****   * @param None
 520:Core/Src/main.c ****   * @retval None
 521:Core/Src/main.c ****   */
 522:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 523:Core/Src/main.c **** {
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 532:Core/Src/main.c ****   huart2.Instance = USART2;
 533:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 534:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 535:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 536:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 537:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 538:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 539:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 540:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 541:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 542:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 543:Core/Src/main.c ****   {
 544:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccrYMPR3.s 			page 11


 545:Core/Src/main.c ****   }
 546:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** }
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /**
 553:Core/Src/main.c ****   * Enable DMA controller clock
 554:Core/Src/main.c ****   */
 555:Core/Src/main.c **** static void MX_DMA_Init(void)
 556:Core/Src/main.c **** {
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* DMA controller clock enable */
 559:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* DMA interrupt init */
 562:Core/Src/main.c ****   /* DMA1_Channel2_IRQn interrupt configuration */
 563:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_IRQn, 0, 0);
 564:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 565:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 566:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 567:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 568:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 569:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 570:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** }
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /**
 575:Core/Src/main.c ****   * @brief GPIO Initialization Function
 576:Core/Src/main.c ****   * @param None
 577:Core/Src/main.c ****   * @retval None
 578:Core/Src/main.c ****   */
 579:Core/Src/main.c **** static void MX_GPIO_Init(void)
 580:Core/Src/main.c **** {
  28              		.loc 1 580 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8DB0     		sub	sp, sp, #52
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
 581:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 581 3 view .LVU1
ARM GAS  /tmp/ccrYMPR3.s 			page 12


  48              		.loc 1 581 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 584:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 584 3 is_stmt 1 view .LVU3
  56              	.LBB31:
  57              		.loc 1 584 3 view .LVU4
  58              		.loc 1 584 3 view .LVU5
  59 0012 AD4B     		ldr	r3, .L3
  60 0014 DA6C     		ldr	r2, [r3, #76]
  61 0016 42F01002 		orr	r2, r2, #16
  62 001a DA64     		str	r2, [r3, #76]
  63              		.loc 1 584 3 view .LVU6
  64 001c DA6C     		ldr	r2, [r3, #76]
  65 001e 02F01002 		and	r2, r2, #16
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 584 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE31:
  70              		.loc 1 584 3 view .LVU8
 585:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  71              		.loc 1 585 3 view .LVU9
  72              	.LBB32:
  73              		.loc 1 585 3 view .LVU10
  74              		.loc 1 585 3 view .LVU11
  75 0026 DA6C     		ldr	r2, [r3, #76]
  76 0028 42F00402 		orr	r2, r2, #4
  77 002c DA64     		str	r2, [r3, #76]
  78              		.loc 1 585 3 view .LVU12
  79 002e DA6C     		ldr	r2, [r3, #76]
  80 0030 02F00402 		and	r2, r2, #4
  81 0034 0292     		str	r2, [sp, #8]
  82              		.loc 1 585 3 view .LVU13
  83 0036 029A     		ldr	r2, [sp, #8]
  84              	.LBE32:
  85              		.loc 1 585 3 view .LVU14
 586:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  86              		.loc 1 586 3 view .LVU15
  87              	.LBB33:
  88              		.loc 1 586 3 view .LVU16
  89              		.loc 1 586 3 view .LVU17
  90 0038 DA6C     		ldr	r2, [r3, #76]
  91 003a 42F08002 		orr	r2, r2, #128
  92 003e DA64     		str	r2, [r3, #76]
  93              		.loc 1 586 3 view .LVU18
  94 0040 DA6C     		ldr	r2, [r3, #76]
  95 0042 02F08002 		and	r2, r2, #128
  96 0046 0392     		str	r2, [sp, #12]
  97              		.loc 1 586 3 view .LVU19
  98 0048 039A     		ldr	r2, [sp, #12]
  99              	.LBE33:
ARM GAS  /tmp/ccrYMPR3.s 			page 13


 100              		.loc 1 586 3 view .LVU20
 587:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 101              		.loc 1 587 3 view .LVU21
 102              	.LBB34:
 103              		.loc 1 587 3 view .LVU22
 104              		.loc 1 587 3 view .LVU23
 105 004a DA6C     		ldr	r2, [r3, #76]
 106 004c 42F00102 		orr	r2, r2, #1
 107 0050 DA64     		str	r2, [r3, #76]
 108              		.loc 1 587 3 view .LVU24
 109 0052 DA6C     		ldr	r2, [r3, #76]
 110 0054 02F00102 		and	r2, r2, #1
 111 0058 0492     		str	r2, [sp, #16]
 112              		.loc 1 587 3 view .LVU25
 113 005a 049A     		ldr	r2, [sp, #16]
 114              	.LBE34:
 115              		.loc 1 587 3 view .LVU26
 588:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 116              		.loc 1 588 3 view .LVU27
 117              	.LBB35:
 118              		.loc 1 588 3 view .LVU28
 119              		.loc 1 588 3 view .LVU29
 120 005c DA6C     		ldr	r2, [r3, #76]
 121 005e 42F00202 		orr	r2, r2, #2
 122 0062 DA64     		str	r2, [r3, #76]
 123              		.loc 1 588 3 view .LVU30
 124 0064 DA6C     		ldr	r2, [r3, #76]
 125 0066 02F00202 		and	r2, r2, #2
 126 006a 0592     		str	r2, [sp, #20]
 127              		.loc 1 588 3 view .LVU31
 128 006c 059A     		ldr	r2, [sp, #20]
 129              	.LBE35:
 130              		.loc 1 588 3 view .LVU32
 589:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 131              		.loc 1 589 3 view .LVU33
 132              	.LBB36:
 133              		.loc 1 589 3 view .LVU34
 134              		.loc 1 589 3 view .LVU35
 135 006e DA6C     		ldr	r2, [r3, #76]
 136 0070 42F00802 		orr	r2, r2, #8
 137 0074 DA64     		str	r2, [r3, #76]
 138              		.loc 1 589 3 view .LVU36
 139 0076 DB6C     		ldr	r3, [r3, #76]
 140 0078 03F00803 		and	r3, r3, #8
 141 007c 0693     		str	r3, [sp, #24]
 142              		.loc 1 589 3 view .LVU37
 143 007e 069B     		ldr	r3, [sp, #24]
 144              	.LBE36:
 145              		.loc 1 589 3 view .LVU38
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 592:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, AUDIO_RST_Pin|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 146              		.loc 1 592 3 view .LVU39
 147 0080 924F     		ldr	r7, .L3+4
 148 0082 2246     		mov	r2, r4
 149 0084 41F60961 		movw	r1, #7689
 150 0088 3846     		mov	r0, r7
ARM GAS  /tmp/ccrYMPR3.s 			page 14


 151 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL0:
 593:Core/Src/main.c ****                           |GPIO_PIN_12|XL_CS_Pin, GPIO_PIN_RESET);
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 596:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 153              		.loc 1 596 3 view .LVU40
 154 008e 2246     		mov	r2, r4
 155 0090 2021     		movs	r1, #32
 156 0092 4FF09040 		mov	r0, #1207959552
 157 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 599:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LD_R_Pin|M3V3_REG_ON_Pin, GPIO_PIN_RESET);
 159              		.loc 1 599 3 view .LVU41
 160 009a DFF83882 		ldr	r8, .L3+12
 161 009e 2246     		mov	r2, r4
 162 00a0 0C21     		movs	r1, #12
 163 00a2 4046     		mov	r0, r8
 164 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 602:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_VBUS_GPIO_Port, OTG_FS_VBUS_Pin, GPIO_PIN_RESET);
 166              		.loc 1 602 3 view .LVU42
 167 00a8 DFF82CA2 		ldr	r10, .L3+16
 168 00ac 2246     		mov	r2, r4
 169 00ae 4FF40061 		mov	r1, #2048
 170 00b2 5046     		mov	r0, r10
 171 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL3:
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 605:Core/Src/main.c ****   HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_RESET);
 173              		.loc 1 605 3 view .LVU43
 174 00b8 2246     		mov	r2, r4
 175 00ba 8021     		movs	r1, #128
 176 00bc 8448     		ldr	r0, .L3+8
 177 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL4:
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /*Configure GPIO pins : SAI1_MCK_Pin SAI1_FS_Pin SAI1_SCK_Pin SAI1_SD_Pin
 608:Core/Src/main.c ****                            AUDIO_DIN_Pin */
 609:Core/Src/main.c ****   GPIO_InitStruct.Pin = SAI1_MCK_Pin|SAI1_FS_Pin|SAI1_SCK_Pin|SAI1_SD_Pin
 179              		.loc 1 609 3 view .LVU44
 180              		.loc 1 609 23 is_stmt 0 view .LVU45
 181 00c2 F423     		movs	r3, #244
 182 00c4 0793     		str	r3, [sp, #28]
 610:Core/Src/main.c ****                           |AUDIO_DIN_Pin;
 611:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 183              		.loc 1 611 3 is_stmt 1 view .LVU46
 184              		.loc 1 611 24 is_stmt 0 view .LVU47
 185 00c6 0226     		movs	r6, #2
 186 00c8 0896     		str	r6, [sp, #32]
 612:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 612 3 is_stmt 1 view .LVU48
ARM GAS  /tmp/ccrYMPR3.s 			page 15


 188              		.loc 1 612 24 is_stmt 0 view .LVU49
 189 00ca 0994     		str	r4, [sp, #36]
 613:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 190              		.loc 1 613 3 is_stmt 1 view .LVU50
 191              		.loc 1 613 25 is_stmt 0 view .LVU51
 192 00cc 4FF00309 		mov	r9, #3
 193 00d0 CDF82890 		str	r9, [sp, #40]
 614:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF13_SAI1;
 194              		.loc 1 614 3 is_stmt 1 view .LVU52
 195              		.loc 1 614 29 is_stmt 0 view .LVU53
 196 00d4 0D23     		movs	r3, #13
 197 00d6 0B93     		str	r3, [sp, #44]
 615:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 198              		.loc 1 615 3 is_stmt 1 view .LVU54
 199 00d8 07A9     		add	r1, sp, #28
 200 00da 3846     		mov	r0, r7
 201 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL5:
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /*Configure GPIO pin : AUDIO_RST_Pin */
 618:Core/Src/main.c ****   GPIO_InitStruct.Pin = AUDIO_RST_Pin;
 203              		.loc 1 618 3 view .LVU55
 204              		.loc 1 618 23 is_stmt 0 view .LVU56
 205 00e0 0823     		movs	r3, #8
 206 00e2 0793     		str	r3, [sp, #28]
 619:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 619 3 is_stmt 1 view .LVU57
 208              		.loc 1 619 24 is_stmt 0 view .LVU58
 209 00e4 0125     		movs	r5, #1
 210 00e6 0895     		str	r5, [sp, #32]
 620:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 211              		.loc 1 620 3 is_stmt 1 view .LVU59
 212              		.loc 1 620 24 is_stmt 0 view .LVU60
 213 00e8 0994     		str	r4, [sp, #36]
 621:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 214              		.loc 1 621 3 is_stmt 1 view .LVU61
 215              		.loc 1 621 25 is_stmt 0 view .LVU62
 216 00ea 0A96     		str	r6, [sp, #40]
 622:Core/Src/main.c ****   HAL_GPIO_Init(AUDIO_RST_GPIO_Port, &GPIO_InitStruct);
 217              		.loc 1 622 3 is_stmt 1 view .LVU63
 218 00ec 07A9     		add	r1, sp, #28
 219 00ee 3846     		mov	r0, r7
 220 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL6:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /*Configure GPIO pins : MFX_IRQ_OUT_Pin OTG_FS_OverCurrent_Pin */
 625:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_IRQ_OUT_Pin|OTG_FS_OverCurrent_Pin;
 222              		.loc 1 625 3 view .LVU64
 223              		.loc 1 625 23 is_stmt 0 view .LVU65
 224 00f4 4FF41053 		mov	r3, #9216
 225 00f8 0793     		str	r3, [sp, #28]
 626:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 226              		.loc 1 626 3 is_stmt 1 view .LVU66
 227              		.loc 1 626 24 is_stmt 0 view .LVU67
 228 00fa 4FF4901B 		mov	fp, #1179648
 229 00fe CDF820B0 		str	fp, [sp, #32]
 627:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccrYMPR3.s 			page 16


 230              		.loc 1 627 3 is_stmt 1 view .LVU68
 231              		.loc 1 627 24 is_stmt 0 view .LVU69
 232 0102 0994     		str	r4, [sp, #36]
 628:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 233              		.loc 1 628 3 is_stmt 1 view .LVU70
 234 0104 07A9     		add	r1, sp, #28
 235 0106 5046     		mov	r0, r10
 236 0108 FFF7FEFF 		bl	HAL_GPIO_Init
 237              	.LVL7:
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /*Configure GPIO pins : PC0 MAG_INT_Pin MAG_DRDY_Pin PC6
 631:Core/Src/main.c ****                            PC7 PC8 PC9 */
 632:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|MAG_INT_Pin|MAG_DRDY_Pin|GPIO_PIN_6
 238              		.loc 1 632 3 view .LVU71
 239              		.loc 1 632 23 is_stmt 0 view .LVU72
 240 010c 40F2C733 		movw	r3, #967
 241 0110 0793     		str	r3, [sp, #28]
 633:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 634:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 242              		.loc 1 634 3 is_stmt 1 view .LVU73
 243              		.loc 1 634 24 is_stmt 0 view .LVU74
 244 0112 0894     		str	r4, [sp, #32]
 635:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 635 3 is_stmt 1 view .LVU75
 246              		.loc 1 635 24 is_stmt 0 view .LVU76
 247 0114 0994     		str	r4, [sp, #36]
 636:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 248              		.loc 1 636 3 is_stmt 1 view .LVU77
 249 0116 07A9     		add	r1, sp, #28
 250 0118 5046     		mov	r0, r10
 251 011a FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL8:
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /*Configure GPIO pins : VLCD_Pin SEG22_Pin SEG1_Pin */
 639:Core/Src/main.c ****   GPIO_InitStruct.Pin = VLCD_Pin|SEG22_Pin|SEG1_Pin;
 253              		.loc 1 639 3 view .LVU78
 254              		.loc 1 639 23 is_stmt 0 view .LVU79
 255 011e 3823     		movs	r3, #56
 256 0120 0793     		str	r3, [sp, #28]
 640:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 257              		.loc 1 640 3 is_stmt 1 view .LVU80
 258              		.loc 1 640 24 is_stmt 0 view .LVU81
 259 0122 0896     		str	r6, [sp, #32]
 641:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 641 3 is_stmt 1 view .LVU82
 261              		.loc 1 641 24 is_stmt 0 view .LVU83
 262 0124 0994     		str	r4, [sp, #36]
 642:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 263              		.loc 1 642 3 is_stmt 1 view .LVU84
 264              		.loc 1 642 25 is_stmt 0 view .LVU85
 265 0126 0A94     		str	r4, [sp, #40]
 643:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 266              		.loc 1 643 3 is_stmt 1 view .LVU86
 267              		.loc 1 643 29 is_stmt 0 view .LVU87
 268 0128 0B23     		movs	r3, #11
 269 012a 0B93     		str	r3, [sp, #44]
 644:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  /tmp/ccrYMPR3.s 			page 17


 270              		.loc 1 644 3 is_stmt 1 view .LVU88
 271 012c 07A9     		add	r1, sp, #28
 272 012e 5046     		mov	r0, r10
 273 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 274              	.LVL9:
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 */
 647:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 275              		.loc 1 647 3 view .LVU89
 276              		.loc 1 647 23 is_stmt 0 view .LVU90
 277 0134 0723     		movs	r3, #7
 278 0136 0793     		str	r3, [sp, #28]
 648:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 279              		.loc 1 648 3 is_stmt 1 view .LVU91
 280              		.loc 1 648 24 is_stmt 0 view .LVU92
 281 0138 0894     		str	r4, [sp, #32]
 649:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 282              		.loc 1 649 3 is_stmt 1 view .LVU93
 283              		.loc 1 649 24 is_stmt 0 view .LVU94
 284 013a 0995     		str	r5, [sp, #36]
 650:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 285              		.loc 1 650 3 is_stmt 1 view .LVU95
 286 013c 07A9     		add	r1, sp, #28
 287 013e 4FF09040 		mov	r0, #1207959552
 288 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL10:
 651:Core/Src/main.c **** 
 652:Core/Src/main.c ****   /*Configure GPIO pin : JOY_UP_Pin */
 653:Core/Src/main.c ****   GPIO_InitStruct.Pin = JOY_UP_Pin;
 290              		.loc 1 653 3 view .LVU96
 291              		.loc 1 653 23 is_stmt 0 view .LVU97
 292 0146 0823     		movs	r3, #8
 293 0148 0793     		str	r3, [sp, #28]
 654:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 294              		.loc 1 654 3 is_stmt 1 view .LVU98
 295              		.loc 1 654 24 is_stmt 0 view .LVU99
 296 014a 0894     		str	r4, [sp, #32]
 655:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 297              		.loc 1 655 3 is_stmt 1 view .LVU100
 298              		.loc 1 655 24 is_stmt 0 view .LVU101
 299 014c 0996     		str	r6, [sp, #36]
 656:Core/Src/main.c ****   HAL_GPIO_Init(JOY_UP_GPIO_Port, &GPIO_InitStruct);
 300              		.loc 1 656 3 is_stmt 1 view .LVU102
 301 014e 07A9     		add	r1, sp, #28
 302 0150 4FF09040 		mov	r0, #1207959552
 303 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL11:
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   /*Configure GPIO pin : MFX_WAKEUP_Pin */
 659:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_WAKEUP_Pin;
 305              		.loc 1 659 3 view .LVU103
 306              		.loc 1 659 23 is_stmt 0 view .LVU104
 307 0158 1023     		movs	r3, #16
 308 015a 0793     		str	r3, [sp, #28]
 660:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 309              		.loc 1 660 3 is_stmt 1 view .LVU105
 310              		.loc 1 660 24 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccrYMPR3.s 			page 18


 311 015c CDF820B0 		str	fp, [sp, #32]
 661:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 312              		.loc 1 661 3 is_stmt 1 view .LVU107
 313              		.loc 1 661 24 is_stmt 0 view .LVU108
 314 0160 0994     		str	r4, [sp, #36]
 662:Core/Src/main.c ****   HAL_GPIO_Init(MFX_WAKEUP_GPIO_Port, &GPIO_InitStruct);
 315              		.loc 1 662 3 is_stmt 1 view .LVU109
 316 0162 07A9     		add	r1, sp, #28
 317 0164 4FF09040 		mov	r0, #1207959552
 318 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL12:
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 665:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 320              		.loc 1 665 3 view .LVU110
 321              		.loc 1 665 23 is_stmt 0 view .LVU111
 322 016c 2023     		movs	r3, #32
 323 016e 0793     		str	r3, [sp, #28]
 666:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 324              		.loc 1 666 3 is_stmt 1 view .LVU112
 325              		.loc 1 666 24 is_stmt 0 view .LVU113
 326 0170 0895     		str	r5, [sp, #32]
 667:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 667 3 is_stmt 1 view .LVU114
 328              		.loc 1 667 24 is_stmt 0 view .LVU115
 329 0172 0994     		str	r4, [sp, #36]
 668:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 330              		.loc 1 668 3 is_stmt 1 view .LVU116
 331              		.loc 1 668 25 is_stmt 0 view .LVU117
 332 0174 0A94     		str	r4, [sp, #40]
 669:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 333              		.loc 1 669 3 is_stmt 1 view .LVU118
 334 0176 07A9     		add	r1, sp, #28
 335 0178 4FF09040 		mov	r0, #1207959552
 336 017c FFF7FEFF 		bl	HAL_GPIO_Init
 337              	.LVL13:
 670:Core/Src/main.c **** 
 671:Core/Src/main.c ****   /*Configure GPIO pins : SEG21_Pin SEG2_Pin SEG20_Pin SEG3_Pin
 672:Core/Src/main.c ****                            SEG19_Pin SEG4_Pin SEG11_Pin SEG12_Pin
 673:Core/Src/main.c ****                            COM3_Pin */
 674:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG21_Pin|SEG2_Pin|SEG20_Pin|SEG3_Pin
 338              		.loc 1 674 3 view .LVU119
 339              		.loc 1 674 23 is_stmt 0 view .LVU120
 340 0180 4FF23323 		movw	r3, #62003
 341 0184 0793     		str	r3, [sp, #28]
 675:Core/Src/main.c ****                           |SEG19_Pin|SEG4_Pin|SEG11_Pin|SEG12_Pin
 676:Core/Src/main.c ****                           |COM3_Pin;
 677:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 342              		.loc 1 677 3 is_stmt 1 view .LVU121
 343              		.loc 1 677 24 is_stmt 0 view .LVU122
 344 0186 0896     		str	r6, [sp, #32]
 678:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 678 3 is_stmt 1 view .LVU123
 346              		.loc 1 678 24 is_stmt 0 view .LVU124
 347 0188 0994     		str	r4, [sp, #36]
 679:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 348              		.loc 1 679 3 is_stmt 1 view .LVU125
ARM GAS  /tmp/ccrYMPR3.s 			page 19


 349              		.loc 1 679 25 is_stmt 0 view .LVU126
 350 018a 0A94     		str	r4, [sp, #40]
 680:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 351              		.loc 1 680 3 is_stmt 1 view .LVU127
 352              		.loc 1 680 29 is_stmt 0 view .LVU128
 353 018c 0B23     		movs	r3, #11
 354 018e 0B93     		str	r3, [sp, #44]
 681:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 355              		.loc 1 681 3 is_stmt 1 view .LVU129
 356 0190 07A9     		add	r1, sp, #28
 357 0192 4046     		mov	r0, r8
 358 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL14:
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   /*Configure GPIO pin : LD_R_Pin */
 684:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD_R_Pin;
 360              		.loc 1 684 3 view .LVU130
 361              		.loc 1 684 23 is_stmt 0 view .LVU131
 362 0198 0423     		movs	r3, #4
 363 019a 0793     		str	r3, [sp, #28]
 685:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 364              		.loc 1 685 3 is_stmt 1 view .LVU132
 365              		.loc 1 685 24 is_stmt 0 view .LVU133
 366 019c 0895     		str	r5, [sp, #32]
 686:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 367              		.loc 1 686 3 is_stmt 1 view .LVU134
 368              		.loc 1 686 24 is_stmt 0 view .LVU135
 369 019e 0995     		str	r5, [sp, #36]
 687:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 370              		.loc 1 687 3 is_stmt 1 view .LVU136
 371              		.loc 1 687 25 is_stmt 0 view .LVU137
 372 01a0 CDF82890 		str	r9, [sp, #40]
 688:Core/Src/main.c ****   HAL_GPIO_Init(LD_R_GPIO_Port, &GPIO_InitStruct);
 373              		.loc 1 688 3 is_stmt 1 view .LVU138
 374 01a4 07A9     		add	r1, sp, #28
 375 01a6 4046     		mov	r0, r8
 376 01a8 FFF7FEFF 		bl	HAL_GPIO_Init
 377              	.LVL15:
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /*Configure GPIO pin : PE8 */
 691:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 378              		.loc 1 691 3 view .LVU139
 379              		.loc 1 691 23 is_stmt 0 view .LVU140
 380 01ac 4FF48073 		mov	r3, #256
 381 01b0 0793     		str	r3, [sp, #28]
 692:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 382              		.loc 1 692 3 is_stmt 1 view .LVU141
 383              		.loc 1 692 24 is_stmt 0 view .LVU142
 384 01b2 0894     		str	r4, [sp, #32]
 693:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 385              		.loc 1 693 3 is_stmt 1 view .LVU143
 386              		.loc 1 693 24 is_stmt 0 view .LVU144
 387 01b4 0995     		str	r5, [sp, #36]
 694:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 388              		.loc 1 694 3 is_stmt 1 view .LVU145
 389 01b6 07A9     		add	r1, sp, #28
 390 01b8 3846     		mov	r0, r7
ARM GAS  /tmp/ccrYMPR3.s 			page 20


 391 01ba FFF7FEFF 		bl	HAL_GPIO_Init
 392              	.LVL16:
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****   /*Configure GPIO pins : PE9 PE10 PE11 PE12
 697:Core/Src/main.c ****                            XL_CS_Pin */
 698:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12
 393              		.loc 1 698 3 view .LVU146
 394              		.loc 1 698 23 is_stmt 0 view .LVU147
 395 01be 41F60163 		movw	r3, #7681
 396 01c2 0793     		str	r3, [sp, #28]
 699:Core/Src/main.c ****                           |XL_CS_Pin;
 700:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 397              		.loc 1 700 3 is_stmt 1 view .LVU148
 398              		.loc 1 700 24 is_stmt 0 view .LVU149
 399 01c4 0895     		str	r5, [sp, #32]
 701:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 400              		.loc 1 701 3 is_stmt 1 view .LVU150
 401              		.loc 1 701 24 is_stmt 0 view .LVU151
 402 01c6 0994     		str	r4, [sp, #36]
 702:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 403              		.loc 1 702 3 is_stmt 1 view .LVU152
 404              		.loc 1 702 25 is_stmt 0 view .LVU153
 405 01c8 0A94     		str	r4, [sp, #40]
 703:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 406              		.loc 1 703 3 is_stmt 1 view .LVU154
 407 01ca 07A9     		add	r1, sp, #28
 408 01cc 3846     		mov	r0, r7
 409 01ce FFF7FEFF 		bl	HAL_GPIO_Init
 410              	.LVL17:
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /*Configure GPIO pins : MFX_I2C_SLC_Pin MFX_I2C_SDA_Pin */
 706:Core/Src/main.c ****   GPIO_InitStruct.Pin = MFX_I2C_SLC_Pin|MFX_I2C_SDA_Pin;
 411              		.loc 1 706 3 view .LVU155
 412              		.loc 1 706 23 is_stmt 0 view .LVU156
 413 01d2 4FF44063 		mov	r3, #3072
 414 01d6 0793     		str	r3, [sp, #28]
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 415              		.loc 1 707 3 is_stmt 1 view .LVU157
 416              		.loc 1 707 24 is_stmt 0 view .LVU158
 417 01d8 1223     		movs	r3, #18
 418 01da 0893     		str	r3, [sp, #32]
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 708 3 is_stmt 1 view .LVU159
 420              		.loc 1 708 24 is_stmt 0 view .LVU160
 421 01dc 0994     		str	r4, [sp, #36]
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 422              		.loc 1 709 3 is_stmt 1 view .LVU161
 423              		.loc 1 709 25 is_stmt 0 view .LVU162
 424 01de CDF82890 		str	r9, [sp, #40]
 710:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 425              		.loc 1 710 3 is_stmt 1 view .LVU163
 426              		.loc 1 710 29 is_stmt 0 view .LVU164
 427 01e2 0423     		movs	r3, #4
 428 01e4 0B93     		str	r3, [sp, #44]
 711:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 429              		.loc 1 711 3 is_stmt 1 view .LVU165
 430 01e6 07A9     		add	r1, sp, #28
ARM GAS  /tmp/ccrYMPR3.s 			page 21


 431 01e8 4046     		mov	r0, r8
 432 01ea FFF7FEFF 		bl	HAL_GPIO_Init
 433              	.LVL18:
 712:Core/Src/main.c **** 
 713:Core/Src/main.c ****   /*Configure GPIO pins : SEG18_Pin SEG5_Pin SEG17_Pin SEG6_Pin
 714:Core/Src/main.c ****                            SEG16_Pin SEG7_Pin SEG15_Pin SEG8_Pin */
 715:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG18_Pin|SEG5_Pin|SEG17_Pin|SEG6_Pin
 434              		.loc 1 715 3 view .LVU166
 435              		.loc 1 715 23 is_stmt 0 view .LVU167
 436 01ee 4FF47F43 		mov	r3, #65280
 437 01f2 0793     		str	r3, [sp, #28]
 716:Core/Src/main.c ****                           |SEG16_Pin|SEG7_Pin|SEG15_Pin|SEG8_Pin;
 717:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 438              		.loc 1 717 3 is_stmt 1 view .LVU168
 439              		.loc 1 717 24 is_stmt 0 view .LVU169
 440 01f4 0896     		str	r6, [sp, #32]
 718:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 441              		.loc 1 718 3 is_stmt 1 view .LVU170
 442              		.loc 1 718 24 is_stmt 0 view .LVU171
 443 01f6 0994     		str	r4, [sp, #36]
 719:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 444              		.loc 1 719 3 is_stmt 1 view .LVU172
 445              		.loc 1 719 25 is_stmt 0 view .LVU173
 446 01f8 0A94     		str	r4, [sp, #40]
 720:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 447              		.loc 1 720 3 is_stmt 1 view .LVU174
 448              		.loc 1 720 29 is_stmt 0 view .LVU175
 449 01fa 0B23     		movs	r3, #11
 450 01fc 0B93     		str	r3, [sp, #44]
 721:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 451              		.loc 1 721 3 is_stmt 1 view .LVU176
 452 01fe 07A9     		add	r1, sp, #28
 453 0200 3348     		ldr	r0, .L3+8
 454 0202 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL19:
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   /*Configure GPIO pins : COM0_Pin SEG10_Pin */
 724:Core/Src/main.c ****   GPIO_InitStruct.Pin = COM0_Pin|SEG10_Pin;
 456              		.loc 1 724 3 view .LVU177
 457              		.loc 1 724 23 is_stmt 0 view .LVU178
 458 0206 4FF40143 		mov	r3, #33024
 459 020a 0793     		str	r3, [sp, #28]
 725:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 725 3 is_stmt 1 view .LVU179
 461              		.loc 1 725 24 is_stmt 0 view .LVU180
 462 020c 0896     		str	r6, [sp, #32]
 726:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 726 3 is_stmt 1 view .LVU181
 464              		.loc 1 726 24 is_stmt 0 view .LVU182
 465 020e 0994     		str	r4, [sp, #36]
 727:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 727 3 is_stmt 1 view .LVU183
 467              		.loc 1 727 25 is_stmt 0 view .LVU184
 468 0210 0A94     		str	r4, [sp, #40]
 728:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF11_LCD;
 469              		.loc 1 728 3 is_stmt 1 view .LVU185
 470              		.loc 1 728 29 is_stmt 0 view .LVU186
ARM GAS  /tmp/ccrYMPR3.s 			page 22


 471 0212 0B23     		movs	r3, #11
 472 0214 0B93     		str	r3, [sp, #44]
 729:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 473              		.loc 1 729 3 is_stmt 1 view .LVU187
 474 0216 07A9     		add	r1, sp, #28
 475 0218 4FF09040 		mov	r0, #1207959552
 476 021c FFF7FEFF 		bl	HAL_GPIO_Init
 477              	.LVL20:
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****   /*Configure GPIO pin : PA9 */
 732:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 478              		.loc 1 732 3 view .LVU188
 479              		.loc 1 732 23 is_stmt 0 view .LVU189
 480 0220 4FF40073 		mov	r3, #512
 481 0224 0793     		str	r3, [sp, #28]
 733:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 482              		.loc 1 733 3 is_stmt 1 view .LVU190
 483              		.loc 1 733 24 is_stmt 0 view .LVU191
 484 0226 0894     		str	r4, [sp, #32]
 734:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 485              		.loc 1 734 3 is_stmt 1 view .LVU192
 486              		.loc 1 734 24 is_stmt 0 view .LVU193
 487 0228 0994     		str	r4, [sp, #36]
 735:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 488              		.loc 1 735 3 is_stmt 1 view .LVU194
 489 022a 07A9     		add	r1, sp, #28
 490 022c 4FF09040 		mov	r0, #1207959552
 491 0230 FFF7FEFF 		bl	HAL_GPIO_Init
 492              	.LVL21:
 736:Core/Src/main.c **** 
 737:Core/Src/main.c ****   /*Configure GPIO pins : PA10 PA11 PA12 */
 738:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 493              		.loc 1 738 3 view .LVU195
 494              		.loc 1 738 23 is_stmt 0 view .LVU196
 495 0234 4FF4E053 		mov	r3, #7168
 496 0238 0793     		str	r3, [sp, #28]
 739:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 497              		.loc 1 739 3 is_stmt 1 view .LVU197
 498              		.loc 1 739 24 is_stmt 0 view .LVU198
 499 023a 0896     		str	r6, [sp, #32]
 740:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 500              		.loc 1 740 3 is_stmt 1 view .LVU199
 501              		.loc 1 740 24 is_stmt 0 view .LVU200
 502 023c 0994     		str	r4, [sp, #36]
 741:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 503              		.loc 1 741 3 is_stmt 1 view .LVU201
 504              		.loc 1 741 25 is_stmt 0 view .LVU202
 505 023e CDF82890 		str	r9, [sp, #40]
 742:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 506              		.loc 1 742 3 is_stmt 1 view .LVU203
 507              		.loc 1 742 29 is_stmt 0 view .LVU204
 508 0242 0A23     		movs	r3, #10
 509 0244 0B93     		str	r3, [sp, #44]
 743:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 510              		.loc 1 743 3 is_stmt 1 view .LVU205
 511 0246 07A9     		add	r1, sp, #28
 512 0248 4FF09040 		mov	r0, #1207959552
ARM GAS  /tmp/ccrYMPR3.s 			page 23


 513 024c FFF7FEFF 		bl	HAL_GPIO_Init
 514              	.LVL22:
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
 746:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 515              		.loc 1 746 3 view .LVU206
 516              		.loc 1 746 23 is_stmt 0 view .LVU207
 517 0250 4FF40063 		mov	r3, #2048
 518 0254 0793     		str	r3, [sp, #28]
 747:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 519              		.loc 1 747 3 is_stmt 1 view .LVU208
 520              		.loc 1 747 24 is_stmt 0 view .LVU209
 521 0256 0895     		str	r5, [sp, #32]
 748:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 522              		.loc 1 748 3 is_stmt 1 view .LVU210
 523              		.loc 1 748 24 is_stmt 0 view .LVU211
 524 0258 0994     		str	r4, [sp, #36]
 749:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 525              		.loc 1 749 3 is_stmt 1 view .LVU212
 526              		.loc 1 749 25 is_stmt 0 view .LVU213
 527 025a 0A94     		str	r4, [sp, #40]
 750:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 528              		.loc 1 750 3 is_stmt 1 view .LVU214
 529 025c 07A9     		add	r1, sp, #28
 530 025e 5046     		mov	r0, r10
 531 0260 FFF7FEFF 		bl	HAL_GPIO_Init
 532              	.LVL23:
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   /*Configure GPIO pins : EXT_RST_Pin GYRO_INT1_Pin */
 753:Core/Src/main.c ****   GPIO_InitStruct.Pin = EXT_RST_Pin|GYRO_INT1_Pin;
 533              		.loc 1 753 3 view .LVU215
 534              		.loc 1 753 23 is_stmt 0 view .LVU216
 535 0264 0523     		movs	r3, #5
 536 0266 0793     		str	r3, [sp, #28]
 754:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 537              		.loc 1 754 3 is_stmt 1 view .LVU217
 538              		.loc 1 754 24 is_stmt 0 view .LVU218
 539 0268 CDF820B0 		str	fp, [sp, #32]
 755:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 540              		.loc 1 755 3 is_stmt 1 view .LVU219
 541              		.loc 1 755 24 is_stmt 0 view .LVU220
 542 026c 0994     		str	r4, [sp, #36]
 756:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 543              		.loc 1 756 3 is_stmt 1 view .LVU221
 544 026e 07A9     		add	r1, sp, #28
 545 0270 1748     		ldr	r0, .L3+8
 546 0272 FFF7FEFF 		bl	HAL_GPIO_Init
 547              	.LVL24:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_CS_Pin */
 759:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_CS_Pin;
 548              		.loc 1 759 3 view .LVU222
 549              		.loc 1 759 23 is_stmt 0 view .LVU223
 550 0276 8023     		movs	r3, #128
 551 0278 0793     		str	r3, [sp, #28]
 760:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 552              		.loc 1 760 3 is_stmt 1 view .LVU224
ARM GAS  /tmp/ccrYMPR3.s 			page 24


 553              		.loc 1 760 24 is_stmt 0 view .LVU225
 554 027a 0895     		str	r5, [sp, #32]
 761:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 555              		.loc 1 761 3 is_stmt 1 view .LVU226
 556              		.loc 1 761 24 is_stmt 0 view .LVU227
 557 027c 0994     		str	r4, [sp, #36]
 762:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 558              		.loc 1 762 3 is_stmt 1 view .LVU228
 559              		.loc 1 762 25 is_stmt 0 view .LVU229
 560 027e CDF82890 		str	r9, [sp, #40]
 763:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_CS_GPIO_Port, &GPIO_InitStruct);
 561              		.loc 1 763 3 is_stmt 1 view .LVU230
 562 0282 07A9     		add	r1, sp, #28
 563 0284 1248     		ldr	r0, .L3+8
 564 0286 FFF7FEFF 		bl	HAL_GPIO_Init
 565              	.LVL25:
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /*Configure GPIO pin : M3V3_REG_ON_Pin */
 766:Core/Src/main.c ****   GPIO_InitStruct.Pin = M3V3_REG_ON_Pin;
 566              		.loc 1 766 3 view .LVU231
 567              		.loc 1 766 23 is_stmt 0 view .LVU232
 568 028a 0823     		movs	r3, #8
 569 028c 0793     		str	r3, [sp, #28]
 767:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 570              		.loc 1 767 3 is_stmt 1 view .LVU233
 571              		.loc 1 767 24 is_stmt 0 view .LVU234
 572 028e 0895     		str	r5, [sp, #32]
 768:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 573              		.loc 1 768 3 is_stmt 1 view .LVU235
 574              		.loc 1 768 24 is_stmt 0 view .LVU236
 575 0290 0994     		str	r4, [sp, #36]
 769:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 576              		.loc 1 769 3 is_stmt 1 view .LVU237
 577              		.loc 1 769 25 is_stmt 0 view .LVU238
 578 0292 0A94     		str	r4, [sp, #40]
 770:Core/Src/main.c ****   HAL_GPIO_Init(M3V3_REG_ON_GPIO_Port, &GPIO_InitStruct);
 579              		.loc 1 770 3 is_stmt 1 view .LVU239
 580 0294 07A9     		add	r1, sp, #28
 581 0296 4046     		mov	r0, r8
 582 0298 FFF7FEFF 		bl	HAL_GPIO_Init
 583              	.LVL26:
 771:Core/Src/main.c **** 
 772:Core/Src/main.c ****   /*Configure GPIO pin : GYRO_INT2_Pin */
 773:Core/Src/main.c ****   GPIO_InitStruct.Pin = GYRO_INT2_Pin;
 584              		.loc 1 773 3 view .LVU240
 585              		.loc 1 773 23 is_stmt 0 view .LVU241
 586 029c 4FF48073 		mov	r3, #256
 587 02a0 0793     		str	r3, [sp, #28]
 774:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 588              		.loc 1 774 3 is_stmt 1 view .LVU242
 589              		.loc 1 774 24 is_stmt 0 view .LVU243
 590 02a2 CDF820B0 		str	fp, [sp, #32]
 775:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 591              		.loc 1 775 3 is_stmt 1 view .LVU244
 592              		.loc 1 775 24 is_stmt 0 view .LVU245
 593 02a6 0994     		str	r4, [sp, #36]
 776:Core/Src/main.c ****   HAL_GPIO_Init(GYRO_INT2_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccrYMPR3.s 			page 25


 594              		.loc 1 776 3 is_stmt 1 view .LVU246
 595 02a8 07A9     		add	r1, sp, #28
 596 02aa 4046     		mov	r0, r8
 597 02ac FFF7FEFF 		bl	HAL_GPIO_Init
 598              	.LVL27:
 777:Core/Src/main.c **** 
 778:Core/Src/main.c ****   /*Configure GPIO pin : XL_INT_Pin */
 779:Core/Src/main.c ****   GPIO_InitStruct.Pin = XL_INT_Pin;
 599              		.loc 1 779 3 view .LVU247
 600              		.loc 1 779 23 is_stmt 0 view .LVU248
 601 02b0 0796     		str	r6, [sp, #28]
 780:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 602              		.loc 1 780 3 is_stmt 1 view .LVU249
 603              		.loc 1 780 24 is_stmt 0 view .LVU250
 604 02b2 CDF820B0 		str	fp, [sp, #32]
 781:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 605              		.loc 1 781 3 is_stmt 1 view .LVU251
 606              		.loc 1 781 24 is_stmt 0 view .LVU252
 607 02b6 0994     		str	r4, [sp, #36]
 782:Core/Src/main.c ****   HAL_GPIO_Init(XL_INT_GPIO_Port, &GPIO_InitStruct);
 608              		.loc 1 782 3 is_stmt 1 view .LVU253
 609 02b8 07A9     		add	r1, sp, #28
 610 02ba 3846     		mov	r0, r7
 611 02bc FFF7FEFF 		bl	HAL_GPIO_Init
 612              	.LVL28:
 783:Core/Src/main.c **** 
 784:Core/Src/main.c **** }
 613              		.loc 1 784 1 is_stmt 0 view .LVU254
 614 02c0 0DB0     		add	sp, sp, #52
 615              	.LCFI2:
 616              		.cfi_def_cfa_offset 36
 617              		@ sp needed
 618 02c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 619              	.L4:
 620 02c6 00BF     		.align	2
 621              	.L3:
 622 02c8 00100240 		.word	1073876992
 623 02cc 00100048 		.word	1207963648
 624 02d0 000C0048 		.word	1207962624
 625 02d4 00040048 		.word	1207960576
 626 02d8 00080048 		.word	1207961600
 627              		.cfi_endproc
 628              	.LFE213:
 630              		.section	.text.MX_DMA_Init,"ax",%progbits
 631              		.align	1
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	MX_DMA_Init:
 638              	.LFB212:
 556:Core/Src/main.c **** 
 639              		.loc 1 556 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccrYMPR3.s 			page 26


 644              	.LCFI3:
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 14, -4
 647 0002 83B0     		sub	sp, sp, #12
 648              	.LCFI4:
 649              		.cfi_def_cfa_offset 16
 559:Core/Src/main.c **** 
 650              		.loc 1 559 3 view .LVU256
 651              	.LBB37:
 559:Core/Src/main.c **** 
 652              		.loc 1 559 3 view .LVU257
 559:Core/Src/main.c **** 
 653              		.loc 1 559 3 view .LVU258
 654 0004 124B     		ldr	r3, .L7
 655 0006 9A6C     		ldr	r2, [r3, #72]
 656 0008 42F00102 		orr	r2, r2, #1
 657 000c 9A64     		str	r2, [r3, #72]
 559:Core/Src/main.c **** 
 658              		.loc 1 559 3 view .LVU259
 659 000e 9B6C     		ldr	r3, [r3, #72]
 660 0010 03F00103 		and	r3, r3, #1
 661 0014 0193     		str	r3, [sp, #4]
 559:Core/Src/main.c **** 
 662              		.loc 1 559 3 view .LVU260
 663 0016 019B     		ldr	r3, [sp, #4]
 664              	.LBE37:
 559:Core/Src/main.c **** 
 665              		.loc 1 559 3 view .LVU261
 563:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 666              		.loc 1 563 3 view .LVU262
 667 0018 0022     		movs	r2, #0
 668 001a 1146     		mov	r1, r2
 669 001c 0C20     		movs	r0, #12
 670 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 671              	.LVL29:
 564:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 672              		.loc 1 564 3 view .LVU263
 673 0022 0C20     		movs	r0, #12
 674 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 675              	.LVL30:
 566:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 676              		.loc 1 566 3 view .LVU264
 677 0028 0022     		movs	r2, #0
 678 002a 1146     		mov	r1, r2
 679 002c 0D20     		movs	r0, #13
 680 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 681              	.LVL31:
 567:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 682              		.loc 1 567 3 view .LVU265
 683 0032 0D20     		movs	r0, #13
 684 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 685              	.LVL32:
 569:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 686              		.loc 1 569 3 view .LVU266
 687 0038 0022     		movs	r2, #0
 688 003a 1146     		mov	r1, r2
 689 003c 0E20     		movs	r0, #14
ARM GAS  /tmp/ccrYMPR3.s 			page 27


 690 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 691              	.LVL33:
 570:Core/Src/main.c **** 
 692              		.loc 1 570 3 view .LVU267
 693 0042 0E20     		movs	r0, #14
 694 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 695              	.LVL34:
 572:Core/Src/main.c **** 
 696              		.loc 1 572 1 is_stmt 0 view .LVU268
 697 0048 03B0     		add	sp, sp, #12
 698              	.LCFI5:
 699              		.cfi_def_cfa_offset 4
 700              		@ sp needed
 701 004a 5DF804FB 		ldr	pc, [sp], #4
 702              	.L8:
 703 004e 00BF     		.align	2
 704              	.L7:
 705 0050 00100240 		.word	1073876992
 706              		.cfi_endproc
 707              	.LFE212:
 709              		.section	.text.tud_mount_cb,"ax",%progbits
 710              		.align	1
 711              		.weak	tud_mount_cb
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	tud_mount_cb:
 718              	.LFB214:
 785:Core/Src/main.c **** 
 786:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** //--------------------------------------------------------------------+
 789:Core/Src/main.c **** // Device callbacks
 790:Core/Src/main.c **** //--------------------------------------------------------------------+
 791:Core/Src/main.c **** 
 792:Core/Src/main.c **** // Invoked when device is mounted
 793:Core/Src/main.c **** void tud_mount_cb(void)
 794:Core/Src/main.c **** {
 719              		.loc 1 794 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 795:Core/Src/main.c ****   blink_interval_ms = BLINK_MOUNTED;
 724              		.loc 1 795 3 view .LVU270
 725              		.loc 1 795 21 is_stmt 0 view .LVU271
 726 0000 024B     		ldr	r3, .L10
 727 0002 4FF47A72 		mov	r2, #1000
 728 0006 1A60     		str	r2, [r3]
 796:Core/Src/main.c **** }
 729              		.loc 1 796 1 view .LVU272
 730 0008 7047     		bx	lr
 731              	.L11:
 732 000a 00BF     		.align	2
 733              	.L10:
 734 000c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccrYMPR3.s 			page 28


 735              		.cfi_endproc
 736              	.LFE214:
 738              		.section	.text.tud_umount_cb,"ax",%progbits
 739              		.align	1
 740              		.weak	tud_umount_cb
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	tud_umount_cb:
 747              	.LFB215:
 797:Core/Src/main.c **** 
 798:Core/Src/main.c **** // Invoked when device is unmounted
 799:Core/Src/main.c **** void tud_umount_cb(void)
 800:Core/Src/main.c **** {
 748              		.loc 1 800 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 801:Core/Src/main.c ****   blink_interval_ms = BLINK_NOT_MOUNTED;
 753              		.loc 1 801 3 view .LVU274
 754              		.loc 1 801 21 is_stmt 0 view .LVU275
 755 0000 014B     		ldr	r3, .L13
 756 0002 FA22     		movs	r2, #250
 757 0004 1A60     		str	r2, [r3]
 802:Core/Src/main.c **** }
 758              		.loc 1 802 1 view .LVU276
 759 0006 7047     		bx	lr
 760              	.L14:
 761              		.align	2
 762              	.L13:
 763 0008 00000000 		.word	.LANCHOR0
 764              		.cfi_endproc
 765              	.LFE215:
 767              		.section	.text.tud_suspend_cb,"ax",%progbits
 768              		.align	1
 769              		.weak	tud_suspend_cb
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	tud_suspend_cb:
 776              	.LVL35:
 777              	.LFB216:
 803:Core/Src/main.c **** 
 804:Core/Src/main.c **** // Invoked when usb bus is suspended
 805:Core/Src/main.c **** // remote_wakeup_en : if host allow us  to perform remote wakeup
 806:Core/Src/main.c **** // Within 7ms, device must draw an average of current less than 2.5 mA from bus
 807:Core/Src/main.c **** void tud_suspend_cb(bool remote_wakeup_en)
 808:Core/Src/main.c **** {
 778              		.loc 1 808 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 809:Core/Src/main.c ****   (void) remote_wakeup_en;
ARM GAS  /tmp/ccrYMPR3.s 			page 29


 783              		.loc 1 809 3 view .LVU278
 810:Core/Src/main.c ****   blink_interval_ms = BLINK_SUSPENDED;
 784              		.loc 1 810 3 view .LVU279
 785              		.loc 1 810 21 is_stmt 0 view .LVU280
 786 0000 024B     		ldr	r3, .L16
 787 0002 40F6C412 		movw	r2, #2500
 788 0006 1A60     		str	r2, [r3]
 811:Core/Src/main.c **** }
 789              		.loc 1 811 1 view .LVU281
 790 0008 7047     		bx	lr
 791              	.L17:
 792 000a 00BF     		.align	2
 793              	.L16:
 794 000c 00000000 		.word	.LANCHOR0
 795              		.cfi_endproc
 796              	.LFE216:
 798              		.section	.text.tud_resume_cb,"ax",%progbits
 799              		.align	1
 800              		.weak	tud_resume_cb
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	tud_resume_cb:
 807              	.LFB217:
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** // Invoked when usb bus is resumed
 814:Core/Src/main.c **** void tud_resume_cb(void)
 815:Core/Src/main.c **** {
 808              		.loc 1 815 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812 0000 08B5     		push	{r3, lr}
 813              	.LCFI6:
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 3, -8
 816              		.cfi_offset 14, -4
 816:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 817              		.loc 1 816 3 view .LVU283
 818              		.loc 1 816 23 is_stmt 0 view .LVU284
 819 0002 FFF7FEFF 		bl	tud_mounted
 820              	.LVL36:
 821              		.loc 1 816 53 view .LVU285
 822 0006 20B1     		cbz	r0, .L20
 823 0008 4FF47A72 		mov	r2, #1000
 824              	.L19:
 825              		.loc 1 816 21 discriminator 4 view .LVU286
 826 000c 024B     		ldr	r3, .L22
 827 000e 1A60     		str	r2, [r3]
 817:Core/Src/main.c **** }
 828              		.loc 1 817 1 discriminator 4 view .LVU287
 829 0010 08BD     		pop	{r3, pc}
 830              	.L20:
 816:Core/Src/main.c ****   blink_interval_ms = tud_mounted() ? BLINK_MOUNTED : BLINK_NOT_MOUNTED;
 831              		.loc 1 816 53 view .LVU288
 832 0012 FA22     		movs	r2, #250
ARM GAS  /tmp/ccrYMPR3.s 			page 30


 833 0014 FAE7     		b	.L19
 834              	.L23:
 835 0016 00BF     		.align	2
 836              	.L22:
 837 0018 00000000 		.word	.LANCHOR0
 838              		.cfi_endproc
 839              	.LFE217:
 841              		.section	.text.MIDI_TASK,"ax",%progbits
 842              		.align	1
 843              		.global	MIDI_TASK
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	MIDI_TASK:
 850              	.LVL37:
 851              	.LFB218:
 818:Core/Src/main.c **** 
 819:Core/Src/main.c **** /* LOUIS IMPLEMENTATION OF MIDI TASK*/
 820:Core/Src/main.c **** void MIDI_TASK(int octave_num){
 852              		.loc 1 820 31 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 16
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		.loc 1 820 31 is_stmt 0 view .LVU290
 857 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 858              	.LCFI7:
 859              		.cfi_def_cfa_offset 20
 860              		.cfi_offset 4, -20
 861              		.cfi_offset 5, -16
 862              		.cfi_offset 6, -12
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 85B0     		sub	sp, sp, #20
 866              	.LCFI8:
 867              		.cfi_def_cfa_offset 40
 868 0004 0546     		mov	r5, r0
 821:Core/Src/main.c ****   uint8_t const cable_num = 0; // MIDI jack associated with USB endpoint
 869              		.loc 1 821 3 is_stmt 1 view .LVU291
 870              	.LVL38:
 822:Core/Src/main.c ****   uint8_t const channel   = 0; // 0 for channel 1
 871              		.loc 1 822 3 view .LVU292
 823:Core/Src/main.c **** 
 824:Core/Src/main.c ****   // The MIDI interface always creates input and output port/jack descriptors
 825:Core/Src/main.c ****   // regardless of these being used or not. Therefore incoming traffic should be read
 826:Core/Src/main.c ****   // (possibly just discarded) to avoid the sender blocking in IO
 827:Core/Src/main.c ****   uint8_t packet[4];
 872              		.loc 1 827 3 view .LVU293
 828:Core/Src/main.c ****   while ( tud_midi_available() ) tud_midi_packet_read(packet);
 873              		.loc 1 828 3 view .LVU294
 874              		.loc 1 828 9 is_stmt 0 view .LVU295
 875 0006 03E0     		b	.L25
 876              	.LVL39:
 877              	.L26:
 878              		.loc 1 828 34 is_stmt 1 view .LVU296
 879              	.LBB38:
 880              	.LBI38:
ARM GAS  /tmp/ccrYMPR3.s 			page 31


 881              		.file 2 "tinyusb/src/class/midi/midi_device.h"
   1:tinyusb/src/class/midi/midi_device.h **** /*
   2:tinyusb/src/class/midi/midi_device.h ****  * The MIT License (MIT)
   3:tinyusb/src/class/midi/midi_device.h ****  *
   4:tinyusb/src/class/midi/midi_device.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/class/midi/midi_device.h ****  *
   6:tinyusb/src/class/midi/midi_device.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/class/midi/midi_device.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/class/midi/midi_device.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/class/midi/midi_device.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/class/midi/midi_device.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/class/midi/midi_device.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/class/midi/midi_device.h ****  *
  13:tinyusb/src/class/midi/midi_device.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/class/midi/midi_device.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/class/midi/midi_device.h ****  *
  16:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tinyusb/src/class/midi/midi_device.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/class/midi/midi_device.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/class/midi/midi_device.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/class/midi/midi_device.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/class/midi/midi_device.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/class/midi/midi_device.h ****  * THE SOFTWARE.
  23:tinyusb/src/class/midi/midi_device.h ****  *
  24:tinyusb/src/class/midi/midi_device.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/class/midi/midi_device.h ****  */
  26:tinyusb/src/class/midi/midi_device.h **** 
  27:tinyusb/src/class/midi/midi_device.h **** #ifndef _TUSB_MIDI_DEVICE_H_
  28:tinyusb/src/class/midi/midi_device.h **** #define _TUSB_MIDI_DEVICE_H_
  29:tinyusb/src/class/midi/midi_device.h **** 
  30:tinyusb/src/class/midi/midi_device.h **** #include "class/audio/audio.h"
  31:tinyusb/src/class/midi/midi_device.h **** #include "midi.h"
  32:tinyusb/src/class/midi/midi_device.h **** 
  33:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  34:tinyusb/src/class/midi/midi_device.h **** // Class Driver Configuration
  35:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  36:tinyusb/src/class/midi/midi_device.h **** 
  37:tinyusb/src/class/midi/midi_device.h **** #if !defined(CFG_TUD_MIDI_EP_BUFSIZE) && defined(CFG_TUD_MIDI_EPSIZE)
  38:tinyusb/src/class/midi/midi_device.h ****   #warning CFG_TUD_MIDI_EPSIZE is renamed to CFG_TUD_MIDI_EP_BUFSIZE, please update to use the new 
  39:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE    CFG_TUD_MIDI_EPSIZE
  40:tinyusb/src/class/midi/midi_device.h **** #endif
  41:tinyusb/src/class/midi/midi_device.h **** 
  42:tinyusb/src/class/midi/midi_device.h **** #ifndef CFG_TUD_MIDI_EP_BUFSIZE
  43:tinyusb/src/class/midi/midi_device.h ****   #define CFG_TUD_MIDI_EP_BUFSIZE     (TUD_OPT_HIGH_SPEED ? 512 : 64)
  44:tinyusb/src/class/midi/midi_device.h **** #endif
  45:tinyusb/src/class/midi/midi_device.h **** 
  46:tinyusb/src/class/midi/midi_device.h **** #ifdef __cplusplus
  47:tinyusb/src/class/midi/midi_device.h ****  extern "C" {
  48:tinyusb/src/class/midi/midi_device.h **** #endif
  49:tinyusb/src/class/midi/midi_device.h **** 
  50:tinyusb/src/class/midi/midi_device.h **** /** \addtogroup MIDI_Serial Serial
  51:tinyusb/src/class/midi/midi_device.h ****  *  @{
  52:tinyusb/src/class/midi/midi_device.h ****  *  \defgroup   MIDI_Serial_Device Device
  53:tinyusb/src/class/midi/midi_device.h ****  *  @{ */
  54:tinyusb/src/class/midi/midi_device.h **** 
  55:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  56:tinyusb/src/class/midi/midi_device.h **** // Application API (Multiple Interfaces)
ARM GAS  /tmp/ccrYMPR3.s 			page 32


  57:tinyusb/src/class/midi/midi_device.h **** // CFG_TUD_MIDI > 1
  58:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  59:tinyusb/src/class/midi/midi_device.h **** 
  60:tinyusb/src/class/midi/midi_device.h **** // Check if midi interface is mounted
  61:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_mounted      (uint8_t itf);
  62:tinyusb/src/class/midi/midi_device.h **** 
  63:tinyusb/src/class/midi/midi_device.h **** // Get the number of bytes available for reading
  64:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_available    (uint8_t itf, uint8_t cable_num);
  65:tinyusb/src/class/midi/midi_device.h **** 
  66:tinyusb/src/class/midi/midi_device.h **** // Read byte stream              (legacy)
  67:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_read  (uint8_t itf, uint8_t cable_num, void* buffer, uint32_t bufsize);
  68:tinyusb/src/class/midi/midi_device.h **** 
  69:tinyusb/src/class/midi/midi_device.h **** // Write byte Stream             (legacy)
  70:tinyusb/src/class/midi/midi_device.h **** uint32_t tud_midi_n_stream_write (uint8_t itf, uint8_t cable_num, uint8_t const* buffer, uint32_t b
  71:tinyusb/src/class/midi/midi_device.h **** 
  72:tinyusb/src/class/midi/midi_device.h **** // Read event packet             (4 bytes)
  73:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_read  (uint8_t itf, uint8_t packet[4]);
  74:tinyusb/src/class/midi/midi_device.h **** 
  75:tinyusb/src/class/midi/midi_device.h **** // Write event packet            (4 bytes)
  76:tinyusb/src/class/midi/midi_device.h **** bool     tud_midi_n_packet_write (uint8_t itf, uint8_t const packet[4]);
  77:tinyusb/src/class/midi/midi_device.h **** 
  78:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  79:tinyusb/src/class/midi/midi_device.h **** // Application API (Single Interface)
  80:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
  81:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_mounted      (void);
  82:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available    (void);
  83:tinyusb/src/class/midi/midi_device.h **** 
  84:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read  (void* buffer, uint32_t bufsize);
  85:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
  86:tinyusb/src/class/midi/midi_device.h **** 
  87:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_read  (uint8_t packet[4]);
  88:tinyusb/src/class/midi/midi_device.h **** static inline bool     tud_midi_packet_write (uint8_t const packet[4]);
  89:tinyusb/src/class/midi/midi_device.h **** 
  90:tinyusb/src/class/midi/midi_device.h **** //------------- Deprecated API name  -------------//
  91:tinyusb/src/class/midi/midi_device.h **** // TODO remove after 0.10.0 release
  92:tinyusb/src/class/midi/midi_device.h **** 
  93:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_read() is renamed to tud_midi_stream_read()")
  94:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_read (void* buffer, uint32_t bufsize)
  95:tinyusb/src/class/midi/midi_device.h **** {
  96:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_read(buffer, bufsize);
  97:tinyusb/src/class/midi/midi_device.h **** }
  98:tinyusb/src/class/midi/midi_device.h **** 
  99:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_write() is renamed to tud_midi_stream_write()")
 100:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_write(uint8_t cable_num, uint8_t const* buffer, uint32_t bufsize)
 101:tinyusb/src/class/midi/midi_device.h **** {
 102:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_stream_write(cable_num, buffer, bufsize);
 103:tinyusb/src/class/midi/midi_device.h **** }
 104:tinyusb/src/class/midi/midi_device.h **** 
 105:tinyusb/src/class/midi/midi_device.h **** 
 106:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_send() is renamed to tud_midi_packet_write()")
 107:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_send(uint8_t packet[4])
 108:tinyusb/src/class/midi/midi_device.h **** {
 109:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_write(packet);
 110:tinyusb/src/class/midi/midi_device.h **** }
 111:tinyusb/src/class/midi/midi_device.h **** 
 112:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_DEPRECATED("tud_midi_receive() is renamed to tud_midi_packet_read()")
 113:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_receive(uint8_t packet[4])
ARM GAS  /tmp/ccrYMPR3.s 			page 33


 114:tinyusb/src/class/midi/midi_device.h **** {
 115:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_packet_read(packet);
 116:tinyusb/src/class/midi/midi_device.h **** }
 117:tinyusb/src/class/midi/midi_device.h **** 
 118:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 119:tinyusb/src/class/midi/midi_device.h **** // Application Callback API (weak is optional)
 120:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 121:tinyusb/src/class/midi/midi_device.h **** TU_ATTR_WEAK void tud_midi_rx_cb(uint8_t itf);
 122:tinyusb/src/class/midi/midi_device.h **** 
 123:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 124:tinyusb/src/class/midi/midi_device.h **** // Inline Functions
 125:tinyusb/src/class/midi/midi_device.h **** //--------------------------------------------------------------------+
 126:tinyusb/src/class/midi/midi_device.h **** 
 127:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_mounted (void)
 128:tinyusb/src/class/midi/midi_device.h **** {
 129:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_mounted(0);
 130:tinyusb/src/class/midi/midi_device.h **** }
 131:tinyusb/src/class/midi/midi_device.h **** 
 132:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_available (void)
 133:tinyusb/src/class/midi/midi_device.h **** {
 134:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_available(0, 0);
 135:tinyusb/src/class/midi/midi_device.h **** }
 136:tinyusb/src/class/midi/midi_device.h **** 
 137:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_read (void* buffer, uint32_t bufsize)
 138:tinyusb/src/class/midi/midi_device.h **** {
 139:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_read(0, 0, buffer, bufsize);
 140:tinyusb/src/class/midi/midi_device.h **** }
 141:tinyusb/src/class/midi/midi_device.h **** 
 142:tinyusb/src/class/midi/midi_device.h **** static inline uint32_t tud_midi_stream_write (uint8_t cable_num, uint8_t const* buffer, uint32_t bu
 143:tinyusb/src/class/midi/midi_device.h **** {
 144:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_stream_write(0, cable_num, buffer, bufsize);
 145:tinyusb/src/class/midi/midi_device.h **** }
 146:tinyusb/src/class/midi/midi_device.h **** 
 147:tinyusb/src/class/midi/midi_device.h **** static inline bool tud_midi_packet_read (uint8_t packet[4])
 882              		.loc 2 147 20 view .LVU297
 883              	.LBB39:
 148:tinyusb/src/class/midi/midi_device.h **** {
 149:tinyusb/src/class/midi/midi_device.h ****   return tud_midi_n_packet_read(0, packet);
 884              		.loc 2 149 3 view .LVU298
 885              		.loc 2 149 10 is_stmt 0 view .LVU299
 886 0008 03A9     		add	r1, sp, #12
 887              	.LVL40:
 888              		.loc 2 149 10 view .LVU300
 889 000a 0020     		movs	r0, #0
 890 000c FFF7FEFF 		bl	tud_midi_n_packet_read
 891              	.LVL41:
 892              	.L25:
 893              		.loc 2 149 10 view .LVU301
 894              	.LBE39:
 895              	.LBE38:
 896              		.loc 1 828 9 is_stmt 1 discriminator 1 view .LVU302
 897              	.LBB40:
 898              	.LBI40:
 132:tinyusb/src/class/midi/midi_device.h **** {
 899              		.loc 2 132 24 discriminator 1 view .LVU303
 900              	.LBB41:
 134:tinyusb/src/class/midi/midi_device.h **** }
ARM GAS  /tmp/ccrYMPR3.s 			page 34


 901              		.loc 2 134 3 discriminator 1 view .LVU304
 134:tinyusb/src/class/midi/midi_device.h **** }
 902              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU305
 903 0010 0021     		movs	r1, #0
 904 0012 0846     		mov	r0, r1
 905 0014 FFF7FEFF 		bl	tud_midi_n_available
 906              	.LVL42:
 907              	.LBE41:
 908              	.LBE40:
 909              		.loc 1 828 9 discriminator 1 view .LVU306
 910 0018 0028     		cmp	r0, #0
 911 001a F5D1     		bne	.L26
 912              	.LBB42:
 829:Core/Src/main.c **** 
 830:Core/Src/main.c ****   // delay necessary?
 831:Core/Src/main.c ****   //HAL_Delay(20);
 832:Core/Src/main.c ****   static int octave_history;
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****   uint8_t note_on[3];
 835:Core/Src/main.c ****   uint8_t note_off[3];
 836:Core/Src/main.c **** 
 837:Core/Src/main.c ****   //note_on[0] = 0x90 | channel;
 838:Core/Src/main.c ****   //note_on[1] = (42);
 839:Core/Src/main.c ****   //note_on[2] = 127;
 840:Core/Src/main.c ****   //tud_midi_stream_write(cable_num, note_on, 3);
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   
 843:Core/Src/main.c ****   for(int i=0;i<12;i++){
 913              		.loc 1 843 11 view .LVU307
 914 001c 0024     		movs	r4, #0
 915 001e 35E0     		b	.L27
 916              	.LVL43:
 917              	.L36:
 844:Core/Src/main.c ****     if ((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 0)){
 845:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 918              		.loc 1 845 7 is_stmt 1 view .LVU308
 919              		.loc 1 845 38 is_stmt 0 view .LVU309
 920 0020 0123     		movs	r3, #1
 921 0022 A340     		lsls	r3, r3, r4
 922              		.loc 1 845 31 view .LVU310
 923 0024 1A43     		orrs	r2, r2, r3
 924              		.loc 1 845 18 view .LVU311
 925 0026 494B     		ldr	r3, .L37
 926 0028 1A80     		strh	r2, [r3]	@ movhi
 846:Core/Src/main.c ****       note_on[0] = 0x90 | channel;
 927              		.loc 1 846 7 is_stmt 1 view .LVU312
 928              		.loc 1 846 18 is_stmt 0 view .LVU313
 929 002a 9023     		movs	r3, #144
 930 002c 8DF80830 		strb	r3, [sp, #8]
 847:Core/Src/main.c ****       note_on[1] = (12*octave_num + 24 + i);
 931              		.loc 1 847 7 is_stmt 1 view .LVU314
 932              		.loc 1 847 40 is_stmt 0 view .LVU315
 933 0030 05EB4503 		add	r3, r5, r5, lsl #1
 934 0034 04EB8303 		add	r3, r4, r3, lsl #2
 935 0038 1833     		adds	r3, r3, #24
 936              		.loc 1 847 18 view .LVU316
 937 003a 8DF80930 		strb	r3, [sp, #9]
ARM GAS  /tmp/ccrYMPR3.s 			page 35


 848:Core/Src/main.c ****       note_on[2] = 127;
 938              		.loc 1 848 7 is_stmt 1 view .LVU317
 939              		.loc 1 848 18 is_stmt 0 view .LVU318
 940 003e 7F23     		movs	r3, #127
 941 0040 8DF80A30 		strb	r3, [sp, #10]
 849:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_on, 3);
 942              		.loc 1 849 7 is_stmt 1 view .LVU319
 943              	.LVL44:
 944              	.LBB43:
 945              	.LBI43:
 142:tinyusb/src/class/midi/midi_device.h **** {
 946              		.loc 2 142 24 view .LVU320
 947              	.LBB44:
 144:tinyusb/src/class/midi/midi_device.h **** }
 948              		.loc 2 144 3 view .LVU321
 144:tinyusb/src/class/midi/midi_device.h **** }
 949              		.loc 2 144 10 is_stmt 0 view .LVU322
 950 0044 0323     		movs	r3, #3
 951 0046 02AA     		add	r2, sp, #8
 952              	.LVL45:
 144:tinyusb/src/class/midi/midi_device.h **** }
 953              		.loc 2 144 10 view .LVU323
 954 0048 0021     		movs	r1, #0
 955 004a 0846     		mov	r0, r1
 956 004c FFF7FEFF 		bl	tud_midi_n_stream_write
 957              	.LVL46:
 144:tinyusb/src/class/midi/midi_device.h **** }
 958              		.loc 2 144 10 view .LVU324
 959 0050 1BE0     		b	.L29
 960              	.LVL47:
 961              	.L30:
 144:tinyusb/src/class/midi/midi_device.h **** }
 962              		.loc 2 144 10 view .LVU325
 963              	.LBE44:
 964              	.LBE43:
 850:Core/Src/main.c ****     }
 851:Core/Src/main.c ****     else if((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 1)){
 852:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 853:Core/Src/main.c ****       else {
 854:Core/Src/main.c ****         note_off[0] = 0x80 | channel;
 855:Core/Src/main.c ****         note_off[1] = (12*octave_history + 24 + i);
 856:Core/Src/main.c ****         note_off[2] = 0;
 857:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_off, 3);
 858:Core/Src/main.c **** 
 859:Core/Src/main.c ****         KEYPRESSED = KEYPRESSED | (0x1 << i);
 860:Core/Src/main.c ****         note_on[0] = 0x90 | channel;
 861:Core/Src/main.c ****         note_on[1] = (12*octave_num + 24 + i);
 862:Core/Src/main.c ****         note_on[2] = 127;
 863:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_on, 3);
 864:Core/Src/main.c ****       }
 865:Core/Src/main.c ****     }
 866:Core/Src/main.c ****     else if((((KEYPRESS >> i) & 0x1) == 0) && ((KEYPRESSED >> i) == 1)){
 965              		.loc 1 866 10 is_stmt 1 view .LVU326
 966              		.loc 1 866 12 is_stmt 0 view .LVU327
 967 0052 23B9     		cbnz	r3, .L31
 968              		.loc 1 866 60 discriminator 1 view .LVU328
 969 0054 3D4B     		ldr	r3, .L37
ARM GAS  /tmp/ccrYMPR3.s 			page 36


 970 0056 1B88     		ldrh	r3, [r3]
 971 0058 2341     		asrs	r3, r3, r4
 972              		.loc 1 866 44 discriminator 1 view .LVU329
 973 005a 012B     		cmp	r3, #1
 974 005c 5CD0     		beq	.L34
 975              	.L31:
 867:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED & (0x0 << i);
 868:Core/Src/main.c ****       note_off[0] = 0x80 | channel;
 869:Core/Src/main.c ****       note_off[1] = (12*octave_num + 24 + i);
 870:Core/Src/main.c ****       note_off[2] = 0;
 871:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_off, 3);
 872:Core/Src/main.c ****     }
 873:Core/Src/main.c ****     else {
 874:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 976              		.loc 1 874 7 is_stmt 1 view .LVU330
 977              		.loc 1 874 25 is_stmt 0 view .LVU331
 978 005e 3C4B     		ldr	r3, .L37+4
 979 0060 1B68     		ldr	r3, [r3]
 980              		.loc 1 874 9 view .LVU332
 981 0062 AB42     		cmp	r3, r5
 982 0064 11D0     		beq	.L29
 875:Core/Src/main.c ****       else {
 876:Core/Src/main.c ****         note_off[0] = 0x80 | channel;
 983              		.loc 1 876 9 is_stmt 1 view .LVU333
 984              		.loc 1 876 21 is_stmt 0 view .LVU334
 985 0066 8022     		movs	r2, #128
 986 0068 8DF80420 		strb	r2, [sp, #4]
 877:Core/Src/main.c ****         note_off[1] = (12*octave_history + 24 + i);
 987              		.loc 1 877 9 is_stmt 1 view .LVU335
 988              		.loc 1 877 47 is_stmt 0 view .LVU336
 989 006c 03EB4303 		add	r3, r3, r3, lsl #1
 990 0070 04EB8303 		add	r3, r4, r3, lsl #2
 991 0074 1833     		adds	r3, r3, #24
 992              		.loc 1 877 21 view .LVU337
 993 0076 8DF80530 		strb	r3, [sp, #5]
 878:Core/Src/main.c ****         note_off[2] = 0;
 994              		.loc 1 878 9 is_stmt 1 view .LVU338
 995              		.loc 1 878 21 is_stmt 0 view .LVU339
 996 007a 0020     		movs	r0, #0
 997 007c 8DF80600 		strb	r0, [sp, #6]
 879:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_off, 3);
 998              		.loc 1 879 9 is_stmt 1 view .LVU340
 999              	.LVL48:
 1000              	.LBB45:
 1001              	.LBI45:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1002              		.loc 2 142 24 view .LVU341
 1003              	.LBB46:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1004              		.loc 2 144 3 view .LVU342
 144:tinyusb/src/class/midi/midi_device.h **** }
 1005              		.loc 2 144 10 is_stmt 0 view .LVU343
 1006 0080 0323     		movs	r3, #3
 1007 0082 01AA     		add	r2, sp, #4
 1008              	.LVL49:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1009              		.loc 2 144 10 view .LVU344
ARM GAS  /tmp/ccrYMPR3.s 			page 37


 1010 0084 0146     		mov	r1, r0
 1011 0086 FFF7FEFF 		bl	tud_midi_n_stream_write
 1012              	.LVL50:
 1013              	.L29:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1014              		.loc 2 144 10 view .LVU345
 1015              	.LBE46:
 1016              	.LBE45:
 843:Core/Src/main.c ****     if ((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 0)){
 1017              		.loc 1 843 20 is_stmt 1 discriminator 2 view .LVU346
 843:Core/Src/main.c ****     if ((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 0)){
 1018              		.loc 1 843 21 is_stmt 0 discriminator 2 view .LVU347
 1019 008a 0134     		adds	r4, r4, #1
 1020              	.LVL51:
 1021              	.L27:
 843:Core/Src/main.c ****     if ((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 0)){
 1022              		.loc 1 843 15 is_stmt 1 discriminator 1 view .LVU348
 843:Core/Src/main.c ****     if ((((KEYPRESS >> i) & 0x1) == 1) && ((KEYPRESSED >> i) == 0)){
 1023              		.loc 1 843 3 is_stmt 0 discriminator 1 view .LVU349
 1024 008c 0B2C     		cmp	r4, #11
 1025 008e 58DC     		bgt	.L35
 844:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 1026              		.loc 1 844 5 is_stmt 1 view .LVU350
 844:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 1027              		.loc 1 844 21 is_stmt 0 view .LVU351
 1028 0090 304B     		ldr	r3, .L37+8
 1029 0092 1B88     		ldrh	r3, [r3]
 1030 0094 2341     		asrs	r3, r3, r4
 844:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 1031              		.loc 1 844 8 view .LVU352
 1032 0096 13F00103 		ands	r3, r3, #1
 1033 009a 04D0     		beq	.L28
 844:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 1034              		.loc 1 844 56 discriminator 1 view .LVU353
 1035 009c 2B4A     		ldr	r2, .L37
 1036 009e 1288     		ldrh	r2, [r2]
 844:Core/Src/main.c ****       KEYPRESSED = KEYPRESSED | (0x1 << i);
 1037              		.loc 1 844 40 discriminator 1 view .LVU354
 1038 00a0 52FA04F1 		asrs	r1, r2, r4
 1039 00a4 BCD0     		beq	.L36
 1040              	.L28:
 851:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 1041              		.loc 1 851 10 is_stmt 1 view .LVU355
 851:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 1042              		.loc 1 851 12 is_stmt 0 view .LVU356
 1043 00a6 002B     		cmp	r3, #0
 1044 00a8 D3D0     		beq	.L30
 851:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 1045              		.loc 1 851 60 discriminator 1 view .LVU357
 1046 00aa 284A     		ldr	r2, .L37
 1047 00ac 1288     		ldrh	r2, [r2]
 1048 00ae 2241     		asrs	r2, r2, r4
 851:Core/Src/main.c ****       if(octave_history == octave_num) continue;
 1049              		.loc 1 851 44 discriminator 1 view .LVU358
 1050 00b0 012A     		cmp	r2, #1
 1051 00b2 CED1     		bne	.L30
 852:Core/Src/main.c ****       else {
ARM GAS  /tmp/ccrYMPR3.s 			page 38


 1052              		.loc 1 852 7 is_stmt 1 view .LVU359
 852:Core/Src/main.c ****       else {
 1053              		.loc 1 852 25 is_stmt 0 view .LVU360
 1054 00b4 264B     		ldr	r3, .L37+4
 1055 00b6 1B68     		ldr	r3, [r3]
 852:Core/Src/main.c ****       else {
 1056              		.loc 1 852 9 view .LVU361
 1057 00b8 AB42     		cmp	r3, r5
 1058 00ba E6D0     		beq	.L29
 854:Core/Src/main.c ****         note_off[1] = (12*octave_history + 24 + i);
 1059              		.loc 1 854 9 is_stmt 1 view .LVU362
 854:Core/Src/main.c ****         note_off[1] = (12*octave_history + 24 + i);
 1060              		.loc 1 854 21 is_stmt 0 view .LVU363
 1061 00bc 8022     		movs	r2, #128
 1062 00be 8DF80420 		strb	r2, [sp, #4]
 855:Core/Src/main.c ****         note_off[2] = 0;
 1063              		.loc 1 855 9 is_stmt 1 view .LVU364
 855:Core/Src/main.c ****         note_off[2] = 0;
 1064              		.loc 1 855 47 is_stmt 0 view .LVU365
 1065 00c2 E6B2     		uxtb	r6, r4
 1066 00c4 03EB4303 		add	r3, r3, r3, lsl #1
 1067 00c8 06EB8303 		add	r3, r6, r3, lsl #2
 1068 00cc 1833     		adds	r3, r3, #24
 855:Core/Src/main.c ****         note_off[2] = 0;
 1069              		.loc 1 855 21 view .LVU366
 1070 00ce 8DF80530 		strb	r3, [sp, #5]
 856:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_off, 3);
 1071              		.loc 1 856 9 is_stmt 1 view .LVU367
 856:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_off, 3);
 1072              		.loc 1 856 21 is_stmt 0 view .LVU368
 1073 00d2 0027     		movs	r7, #0
 1074 00d4 8DF80670 		strb	r7, [sp, #6]
 857:Core/Src/main.c **** 
 1075              		.loc 1 857 9 is_stmt 1 view .LVU369
 1076              	.LVL52:
 1077              	.LBB47:
 1078              	.LBI47:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1079              		.loc 2 142 24 view .LVU370
 1080              	.LBB48:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1081              		.loc 2 144 3 view .LVU371
 144:tinyusb/src/class/midi/midi_device.h **** }
 1082              		.loc 2 144 10 is_stmt 0 view .LVU372
 1083 00d8 0323     		movs	r3, #3
 1084 00da 01AA     		add	r2, sp, #4
 1085              	.LVL53:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1086              		.loc 2 144 10 view .LVU373
 1087 00dc 3946     		mov	r1, r7
 1088 00de 3846     		mov	r0, r7
 1089 00e0 FFF7FEFF 		bl	tud_midi_n_stream_write
 1090              	.LVL54:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1091              		.loc 2 144 10 view .LVU374
 1092              	.LBE48:
 1093              	.LBE47:
ARM GAS  /tmp/ccrYMPR3.s 			page 39


 859:Core/Src/main.c ****         note_on[0] = 0x90 | channel;
 1094              		.loc 1 859 9 is_stmt 1 view .LVU375
 859:Core/Src/main.c ****         note_on[0] = 0x90 | channel;
 1095              		.loc 1 859 40 is_stmt 0 view .LVU376
 1096 00e4 0123     		movs	r3, #1
 1097 00e6 A340     		lsls	r3, r3, r4
 859:Core/Src/main.c ****         note_on[0] = 0x90 | channel;
 1098              		.loc 1 859 33 view .LVU377
 1099 00e8 184A     		ldr	r2, .L37
 1100 00ea 1188     		ldrh	r1, [r2]
 1101 00ec 0B43     		orrs	r3, r3, r1
 859:Core/Src/main.c ****         note_on[0] = 0x90 | channel;
 1102              		.loc 1 859 20 view .LVU378
 1103 00ee 1380     		strh	r3, [r2]	@ movhi
 860:Core/Src/main.c ****         note_on[1] = (12*octave_num + 24 + i);
 1104              		.loc 1 860 9 is_stmt 1 view .LVU379
 860:Core/Src/main.c ****         note_on[1] = (12*octave_num + 24 + i);
 1105              		.loc 1 860 20 is_stmt 0 view .LVU380
 1106 00f0 9023     		movs	r3, #144
 1107 00f2 8DF80830 		strb	r3, [sp, #8]
 861:Core/Src/main.c ****         note_on[2] = 127;
 1108              		.loc 1 861 9 is_stmt 1 view .LVU381
 861:Core/Src/main.c ****         note_on[2] = 127;
 1109              		.loc 1 861 42 is_stmt 0 view .LVU382
 1110 00f6 05EB4503 		add	r3, r5, r5, lsl #1
 1111 00fa 06EB8306 		add	r6, r6, r3, lsl #2
 1112 00fe 1836     		adds	r6, r6, #24
 861:Core/Src/main.c ****         note_on[2] = 127;
 1113              		.loc 1 861 20 view .LVU383
 1114 0100 8DF80960 		strb	r6, [sp, #9]
 862:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_on, 3);
 1115              		.loc 1 862 9 is_stmt 1 view .LVU384
 862:Core/Src/main.c ****         tud_midi_stream_write(cable_num, note_on, 3);
 1116              		.loc 1 862 20 is_stmt 0 view .LVU385
 1117 0104 7F23     		movs	r3, #127
 1118 0106 8DF80A30 		strb	r3, [sp, #10]
 863:Core/Src/main.c ****       }
 1119              		.loc 1 863 9 is_stmt 1 view .LVU386
 1120              	.LVL55:
 1121              	.LBB49:
 1122              	.LBI49:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1123              		.loc 2 142 24 view .LVU387
 1124              	.LBB50:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1125              		.loc 2 144 3 view .LVU388
 144:tinyusb/src/class/midi/midi_device.h **** }
 1126              		.loc 2 144 10 is_stmt 0 view .LVU389
 1127 010a 0323     		movs	r3, #3
 1128 010c 02AA     		add	r2, sp, #8
 1129              	.LVL56:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1130              		.loc 2 144 10 view .LVU390
 1131 010e 3946     		mov	r1, r7
 1132 0110 3846     		mov	r0, r7
 1133 0112 FFF7FEFF 		bl	tud_midi_n_stream_write
 1134              	.LVL57:
ARM GAS  /tmp/ccrYMPR3.s 			page 40


 144:tinyusb/src/class/midi/midi_device.h **** }
 1135              		.loc 2 144 10 view .LVU391
 1136 0116 B8E7     		b	.L29
 1137              	.LVL58:
 1138              	.L34:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1139              		.loc 2 144 10 view .LVU392
 1140              	.LBE50:
 1141              	.LBE49:
 867:Core/Src/main.c ****       note_off[0] = 0x80 | channel;
 1142              		.loc 1 867 7 is_stmt 1 view .LVU393
 867:Core/Src/main.c ****       note_off[0] = 0x80 | channel;
 1143              		.loc 1 867 18 is_stmt 0 view .LVU394
 1144 0118 0020     		movs	r0, #0
 1145 011a 0C4B     		ldr	r3, .L37
 1146 011c 1880     		strh	r0, [r3]	@ movhi
 868:Core/Src/main.c ****       note_off[1] = (12*octave_num + 24 + i);
 1147              		.loc 1 868 7 is_stmt 1 view .LVU395
 868:Core/Src/main.c ****       note_off[1] = (12*octave_num + 24 + i);
 1148              		.loc 1 868 19 is_stmt 0 view .LVU396
 1149 011e 8023     		movs	r3, #128
 1150 0120 8DF80430 		strb	r3, [sp, #4]
 869:Core/Src/main.c ****       note_off[2] = 0;
 1151              		.loc 1 869 7 is_stmt 1 view .LVU397
 869:Core/Src/main.c ****       note_off[2] = 0;
 1152              		.loc 1 869 41 is_stmt 0 view .LVU398
 1153 0124 05EB4503 		add	r3, r5, r5, lsl #1
 1154 0128 04EB8303 		add	r3, r4, r3, lsl #2
 1155 012c 1833     		adds	r3, r3, #24
 869:Core/Src/main.c ****       note_off[2] = 0;
 1156              		.loc 1 869 19 view .LVU399
 1157 012e 8DF80530 		strb	r3, [sp, #5]
 870:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_off, 3);
 1158              		.loc 1 870 7 is_stmt 1 view .LVU400
 870:Core/Src/main.c ****       tud_midi_stream_write(cable_num, note_off, 3);
 1159              		.loc 1 870 19 is_stmt 0 view .LVU401
 1160 0132 8DF80600 		strb	r0, [sp, #6]
 871:Core/Src/main.c ****     }
 1161              		.loc 1 871 7 is_stmt 1 view .LVU402
 1162              	.LVL59:
 1163              	.LBB51:
 1164              	.LBI51:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1165              		.loc 2 142 24 view .LVU403
 1166              	.LBB52:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1167              		.loc 2 144 3 view .LVU404
 144:tinyusb/src/class/midi/midi_device.h **** }
 1168              		.loc 2 144 10 is_stmt 0 view .LVU405
 1169 0136 0323     		movs	r3, #3
 1170 0138 01AA     		add	r2, sp, #4
 1171              	.LVL60:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1172              		.loc 2 144 10 view .LVU406
 1173 013a 0146     		mov	r1, r0
 1174 013c FFF7FEFF 		bl	tud_midi_n_stream_write
 1175              	.LVL61:
ARM GAS  /tmp/ccrYMPR3.s 			page 41


 144:tinyusb/src/class/midi/midi_device.h **** }
 1176              		.loc 2 144 10 view .LVU407
 1177 0140 A3E7     		b	.L29
 1178              	.LVL62:
 1179              	.L35:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1180              		.loc 2 144 10 view .LVU408
 1181              	.LBE52:
 1182              	.LBE51:
 1183              	.LBE42:
 880:Core/Src/main.c ****       }
 881:Core/Src/main.c ****     }
 882:Core/Src/main.c ****   }
 883:Core/Src/main.c ****   octave_history = octave_num;  
 1184              		.loc 1 883 3 is_stmt 1 view .LVU409
 1185              		.loc 1 883 18 is_stmt 0 view .LVU410
 1186 0142 034B     		ldr	r3, .L37+4
 1187 0144 1D60     		str	r5, [r3]
 884:Core/Src/main.c **** }
 1188              		.loc 1 884 1 view .LVU411
 1189 0146 05B0     		add	sp, sp, #20
 1190              	.LCFI9:
 1191              		.cfi_def_cfa_offset 20
 1192              		@ sp needed
 1193 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 1194              	.LVL63:
 1195              	.L38:
 1196              		.loc 1 884 1 view .LVU412
 1197 014a 00BF     		.align	2
 1198              	.L37:
 1199 014c 00000000 		.word	.LANCHOR2
 1200 0150 00000000 		.word	.LANCHOR3
 1201 0154 00000000 		.word	.LANCHOR1
 1202              		.cfi_endproc
 1203              	.LFE218:
 1205              		.section	.text.midi_task,"ax",%progbits
 1206              		.align	1
 1207              		.global	midi_task
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	midi_task:
 1214              	.LFB219:
 885:Core/Src/main.c **** 
 886:Core/Src/main.c **** // MIDI TASK-- SEPARATE FILE
 887:Core/Src/main.c **** 
 888:Core/Src/main.c **** void midi_task(void)
 889:Core/Src/main.c **** {
 1215              		.loc 1 889 1 is_stmt 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219 0000 30B5     		push	{r4, r5, lr}
 1220              	.LCFI10:
 1221              		.cfi_def_cfa_offset 12
 1222              		.cfi_offset 4, -12
ARM GAS  /tmp/ccrYMPR3.s 			page 42


 1223              		.cfi_offset 5, -8
 1224              		.cfi_offset 14, -4
 1225 0002 85B0     		sub	sp, sp, #20
 1226              	.LCFI11:
 1227              		.cfi_def_cfa_offset 32
 890:Core/Src/main.c ****   static uint32_t start_ms = 0;
 1228              		.loc 1 890 3 view .LVU414
 891:Core/Src/main.c **** 
 892:Core/Src/main.c ****   uint8_t const cable_num = 0; // MIDI jack associated with USB endpoint
 1229              		.loc 1 892 3 view .LVU415
 1230              	.LVL64:
 893:Core/Src/main.c ****   uint8_t const channel   = 0; // 0 for channel 1
 1231              		.loc 1 893 3 view .LVU416
 894:Core/Src/main.c **** 
 895:Core/Src/main.c ****   // The MIDI interface always creates input and output port/jack descriptors
 896:Core/Src/main.c ****   // regardless of these being used or not. Therefore incoming traffic should be read
 897:Core/Src/main.c ****   // (possibly just discarded) to avoid the sender blocking in IO
 898:Core/Src/main.c ****   uint8_t packet[4];
 1232              		.loc 1 898 3 view .LVU417
 899:Core/Src/main.c ****   while ( tud_midi_available() ) tud_midi_packet_read(packet);
 1233              		.loc 1 899 3 view .LVU418
 1234              		.loc 1 899 9 is_stmt 0 view .LVU419
 1235 0004 03E0     		b	.L40
 1236              	.L41:
 1237              		.loc 1 899 34 is_stmt 1 view .LVU420
 1238              	.LVL65:
 1239              	.LBB53:
 1240              	.LBI53:
 147:tinyusb/src/class/midi/midi_device.h **** {
 1241              		.loc 2 147 20 view .LVU421
 1242              	.LBB54:
 1243              		.loc 2 149 3 view .LVU422
 1244              		.loc 2 149 10 is_stmt 0 view .LVU423
 1245 0006 03A9     		add	r1, sp, #12
 1246              	.LVL66:
 1247              		.loc 2 149 10 view .LVU424
 1248 0008 0020     		movs	r0, #0
 1249 000a FFF7FEFF 		bl	tud_midi_n_packet_read
 1250              	.LVL67:
 1251              	.L40:
 1252              		.loc 2 149 10 view .LVU425
 1253              	.LBE54:
 1254              	.LBE53:
 1255              		.loc 1 899 9 is_stmt 1 discriminator 1 view .LVU426
 1256              	.LBB55:
 1257              	.LBI55:
 132:tinyusb/src/class/midi/midi_device.h **** {
 1258              		.loc 2 132 24 discriminator 1 view .LVU427
 1259              	.LBB56:
 134:tinyusb/src/class/midi/midi_device.h **** }
 1260              		.loc 2 134 3 discriminator 1 view .LVU428
 134:tinyusb/src/class/midi/midi_device.h **** }
 1261              		.loc 2 134 10 is_stmt 0 discriminator 1 view .LVU429
 1262 000e 0021     		movs	r1, #0
 1263 0010 0846     		mov	r0, r1
 1264 0012 FFF7FEFF 		bl	tud_midi_n_available
 1265              	.LVL68:
ARM GAS  /tmp/ccrYMPR3.s 			page 43


 1266              	.LBE56:
 1267              	.LBE55:
 1268              		.loc 1 899 9 discriminator 1 view .LVU430
 1269 0016 0028     		cmp	r0, #0
 1270 0018 F5D1     		bne	.L41
 900:Core/Src/main.c **** 
 901:Core/Src/main.c ****   // send note periodically
 902:Core/Src/main.c ****   /* CONSIDER USING DELAY WITH SYSTICK HANDLER*/
 903:Core/Src/main.c ****   
 904:Core/Src/main.c ****   HAL_Delay(286);
 1271              		.loc 1 904 3 is_stmt 1 view .LVU431
 1272 001a 4FF48F70 		mov	r0, #286
 1273 001e FFF7FEFF 		bl	HAL_Delay
 1274              	.LVL69:
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****   /*BELOW IS TINYUSB IMPLEMENTATION USING INTERRUPT*/
 907:Core/Src/main.c ****   /*
 908:Core/Src/main.c ****   if (board_millis() - start_ms < 286) return; // not enough time
 909:Core/Src/main.c ****   start_ms += 286;
 910:Core/Src/main.c ****   */
 911:Core/Src/main.c **** 
 912:Core/Src/main.c ****   // Previous positions in the note sequence.
 913:Core/Src/main.c ****   int previous = (int) (note_pos - 1);
 1275              		.loc 1 913 3 view .LVU432
 1276              		.loc 1 913 34 is_stmt 0 view .LVU433
 1277 0022 174B     		ldr	r3, .L47
 1278 0024 1B68     		ldr	r3, [r3]
 1279              	.LVL70:
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****   // If we currently are at position 0, set the
 916:Core/Src/main.c ****   // previous position to the last note in the sequence.
 917:Core/Src/main.c ****   if (previous < 0) previous = sizeof(note_sequence) - 1;
 1280              		.loc 1 917 3 is_stmt 1 view .LVU434
 1281              		.loc 1 917 6 is_stmt 0 view .LVU435
 1282 0026 5D1E     		subs	r5, r3, #1
 1283              	.LVL71:
 1284              		.loc 1 917 6 view .LVU436
 1285 0028 28D4     		bmi	.L46
 1286              	.LVL72:
 1287              	.L42:
 918:Core/Src/main.c **** 
 919:Core/Src/main.c ****   // Send Note On for current position at full velocity (127) on channel 1.
 920:Core/Src/main.c ****   uint8_t note_on[3] = { 0x90 | channel, note_sequence[note_pos], 127 };
 1288              		.loc 1 920 3 is_stmt 1 view .LVU437
 1289              		.loc 1 920 11 is_stmt 0 view .LVU438
 1290 002a 9022     		movs	r2, #144
 1291 002c 8DF80820 		strb	r2, [sp, #8]
 1292              		.loc 1 920 55 view .LVU439
 1293 0030 144C     		ldr	r4, .L47+4
 1294 0032 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1295              		.loc 1 920 11 view .LVU440
 1296 0034 8DF80930 		strb	r3, [sp, #9]
 1297 0038 7F23     		movs	r3, #127
 1298 003a 8DF80A30 		strb	r3, [sp, #10]
 921:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_on, 3);
 1299              		.loc 1 921 3 is_stmt 1 view .LVU441
 1300              	.LVL73:
ARM GAS  /tmp/ccrYMPR3.s 			page 44


 1301              	.LBB57:
 1302              	.LBI57:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1303              		.loc 2 142 24 view .LVU442
 1304              	.LBB58:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1305              		.loc 2 144 3 view .LVU443
 144:tinyusb/src/class/midi/midi_device.h **** }
 1306              		.loc 2 144 10 is_stmt 0 view .LVU444
 1307 003e 0323     		movs	r3, #3
 1308 0040 02AA     		add	r2, sp, #8
 1309              	.LVL74:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1310              		.loc 2 144 10 view .LVU445
 1311 0042 0021     		movs	r1, #0
 1312 0044 0846     		mov	r0, r1
 1313 0046 FFF7FEFF 		bl	tud_midi_n_stream_write
 1314              	.LVL75:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1315              		.loc 2 144 10 view .LVU446
 1316              	.LBE58:
 1317              	.LBE57:
 922:Core/Src/main.c **** 
 923:Core/Src/main.c ****   // Send Note Off for previous note.
 924:Core/Src/main.c ****   uint8_t note_off[3] = { 0x80 | channel, note_sequence[previous], 0};
 1318              		.loc 1 924 3 is_stmt 1 view .LVU447
 1319              		.loc 1 924 11 is_stmt 0 view .LVU448
 1320 004a 8023     		movs	r3, #128
 1321 004c 8DF80430 		strb	r3, [sp, #4]
 1322              		.loc 1 924 56 view .LVU449
 1323 0050 635D     		ldrb	r3, [r4, r5]	@ zero_extendqisi2
 1324              		.loc 1 924 11 view .LVU450
 1325 0052 8DF80530 		strb	r3, [sp, #5]
 1326 0056 0020     		movs	r0, #0
 1327 0058 8DF80600 		strb	r0, [sp, #6]
 925:Core/Src/main.c ****   tud_midi_stream_write(cable_num, note_off, 3);
 1328              		.loc 1 925 3 is_stmt 1 view .LVU451
 1329              	.LVL76:
 1330              	.LBB59:
 1331              	.LBI59:
 142:tinyusb/src/class/midi/midi_device.h **** {
 1332              		.loc 2 142 24 view .LVU452
 1333              	.LBB60:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1334              		.loc 2 144 3 view .LVU453
 144:tinyusb/src/class/midi/midi_device.h **** }
 1335              		.loc 2 144 10 is_stmt 0 view .LVU454
 1336 005c 0323     		movs	r3, #3
 1337 005e 01AA     		add	r2, sp, #4
 1338              	.LVL77:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1339              		.loc 2 144 10 view .LVU455
 1340 0060 0146     		mov	r1, r0
 1341 0062 FFF7FEFF 		bl	tud_midi_n_stream_write
 1342              	.LVL78:
 144:tinyusb/src/class/midi/midi_device.h **** }
 1343              		.loc 2 144 10 view .LVU456
ARM GAS  /tmp/ccrYMPR3.s 			page 45


 1344              	.LBE60:
 1345              	.LBE59:
 926:Core/Src/main.c **** 
 927:Core/Src/main.c ****   // Increment position
 928:Core/Src/main.c ****   note_pos++;
 1346              		.loc 1 928 3 is_stmt 1 view .LVU457
 1347              		.loc 1 928 11 is_stmt 0 view .LVU458
 1348 0066 064A     		ldr	r2, .L47
 1349 0068 1368     		ldr	r3, [r2]
 1350 006a 0133     		adds	r3, r3, #1
 1351 006c 1360     		str	r3, [r2]
 929:Core/Src/main.c **** 
 930:Core/Src/main.c ****   // If we are at the end of the sequence, start over.
 931:Core/Src/main.c ****   if (note_pos >= sizeof(note_sequence)) note_pos = 0;
 1352              		.loc 1 931 3 is_stmt 1 view .LVU459
 1353              		.loc 1 931 6 is_stmt 0 view .LVU460
 1354 006e 3F2B     		cmp	r3, #63
 1355 0070 02D9     		bls	.L39
 1356              		.loc 1 931 42 is_stmt 1 discriminator 1 view .LVU461
 1357              		.loc 1 931 51 is_stmt 0 discriminator 1 view .LVU462
 1358 0072 1346     		mov	r3, r2
 1359 0074 0022     		movs	r2, #0
 1360 0076 1A60     		str	r2, [r3]
 1361              	.L39:
 932:Core/Src/main.c **** }
 1362              		.loc 1 932 1 view .LVU463
 1363 0078 05B0     		add	sp, sp, #20
 1364              	.LCFI12:
 1365              		.cfi_remember_state
 1366              		.cfi_def_cfa_offset 12
 1367              		@ sp needed
 1368 007a 30BD     		pop	{r4, r5, pc}
 1369              	.LVL79:
 1370              	.L46:
 1371              	.LCFI13:
 1372              		.cfi_restore_state
 917:Core/Src/main.c **** 
 1373              		.loc 1 917 30 view .LVU464
 1374 007c 3F25     		movs	r5, #63
 1375              	.LVL80:
 917:Core/Src/main.c **** 
 1376              		.loc 1 917 30 view .LVU465
 1377 007e D4E7     		b	.L42
 1378              	.L48:
 1379              		.align	2
 1380              	.L47:
 1381 0080 00000000 		.word	.LANCHOR4
 1382 0084 00000000 		.word	.LANCHOR5
 1383              		.cfi_endproc
 1384              	.LFE219:
 1386              		.section	.text.READ_KEYPRESS,"ax",%progbits
 1387              		.align	1
 1388              		.global	READ_KEYPRESS
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccrYMPR3.s 			page 46


 1394              	READ_KEYPRESS:
 1395              	.LVL81:
 1396              	.LFB220:
 933:Core/Src/main.c **** 
 934:Core/Src/main.c **** /* READ ALL CURRENTLY PRESSED KEYS */
 935:Core/Src/main.c **** void READ_KEYPRESS(uint32_t adc1_val[], uint32_t adc2_val[]) {
 1397              		.loc 1 935 62 is_stmt 1 view -0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 936:Core/Src/main.c ****    KEYPRESS = 0x0;
 1402              		.loc 1 936 4 view .LVU467
 1403              		.loc 1 936 13 is_stmt 0 view .LVU468
 1404 0000 0023     		movs	r3, #0
 1405 0002 164A     		ldr	r2, .L59
 1406 0004 1380     		strh	r3, [r2]	@ movhi
 937:Core/Src/main.c ****    for (int i = 0; i < 12; i++) {
 1407              		.loc 1 937 4 is_stmt 1 view .LVU469
 1408              	.LBB61:
 1409              		.loc 1 937 9 view .LVU470
 1410              	.LVL82:
 1411              		.loc 1 937 20 view .LVU471
 1412              		.loc 1 937 4 is_stmt 0 view .LVU472
 1413 0006 0B2B     		cmp	r3, #11
 1414 0008 27DC     		bgt	.L57
 1415              	.LBE61:
 935:Core/Src/main.c ****    KEYPRESS = 0x0;
 1416              		.loc 1 935 62 view .LVU473
 1417 000a 10B4     		push	{r4}
 1418              	.LCFI14:
 1419              		.cfi_def_cfa_offset 4
 1420              		.cfi_offset 4, -4
 1421 000c 12E0     		b	.L53
 1422              	.L51:
 1423              	.LBB62:
 938:Core/Src/main.c ****         if (i < 6) {
 939:Core/Src/main.c ****             if (adc1_val[i] > 600) KEYPRESS |= 0b1 << i;
 940:Core/Src/main.c ****         } else {
 941:Core/Src/main.c ****             if (adc2_val[i - 6] > 600) KEYPRESS |= 0b1 << i;
 1424              		.loc 1 941 13 is_stmt 1 view .LVU474
 1425              		.loc 1 941 25 is_stmt 0 view .LVU475
 1426 000e 03F18042 		add	r2, r3, #1073741824
 1427 0012 063A     		subs	r2, r2, #6
 1428 0014 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1429              		.loc 1 941 16 view .LVU476
 1430 0018 B2F5167F 		cmp	r2, #600
 1431 001c 07D9     		bls	.L52
 1432              		.loc 1 941 40 is_stmt 1 discriminator 1 view .LVU477
 1433              		.loc 1 941 56 is_stmt 0 discriminator 1 view .LVU478
 1434 001e 0122     		movs	r2, #1
 1435 0020 9A40     		lsls	r2, r2, r3
 1436              		.loc 1 941 49 discriminator 1 view .LVU479
 1437 0022 0E4C     		ldr	r4, .L59
 1438 0024 B4F800C0 		ldrh	ip, [r4]
 1439 0028 42EA0C02 		orr	r2, r2, ip
 1440 002c 2280     		strh	r2, [r4]	@ movhi
ARM GAS  /tmp/ccrYMPR3.s 			page 47


 1441              	.L52:
 937:Core/Src/main.c ****         if (i < 6) {
 1442              		.loc 1 937 28 is_stmt 1 discriminator 2 view .LVU480
 937:Core/Src/main.c ****         if (i < 6) {
 1443              		.loc 1 937 29 is_stmt 0 discriminator 2 view .LVU481
 1444 002e 0133     		adds	r3, r3, #1
 1445              	.LVL83:
 937:Core/Src/main.c ****         if (i < 6) {
 1446              		.loc 1 937 20 is_stmt 1 discriminator 2 view .LVU482
 937:Core/Src/main.c ****         if (i < 6) {
 1447              		.loc 1 937 4 is_stmt 0 discriminator 2 view .LVU483
 1448 0030 0B2B     		cmp	r3, #11
 1449 0032 0FDC     		bgt	.L58
 1450              	.L53:
 938:Core/Src/main.c ****         if (i < 6) {
 1451              		.loc 1 938 9 is_stmt 1 view .LVU484
 938:Core/Src/main.c ****         if (i < 6) {
 1452              		.loc 1 938 12 is_stmt 0 view .LVU485
 1453 0034 052B     		cmp	r3, #5
 1454 0036 EADC     		bgt	.L51
 939:Core/Src/main.c ****         } else {
 1455              		.loc 1 939 13 is_stmt 1 view .LVU486
 939:Core/Src/main.c ****         } else {
 1456              		.loc 1 939 25 is_stmt 0 view .LVU487
 1457 0038 50F82320 		ldr	r2, [r0, r3, lsl #2]
 939:Core/Src/main.c ****         } else {
 1458              		.loc 1 939 16 view .LVU488
 1459 003c B2F5167F 		cmp	r2, #600
 1460 0040 F5D9     		bls	.L52
 939:Core/Src/main.c ****         } else {
 1461              		.loc 1 939 36 is_stmt 1 discriminator 1 view .LVU489
 939:Core/Src/main.c ****         } else {
 1462              		.loc 1 939 52 is_stmt 0 discriminator 1 view .LVU490
 1463 0042 0122     		movs	r2, #1
 1464 0044 9A40     		lsls	r2, r2, r3
 939:Core/Src/main.c ****         } else {
 1465              		.loc 1 939 45 discriminator 1 view .LVU491
 1466 0046 054C     		ldr	r4, .L59
 1467 0048 B4F800C0 		ldrh	ip, [r4]
 1468 004c 42EA0C02 		orr	r2, r2, ip
 1469 0050 2280     		strh	r2, [r4]	@ movhi
 1470 0052 ECE7     		b	.L52
 1471              	.L58:
 939:Core/Src/main.c ****         } else {
 1472              		.loc 1 939 45 discriminator 1 view .LVU492
 1473              	.LBE62:
 942:Core/Src/main.c ****         }
 943:Core/Src/main.c ****     }
 944:Core/Src/main.c **** }
 1474              		.loc 1 944 1 view .LVU493
 1475 0054 5DF8044B 		ldr	r4, [sp], #4
 1476              	.LCFI15:
 1477              		.cfi_restore 4
 1478              		.cfi_def_cfa_offset 0
 1479 0058 7047     		bx	lr
 1480              	.L57:
 1481              		.loc 1 944 1 view .LVU494
ARM GAS  /tmp/ccrYMPR3.s 			page 48


 1482 005a 7047     		bx	lr
 1483              	.L60:
 1484              		.align	2
 1485              	.L59:
 1486 005c 00000000 		.word	.LANCHOR1
 1487              		.cfi_endproc
 1488              	.LFE220:
 1490              		.section	.text.HALL_TO_DAC,"ax",%progbits
 1491              		.align	1
 1492              		.global	HALL_TO_DAC
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	HALL_TO_DAC:
 1499              	.LVL84:
 1500              	.LFB221:
 945:Core/Src/main.c **** 
 946:Core/Src/main.c **** /* HALL EFFECT TO DAC OUTPUT CONVERSION */
 947:Core/Src/main.c **** 
 948:Core/Src/main.c **** uint8_t HALL_TO_DAC(uint32_t adc1_val[], uint32_t adc2_val[], int octave_num) {
 1501              		.loc 1 948 79 is_stmt 1 view -0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505              		@ link register save eliminated.
 949:Core/Src/main.c ****     int channel_num = 12;
 1506              		.loc 1 949 5 view .LVU496
 950:Core/Src/main.c ****     
 951:Core/Src/main.c ****    for (int i = 0; i < 12; i++) {
 1507              		.loc 1 951 4 view .LVU497
 1508              	.LBB63:
 1509              		.loc 1 951 9 view .LVU498
 1510              		.loc 1 951 13 is_stmt 0 view .LVU499
 1511 0000 0023     		movs	r3, #0
 1512              	.LVL85:
 1513              		.loc 1 951 20 is_stmt 1 view .LVU500
 1514              		.loc 1 951 4 is_stmt 0 view .LVU501
 1515 0002 0B2B     		cmp	r3, #11
 1516 0004 00F33281 		bgt	.L267
 1517              	.LBE63:
 948:Core/Src/main.c ****     int channel_num = 12;
 1518              		.loc 1 948 79 view .LVU502
 1519 0008 10B4     		push	{r4}
 1520              	.LCFI16:
 1521              		.cfi_def_cfa_offset 4
 1522              		.cfi_offset 4, -4
 1523 000a 0BE0     		b	.L66
 1524              	.L63:
 1525              	.LBB64:
 952:Core/Src/main.c ****         if (i < 6) {
 953:Core/Src/main.c ****             if (adc1_val[i] > 600) {
 954:Core/Src/main.c ****                 channel_num = i;
 955:Core/Src/main.c ****                 break;
 956:Core/Src/main.c ****             }
 957:Core/Src/main.c ****         } else {
 958:Core/Src/main.c ****             if (adc2_val[i - 6] > 600) {
ARM GAS  /tmp/ccrYMPR3.s 			page 49


 1526              		.loc 1 958 13 is_stmt 1 view .LVU503
 1527              		.loc 1 958 25 is_stmt 0 view .LVU504
 1528 000c 03F1804C 		add	ip, r3, #1073741824
 1529 0010 ACF1060C 		sub	ip, ip, #6
 1530 0014 51F82C40 		ldr	r4, [r1, ip, lsl #2]
 1531              		.loc 1 958 16 view .LVU505
 1532 0018 B4F5167F 		cmp	r4, #600
 1533 001c 0BD8     		bhi	.L64
 1534              	.L65:
 951:Core/Src/main.c ****         if (i < 6) {
 1535              		.loc 1 951 28 is_stmt 1 discriminator 2 view .LVU506
 951:Core/Src/main.c ****         if (i < 6) {
 1536              		.loc 1 951 29 is_stmt 0 discriminator 2 view .LVU507
 1537 001e 0133     		adds	r3, r3, #1
 1538              	.LVL86:
 951:Core/Src/main.c ****         if (i < 6) {
 1539              		.loc 1 951 20 is_stmt 1 discriminator 2 view .LVU508
 951:Core/Src/main.c ****         if (i < 6) {
 1540              		.loc 1 951 4 is_stmt 0 discriminator 2 view .LVU509
 1541 0020 0B2B     		cmp	r3, #11
 1542 0022 07DC     		bgt	.L268
 1543              	.L66:
 952:Core/Src/main.c ****         if (i < 6) {
 1544              		.loc 1 952 9 is_stmt 1 view .LVU510
 952:Core/Src/main.c ****         if (i < 6) {
 1545              		.loc 1 952 12 is_stmt 0 view .LVU511
 1546 0024 052B     		cmp	r3, #5
 1547 0026 F1DC     		bgt	.L63
 953:Core/Src/main.c ****                 channel_num = i;
 1548              		.loc 1 953 13 is_stmt 1 view .LVU512
 953:Core/Src/main.c ****                 channel_num = i;
 1549              		.loc 1 953 25 is_stmt 0 view .LVU513
 1550 0028 50F82340 		ldr	r4, [r0, r3, lsl #2]
 953:Core/Src/main.c ****                 channel_num = i;
 1551              		.loc 1 953 16 view .LVU514
 1552 002c B4F5167F 		cmp	r4, #600
 1553 0030 F5D9     		bls	.L65
 1554 0032 00E0     		b	.L64
 1555              	.L268:
 953:Core/Src/main.c ****                 channel_num = i;
 1556              		.loc 1 953 16 view .LVU515
 1557              	.LBE64:
 949:Core/Src/main.c ****     
 1558              		.loc 1 949 9 view .LVU516
 1559 0034 0C23     		movs	r3, #12
 1560              	.LVL87:
 1561              	.L64:
 959:Core/Src/main.c ****                 channel_num = i;
 960:Core/Src/main.c ****                 break;
 961:Core/Src/main.c ****             }
 962:Core/Src/main.c ****         }
 963:Core/Src/main.c ****     }
 964:Core/Src/main.c ****     
 965:Core/Src/main.c ****     if (octave_num == 0) { // 0-50
 1562              		.loc 1 965 5 is_stmt 1 view .LVU517
 1563              		.loc 1 965 8 is_stmt 0 view .LVU518
 1564 0036 2ABB     		cbnz	r2, .L67
ARM GAS  /tmp/ccrYMPR3.s 			page 50


 966:Core/Src/main.c ****         if (channel_num == 0) {
 1565              		.loc 1 966 9 is_stmt 1 view .LVU519
 1566              		.loc 1 966 12 is_stmt 0 view .LVU520
 1567 0038 002B     		cmp	r3, #0
 1568 003a 00F09D80 		beq	.L72
 967:Core/Src/main.c ****             return 3;
 968:Core/Src/main.c ****         } else if (channel_num == 1) {
 1569              		.loc 1 968 16 is_stmt 1 view .LVU521
 1570              		.loc 1 968 19 is_stmt 0 view .LVU522
 1571 003e 012B     		cmp	r3, #1
 1572 0040 00F09E80 		beq	.L73
 969:Core/Src/main.c ****             return 7;
 970:Core/Src/main.c ****         } else if (channel_num == 2) {
 1573              		.loc 1 970 16 is_stmt 1 view .LVU523
 1574              		.loc 1 970 19 is_stmt 0 view .LVU524
 1575 0044 022B     		cmp	r3, #2
 1576 0046 00F09D80 		beq	.L74
 971:Core/Src/main.c ****             return 11;
 972:Core/Src/main.c ****         } else if (channel_num == 3) {
 1577              		.loc 1 972 16 is_stmt 1 view .LVU525
 1578              		.loc 1 972 19 is_stmt 0 view .LVU526
 1579 004a 032B     		cmp	r3, #3
 1580 004c 00F09C80 		beq	.L75
 973:Core/Src/main.c ****             return 15;
 974:Core/Src/main.c ****         } else if (channel_num == 4) {
 1581              		.loc 1 974 16 is_stmt 1 view .LVU527
 1582              		.loc 1 974 19 is_stmt 0 view .LVU528
 1583 0050 042B     		cmp	r3, #4
 1584 0052 00F09B80 		beq	.L76
 975:Core/Src/main.c ****             return 19;
 976:Core/Src/main.c ****         } else if (channel_num == 5) {
 1585              		.loc 1 976 16 is_stmt 1 view .LVU529
 1586              		.loc 1 976 19 is_stmt 0 view .LVU530
 1587 0056 052B     		cmp	r3, #5
 1588 0058 00F09A80 		beq	.L77
 977:Core/Src/main.c ****             return 23;
 978:Core/Src/main.c ****         } else if (channel_num == 6) {
 1589              		.loc 1 978 16 is_stmt 1 view .LVU531
 1590              		.loc 1 978 19 is_stmt 0 view .LVU532
 1591 005c 062B     		cmp	r3, #6
 1592 005e 00F09980 		beq	.L78
 979:Core/Src/main.c ****             return 27;
 980:Core/Src/main.c ****         } else if (channel_num == 7) {
 1593              		.loc 1 980 16 is_stmt 1 view .LVU533
 1594              		.loc 1 980 19 is_stmt 0 view .LVU534
 1595 0062 072B     		cmp	r3, #7
 1596 0064 00F09880 		beq	.L79
 981:Core/Src/main.c ****             return 31;
 982:Core/Src/main.c ****         } else if (channel_num == 8) {
 1597              		.loc 1 982 16 is_stmt 1 view .LVU535
 1598              		.loc 1 982 19 is_stmt 0 view .LVU536
 1599 0068 082B     		cmp	r3, #8
 1600 006a 00F09780 		beq	.L80
 983:Core/Src/main.c ****             return 35;
 984:Core/Src/main.c ****         } else if (channel_num == 9) {
 1601              		.loc 1 984 16 is_stmt 1 view .LVU537
 1602              		.loc 1 984 19 is_stmt 0 view .LVU538
ARM GAS  /tmp/ccrYMPR3.s 			page 51


 1603 006e 092B     		cmp	r3, #9
 1604 0070 00F09680 		beq	.L81
 985:Core/Src/main.c ****             return 39;
 986:Core/Src/main.c ****         } else if (channel_num == 10) {
 1605              		.loc 1 986 16 is_stmt 1 view .LVU539
 1606              		.loc 1 986 19 is_stmt 0 view .LVU540
 1607 0074 0A2B     		cmp	r3, #10
 1608 0076 00F09580 		beq	.L82
 987:Core/Src/main.c ****             return 43;
 988:Core/Src/main.c ****         } else if (channel_num == 11) {
 1609              		.loc 1 988 16 is_stmt 1 view .LVU541
 1610              		.loc 1 988 19 is_stmt 0 view .LVU542
 1611 007a 0B2B     		cmp	r3, #11
 1612 007c 00F09480 		beq	.L83
 989:Core/Src/main.c ****             return 47;
 990:Core/Src/main.c ****         }
 991:Core/Src/main.c ****     } else if (octave_num == 1) { // 51-101
 992:Core/Src/main.c ****         if (channel_num == 0) {
 993:Core/Src/main.c ****             return 54;
 994:Core/Src/main.c ****         } else if (channel_num == 1) {
 995:Core/Src/main.c ****             return 58;
 996:Core/Src/main.c ****         } else if (channel_num == 2) {
 997:Core/Src/main.c ****             return 62;
 998:Core/Src/main.c ****         } else if (channel_num == 3) {
 999:Core/Src/main.c ****             return 66;
1000:Core/Src/main.c ****         } else if (channel_num == 4) {
1001:Core/Src/main.c ****             return 70;
1002:Core/Src/main.c ****         } else if (channel_num == 5) {
1003:Core/Src/main.c ****             return 74;
1004:Core/Src/main.c ****         } else if (channel_num == 6) {
1005:Core/Src/main.c ****             return 78;
1006:Core/Src/main.c ****         } else if (channel_num == 7) {
1007:Core/Src/main.c ****             return 82;
1008:Core/Src/main.c ****         } else if (channel_num == 8) {
1009:Core/Src/main.c ****             return 86;
1010:Core/Src/main.c ****         } else if (channel_num == 9) {
1011:Core/Src/main.c ****             return 90;
1012:Core/Src/main.c ****         } else if (channel_num == 10) {
1013:Core/Src/main.c ****             return 94;
1014:Core/Src/main.c ****         } else if (channel_num == 11) {
1015:Core/Src/main.c ****             return 98;
1016:Core/Src/main.c ****         }
1017:Core/Src/main.c ****     } else if (octave_num == 2) { // 102-152
1018:Core/Src/main.c ****         if (channel_num == 0) {
1019:Core/Src/main.c ****             return 105;
1020:Core/Src/main.c ****         } else if (channel_num == 1) {
1021:Core/Src/main.c ****             return 109;
1022:Core/Src/main.c ****         } else if (channel_num == 2) {
1023:Core/Src/main.c ****             return 113;
1024:Core/Src/main.c ****         } else if (channel_num == 3) {
1025:Core/Src/main.c ****             return 117;
1026:Core/Src/main.c ****         } else if (channel_num == 4) {
1027:Core/Src/main.c ****             return 121;
1028:Core/Src/main.c ****         } else if (channel_num == 5) {
1029:Core/Src/main.c ****             return 125;
1030:Core/Src/main.c ****         } else if (channel_num == 6) {
1031:Core/Src/main.c ****             return 129;
ARM GAS  /tmp/ccrYMPR3.s 			page 52


1032:Core/Src/main.c ****         } else if (channel_num == 7) {
1033:Core/Src/main.c ****             return 133;
1034:Core/Src/main.c ****         } else if (channel_num == 8) {
1035:Core/Src/main.c ****             return 137;
1036:Core/Src/main.c ****         } else if (channel_num == 9) {
1037:Core/Src/main.c ****             return 141;
1038:Core/Src/main.c ****         } else if (channel_num == 10) {
1039:Core/Src/main.c ****             return 145;
1040:Core/Src/main.c ****         } else if (channel_num == 11) {
1041:Core/Src/main.c ****             return 149;
1042:Core/Src/main.c ****         }
1043:Core/Src/main.c ****     } else if (octave_num == 3) { // 153-203
1044:Core/Src/main.c ****         if (channel_num == 0) {
1045:Core/Src/main.c ****             return 156;
1046:Core/Src/main.c ****         } else if (channel_num == 1) {
1047:Core/Src/main.c ****             return 160;
1048:Core/Src/main.c ****         } else if (channel_num == 2) {
1049:Core/Src/main.c ****             return 164;
1050:Core/Src/main.c ****         } else if (channel_num == 3) {
1051:Core/Src/main.c ****             return 168;
1052:Core/Src/main.c ****         } else if (channel_num == 4) {
1053:Core/Src/main.c ****             return 172;
1054:Core/Src/main.c ****         } else if (channel_num == 5) {
1055:Core/Src/main.c ****             return 176;
1056:Core/Src/main.c ****         } else if (channel_num == 6) {
1057:Core/Src/main.c ****             return 180;
1058:Core/Src/main.c ****         } else if (channel_num == 7) {
1059:Core/Src/main.c ****             return 184;
1060:Core/Src/main.c ****         } else if (channel_num == 8) {
1061:Core/Src/main.c ****             return 188;
1062:Core/Src/main.c ****         } else if (channel_num == 9) {
1063:Core/Src/main.c ****             return 192;
1064:Core/Src/main.c ****         } else if (channel_num == 10) {
1065:Core/Src/main.c ****             return 196;
1066:Core/Src/main.c ****         } else if (channel_num == 11) {
1067:Core/Src/main.c ****             return 200;
1068:Core/Src/main.c ****         }
1069:Core/Src/main.c ****     } else { // 204-255
1070:Core/Src/main.c ****         if (channel_num == 0) {
1071:Core/Src/main.c ****             return 207;
1072:Core/Src/main.c ****         } else if (channel_num == 1) {
1073:Core/Src/main.c ****             return 211;
1074:Core/Src/main.c ****         } else if (channel_num == 2) {
1075:Core/Src/main.c ****             return 215;
1076:Core/Src/main.c ****         } else if (channel_num == 3) {
1077:Core/Src/main.c ****             return 219;
1078:Core/Src/main.c ****         } else if (channel_num == 4) {
1079:Core/Src/main.c ****             return 223;
1080:Core/Src/main.c ****         } else if (channel_num == 5) {
1081:Core/Src/main.c ****             return 227;
1082:Core/Src/main.c ****         } else if (channel_num == 6) {
1083:Core/Src/main.c ****             return 231;
1084:Core/Src/main.c ****         } else if (channel_num == 7) {
1085:Core/Src/main.c ****             return 235;
1086:Core/Src/main.c ****         } else if (channel_num == 8) {
1087:Core/Src/main.c ****             return 239;
1088:Core/Src/main.c ****         } else if (channel_num == 9) {
ARM GAS  /tmp/ccrYMPR3.s 			page 53


1089:Core/Src/main.c ****             return 243;
1090:Core/Src/main.c ****         } else if (channel_num == 10) {
1091:Core/Src/main.c ****             return 247;
1092:Core/Src/main.c ****         } else if (channel_num == 11) {
1093:Core/Src/main.c ****             return 251;
1094:Core/Src/main.c ****         } 
1095:Core/Src/main.c ****     }
1096:Core/Src/main.c ****     return 0x0;
 1613              		.loc 1 1096 12 view .LVU543
 1614 0080 0020     		movs	r0, #0
 1615              	.LVL88:
 1616              		.loc 1 1096 12 view .LVU544
 1617 0082 7AE0     		b	.L68
 1618              	.LVL89:
 1619              	.L67:
 991:Core/Src/main.c ****         if (channel_num == 0) {
 1620              		.loc 1 991 12 is_stmt 1 view .LVU545
 991:Core/Src/main.c ****         if (channel_num == 0) {
 1621              		.loc 1 991 15 is_stmt 0 view .LVU546
 1622 0084 012A     		cmp	r2, #1
 1623 0086 29D0     		beq	.L269
1017:Core/Src/main.c ****         if (channel_num == 0) {
 1624              		.loc 1 1017 12 is_stmt 1 view .LVU547
1017:Core/Src/main.c ****         if (channel_num == 0) {
 1625              		.loc 1 1017 15 is_stmt 0 view .LVU548
 1626 0088 022A     		cmp	r2, #2
 1627 008a 41D0     		beq	.L270
1043:Core/Src/main.c ****         if (channel_num == 0) {
 1628              		.loc 1 1043 12 is_stmt 1 view .LVU549
1043:Core/Src/main.c ****         if (channel_num == 0) {
 1629              		.loc 1 1043 15 is_stmt 0 view .LVU550
 1630 008c 032A     		cmp	r2, #3
 1631 008e 59D0     		beq	.L271
1070:Core/Src/main.c ****             return 207;
 1632              		.loc 1 1070 9 is_stmt 1 view .LVU551
1070:Core/Src/main.c ****             return 207;
 1633              		.loc 1 1070 12 is_stmt 0 view .LVU552
 1634 0090 002B     		cmp	r3, #0
 1635 0092 00F0D380 		beq	.L120
1072:Core/Src/main.c ****             return 211;
 1636              		.loc 1 1072 16 is_stmt 1 view .LVU553
1072:Core/Src/main.c ****             return 211;
 1637              		.loc 1 1072 19 is_stmt 0 view .LVU554
 1638 0096 012B     		cmp	r3, #1
 1639 0098 00F0D280 		beq	.L121
1074:Core/Src/main.c ****             return 215;
 1640              		.loc 1 1074 16 is_stmt 1 view .LVU555
1074:Core/Src/main.c ****             return 215;
 1641              		.loc 1 1074 19 is_stmt 0 view .LVU556
 1642 009c 022B     		cmp	r3, #2
 1643 009e 00F0D180 		beq	.L122
1076:Core/Src/main.c ****             return 219;
 1644              		.loc 1 1076 16 is_stmt 1 view .LVU557
1076:Core/Src/main.c ****             return 219;
 1645              		.loc 1 1076 19 is_stmt 0 view .LVU558
 1646 00a2 032B     		cmp	r3, #3
 1647 00a4 00F0D080 		beq	.L123
ARM GAS  /tmp/ccrYMPR3.s 			page 54


1078:Core/Src/main.c ****             return 223;
 1648              		.loc 1 1078 16 is_stmt 1 view .LVU559
1078:Core/Src/main.c ****             return 223;
 1649              		.loc 1 1078 19 is_stmt 0 view .LVU560
 1650 00a8 042B     		cmp	r3, #4
 1651 00aa 00F0CF80 		beq	.L124
1080:Core/Src/main.c ****             return 227;
 1652              		.loc 1 1080 16 is_stmt 1 view .LVU561
1080:Core/Src/main.c ****             return 227;
 1653              		.loc 1 1080 19 is_stmt 0 view .LVU562
 1654 00ae 052B     		cmp	r3, #5
 1655 00b0 00F0CE80 		beq	.L125
1082:Core/Src/main.c ****             return 231;
 1656              		.loc 1 1082 16 is_stmt 1 view .LVU563
1082:Core/Src/main.c ****             return 231;
 1657              		.loc 1 1082 19 is_stmt 0 view .LVU564
 1658 00b4 062B     		cmp	r3, #6
 1659 00b6 00F0CD80 		beq	.L126
1084:Core/Src/main.c ****             return 235;
 1660              		.loc 1 1084 16 is_stmt 1 view .LVU565
1084:Core/Src/main.c ****             return 235;
 1661              		.loc 1 1084 19 is_stmt 0 view .LVU566
 1662 00ba 072B     		cmp	r3, #7
 1663 00bc 00F0CC80 		beq	.L127
1086:Core/Src/main.c ****             return 239;
 1664              		.loc 1 1086 16 is_stmt 1 view .LVU567
1086:Core/Src/main.c ****             return 239;
 1665              		.loc 1 1086 19 is_stmt 0 view .LVU568
 1666 00c0 082B     		cmp	r3, #8
 1667 00c2 00F0CB80 		beq	.L128
1088:Core/Src/main.c ****             return 243;
 1668              		.loc 1 1088 16 is_stmt 1 view .LVU569
1088:Core/Src/main.c ****             return 243;
 1669              		.loc 1 1088 19 is_stmt 0 view .LVU570
 1670 00c6 092B     		cmp	r3, #9
 1671 00c8 00F0CA80 		beq	.L129
1090:Core/Src/main.c ****             return 247;
 1672              		.loc 1 1090 16 is_stmt 1 view .LVU571
1090:Core/Src/main.c ****             return 247;
 1673              		.loc 1 1090 19 is_stmt 0 view .LVU572
 1674 00cc 0A2B     		cmp	r3, #10
 1675 00ce 00F0C980 		beq	.L130
1092:Core/Src/main.c ****             return 251;
 1676              		.loc 1 1092 16 is_stmt 1 view .LVU573
1092:Core/Src/main.c ****             return 251;
 1677              		.loc 1 1092 19 is_stmt 0 view .LVU574
 1678 00d2 0B2B     		cmp	r3, #11
 1679 00d4 00F0C880 		beq	.L131
 1680              		.loc 1 1096 12 view .LVU575
 1681 00d8 0020     		movs	r0, #0
 1682              	.LVL90:
 1683              		.loc 1 1096 12 view .LVU576
 1684 00da 4EE0     		b	.L68
 1685              	.LVL91:
 1686              	.L269:
 992:Core/Src/main.c ****             return 54;
 1687              		.loc 1 992 9 is_stmt 1 view .LVU577
ARM GAS  /tmp/ccrYMPR3.s 			page 55


 992:Core/Src/main.c ****             return 54;
 1688              		.loc 1 992 12 is_stmt 0 view .LVU578
 1689 00dc 002B     		cmp	r3, #0
 1690 00de 65D0     		beq	.L84
 994:Core/Src/main.c ****             return 58;
 1691              		.loc 1 994 16 is_stmt 1 view .LVU579
 994:Core/Src/main.c ****             return 58;
 1692              		.loc 1 994 19 is_stmt 0 view .LVU580
 1693 00e0 012B     		cmp	r3, #1
 1694 00e2 65D0     		beq	.L85
 996:Core/Src/main.c ****             return 62;
 1695              		.loc 1 996 16 is_stmt 1 view .LVU581
 996:Core/Src/main.c ****             return 62;
 1696              		.loc 1 996 19 is_stmt 0 view .LVU582
 1697 00e4 022B     		cmp	r3, #2
 1698 00e6 65D0     		beq	.L86
 998:Core/Src/main.c ****             return 66;
 1699              		.loc 1 998 16 is_stmt 1 view .LVU583
 998:Core/Src/main.c ****             return 66;
 1700              		.loc 1 998 19 is_stmt 0 view .LVU584
 1701 00e8 032B     		cmp	r3, #3
 1702 00ea 65D0     		beq	.L87
1000:Core/Src/main.c ****             return 70;
 1703              		.loc 1 1000 16 is_stmt 1 view .LVU585
1000:Core/Src/main.c ****             return 70;
 1704              		.loc 1 1000 19 is_stmt 0 view .LVU586
 1705 00ec 042B     		cmp	r3, #4
 1706 00ee 65D0     		beq	.L88
1002:Core/Src/main.c ****             return 74;
 1707              		.loc 1 1002 16 is_stmt 1 view .LVU587
1002:Core/Src/main.c ****             return 74;
 1708              		.loc 1 1002 19 is_stmt 0 view .LVU588
 1709 00f0 052B     		cmp	r3, #5
 1710 00f2 65D0     		beq	.L89
1004:Core/Src/main.c ****             return 78;
 1711              		.loc 1 1004 16 is_stmt 1 view .LVU589
1004:Core/Src/main.c ****             return 78;
 1712              		.loc 1 1004 19 is_stmt 0 view .LVU590
 1713 00f4 062B     		cmp	r3, #6
 1714 00f6 65D0     		beq	.L90
1006:Core/Src/main.c ****             return 82;
 1715              		.loc 1 1006 16 is_stmt 1 view .LVU591
1006:Core/Src/main.c ****             return 82;
 1716              		.loc 1 1006 19 is_stmt 0 view .LVU592
 1717 00f8 072B     		cmp	r3, #7
 1718 00fa 65D0     		beq	.L91
1008:Core/Src/main.c ****             return 86;
 1719              		.loc 1 1008 16 is_stmt 1 view .LVU593
1008:Core/Src/main.c ****             return 86;
 1720              		.loc 1 1008 19 is_stmt 0 view .LVU594
 1721 00fc 082B     		cmp	r3, #8
 1722 00fe 65D0     		beq	.L92
1010:Core/Src/main.c ****             return 90;
 1723              		.loc 1 1010 16 is_stmt 1 view .LVU595
1010:Core/Src/main.c ****             return 90;
 1724              		.loc 1 1010 19 is_stmt 0 view .LVU596
 1725 0100 092B     		cmp	r3, #9
ARM GAS  /tmp/ccrYMPR3.s 			page 56


 1726 0102 65D0     		beq	.L93
1012:Core/Src/main.c ****             return 94;
 1727              		.loc 1 1012 16 is_stmt 1 view .LVU597
1012:Core/Src/main.c ****             return 94;
 1728              		.loc 1 1012 19 is_stmt 0 view .LVU598
 1729 0104 0A2B     		cmp	r3, #10
 1730 0106 65D0     		beq	.L94
1014:Core/Src/main.c ****             return 98;
 1731              		.loc 1 1014 16 is_stmt 1 view .LVU599
1014:Core/Src/main.c ****             return 98;
 1732              		.loc 1 1014 19 is_stmt 0 view .LVU600
 1733 0108 0B2B     		cmp	r3, #11
 1734 010a 65D0     		beq	.L95
 1735              		.loc 1 1096 12 view .LVU601
 1736 010c 0020     		movs	r0, #0
 1737              	.LVL92:
 1738              		.loc 1 1096 12 view .LVU602
 1739 010e 34E0     		b	.L68
 1740              	.LVL93:
 1741              	.L270:
1018:Core/Src/main.c ****             return 105;
 1742              		.loc 1 1018 9 is_stmt 1 view .LVU603
1018:Core/Src/main.c ****             return 105;
 1743              		.loc 1 1018 12 is_stmt 0 view .LVU604
 1744 0110 002B     		cmp	r3, #0
 1745 0112 63D0     		beq	.L96
1020:Core/Src/main.c ****             return 109;
 1746              		.loc 1 1020 16 is_stmt 1 view .LVU605
1020:Core/Src/main.c ****             return 109;
 1747              		.loc 1 1020 19 is_stmt 0 view .LVU606
 1748 0114 012B     		cmp	r3, #1
 1749 0116 63D0     		beq	.L97
1022:Core/Src/main.c ****             return 113;
 1750              		.loc 1 1022 16 is_stmt 1 view .LVU607
1022:Core/Src/main.c ****             return 113;
 1751              		.loc 1 1022 19 is_stmt 0 view .LVU608
 1752 0118 022B     		cmp	r3, #2
 1753 011a 63D0     		beq	.L98
1024:Core/Src/main.c ****             return 117;
 1754              		.loc 1 1024 16 is_stmt 1 view .LVU609
1024:Core/Src/main.c ****             return 117;
 1755              		.loc 1 1024 19 is_stmt 0 view .LVU610
 1756 011c 032B     		cmp	r3, #3
 1757 011e 63D0     		beq	.L99
1026:Core/Src/main.c ****             return 121;
 1758              		.loc 1 1026 16 is_stmt 1 view .LVU611
1026:Core/Src/main.c ****             return 121;
 1759              		.loc 1 1026 19 is_stmt 0 view .LVU612
 1760 0120 042B     		cmp	r3, #4
 1761 0122 63D0     		beq	.L100
1028:Core/Src/main.c ****             return 125;
 1762              		.loc 1 1028 16 is_stmt 1 view .LVU613
1028:Core/Src/main.c ****             return 125;
 1763              		.loc 1 1028 19 is_stmt 0 view .LVU614
 1764 0124 052B     		cmp	r3, #5
 1765 0126 63D0     		beq	.L101
1030:Core/Src/main.c ****             return 129;
ARM GAS  /tmp/ccrYMPR3.s 			page 57


 1766              		.loc 1 1030 16 is_stmt 1 view .LVU615
1030:Core/Src/main.c ****             return 129;
 1767              		.loc 1 1030 19 is_stmt 0 view .LVU616
 1768 0128 062B     		cmp	r3, #6
 1769 012a 63D0     		beq	.L102
1032:Core/Src/main.c ****             return 133;
 1770              		.loc 1 1032 16 is_stmt 1 view .LVU617
1032:Core/Src/main.c ****             return 133;
 1771              		.loc 1 1032 19 is_stmt 0 view .LVU618
 1772 012c 072B     		cmp	r3, #7
 1773 012e 63D0     		beq	.L103
1034:Core/Src/main.c ****             return 137;
 1774              		.loc 1 1034 16 is_stmt 1 view .LVU619
1034:Core/Src/main.c ****             return 137;
 1775              		.loc 1 1034 19 is_stmt 0 view .LVU620
 1776 0130 082B     		cmp	r3, #8
 1777 0132 63D0     		beq	.L104
1036:Core/Src/main.c ****             return 141;
 1778              		.loc 1 1036 16 is_stmt 1 view .LVU621
1036:Core/Src/main.c ****             return 141;
 1779              		.loc 1 1036 19 is_stmt 0 view .LVU622
 1780 0134 092B     		cmp	r3, #9
 1781 0136 63D0     		beq	.L105
1038:Core/Src/main.c ****             return 145;
 1782              		.loc 1 1038 16 is_stmt 1 view .LVU623
1038:Core/Src/main.c ****             return 145;
 1783              		.loc 1 1038 19 is_stmt 0 view .LVU624
 1784 0138 0A2B     		cmp	r3, #10
 1785 013a 63D0     		beq	.L106
1040:Core/Src/main.c ****             return 149;
 1786              		.loc 1 1040 16 is_stmt 1 view .LVU625
1040:Core/Src/main.c ****             return 149;
 1787              		.loc 1 1040 19 is_stmt 0 view .LVU626
 1788 013c 0B2B     		cmp	r3, #11
 1789 013e 63D0     		beq	.L107
 1790              		.loc 1 1096 12 view .LVU627
 1791 0140 0020     		movs	r0, #0
 1792              	.LVL94:
 1793              		.loc 1 1096 12 view .LVU628
 1794 0142 1AE0     		b	.L68
 1795              	.LVL95:
 1796              	.L271:
1044:Core/Src/main.c ****             return 156;
 1797              		.loc 1 1044 9 is_stmt 1 view .LVU629
1044:Core/Src/main.c ****             return 156;
 1798              		.loc 1 1044 12 is_stmt 0 view .LVU630
 1799 0144 002B     		cmp	r3, #0
 1800 0146 61D0     		beq	.L108
1046:Core/Src/main.c ****             return 160;
 1801              		.loc 1 1046 16 is_stmt 1 view .LVU631
1046:Core/Src/main.c ****             return 160;
 1802              		.loc 1 1046 19 is_stmt 0 view .LVU632
 1803 0148 012B     		cmp	r3, #1
 1804 014a 61D0     		beq	.L109
1048:Core/Src/main.c ****             return 164;
 1805              		.loc 1 1048 16 is_stmt 1 view .LVU633
1048:Core/Src/main.c ****             return 164;
ARM GAS  /tmp/ccrYMPR3.s 			page 58


 1806              		.loc 1 1048 19 is_stmt 0 view .LVU634
 1807 014c 022B     		cmp	r3, #2
 1808 014e 61D0     		beq	.L110
1050:Core/Src/main.c ****             return 168;
 1809              		.loc 1 1050 16 is_stmt 1 view .LVU635
1050:Core/Src/main.c ****             return 168;
 1810              		.loc 1 1050 19 is_stmt 0 view .LVU636
 1811 0150 032B     		cmp	r3, #3
 1812 0152 61D0     		beq	.L111
1052:Core/Src/main.c ****             return 172;
 1813              		.loc 1 1052 16 is_stmt 1 view .LVU637
1052:Core/Src/main.c ****             return 172;
 1814              		.loc 1 1052 19 is_stmt 0 view .LVU638
 1815 0154 042B     		cmp	r3, #4
 1816 0156 61D0     		beq	.L112
1054:Core/Src/main.c ****             return 176;
 1817              		.loc 1 1054 16 is_stmt 1 view .LVU639
1054:Core/Src/main.c ****             return 176;
 1818              		.loc 1 1054 19 is_stmt 0 view .LVU640
 1819 0158 052B     		cmp	r3, #5
 1820 015a 61D0     		beq	.L113
1056:Core/Src/main.c ****             return 180;
 1821              		.loc 1 1056 16 is_stmt 1 view .LVU641
1056:Core/Src/main.c ****             return 180;
 1822              		.loc 1 1056 19 is_stmt 0 view .LVU642
 1823 015c 062B     		cmp	r3, #6
 1824 015e 61D0     		beq	.L114
1058:Core/Src/main.c ****             return 184;
 1825              		.loc 1 1058 16 is_stmt 1 view .LVU643
1058:Core/Src/main.c ****             return 184;
 1826              		.loc 1 1058 19 is_stmt 0 view .LVU644
 1827 0160 072B     		cmp	r3, #7
 1828 0162 61D0     		beq	.L115
1060:Core/Src/main.c ****             return 188;
 1829              		.loc 1 1060 16 is_stmt 1 view .LVU645
1060:Core/Src/main.c ****             return 188;
 1830              		.loc 1 1060 19 is_stmt 0 view .LVU646
 1831 0164 082B     		cmp	r3, #8
 1832 0166 61D0     		beq	.L116
1062:Core/Src/main.c ****             return 192;
 1833              		.loc 1 1062 16 is_stmt 1 view .LVU647
1062:Core/Src/main.c ****             return 192;
 1834              		.loc 1 1062 19 is_stmt 0 view .LVU648
 1835 0168 092B     		cmp	r3, #9
 1836 016a 61D0     		beq	.L117
1064:Core/Src/main.c ****             return 196;
 1837              		.loc 1 1064 16 is_stmt 1 view .LVU649
1064:Core/Src/main.c ****             return 196;
 1838              		.loc 1 1064 19 is_stmt 0 view .LVU650
 1839 016c 0A2B     		cmp	r3, #10
 1840 016e 61D0     		beq	.L118
1066:Core/Src/main.c ****             return 200;
 1841              		.loc 1 1066 16 is_stmt 1 view .LVU651
1066:Core/Src/main.c ****             return 200;
 1842              		.loc 1 1066 19 is_stmt 0 view .LVU652
 1843 0170 0B2B     		cmp	r3, #11
 1844 0172 61D0     		beq	.L119
ARM GAS  /tmp/ccrYMPR3.s 			page 59


 1845              		.loc 1 1096 12 view .LVU653
 1846 0174 0020     		movs	r0, #0
 1847              	.LVL96:
 1848              		.loc 1 1096 12 view .LVU654
 1849 0176 00E0     		b	.L68
 1850              	.LVL97:
 1851              	.L72:
 967:Core/Src/main.c ****         } else if (channel_num == 1) {
 1852              		.loc 1 967 20 view .LVU655
 1853 0178 0320     		movs	r0, #3
 1854              	.LVL98:
 1855              	.L68:
1097:Core/Src/main.c **** }
 1856              		.loc 1 1097 1 view .LVU656
 1857 017a 5DF8044B 		ldr	r4, [sp], #4
 1858              	.LCFI17:
 1859              		.cfi_remember_state
 1860              		.cfi_restore 4
 1861              		.cfi_def_cfa_offset 0
 1862 017e 7047     		bx	lr
 1863              	.LVL99:
 1864              	.L73:
 1865              	.LCFI18:
 1866              		.cfi_restore_state
 969:Core/Src/main.c ****         } else if (channel_num == 2) {
 1867              		.loc 1 969 20 view .LVU657
 1868 0180 0720     		movs	r0, #7
 1869              	.LVL100:
 969:Core/Src/main.c ****         } else if (channel_num == 2) {
 1870              		.loc 1 969 20 view .LVU658
 1871 0182 FAE7     		b	.L68
 1872              	.LVL101:
 1873              	.L74:
 971:Core/Src/main.c ****         } else if (channel_num == 3) {
 1874              		.loc 1 971 20 view .LVU659
 1875 0184 0B20     		movs	r0, #11
 1876              	.LVL102:
 971:Core/Src/main.c ****         } else if (channel_num == 3) {
 1877              		.loc 1 971 20 view .LVU660
 1878 0186 F8E7     		b	.L68
 1879              	.LVL103:
 1880              	.L75:
 973:Core/Src/main.c ****         } else if (channel_num == 4) {
 1881              		.loc 1 973 20 view .LVU661
 1882 0188 0F20     		movs	r0, #15
 1883              	.LVL104:
 973:Core/Src/main.c ****         } else if (channel_num == 4) {
 1884              		.loc 1 973 20 view .LVU662
 1885 018a F6E7     		b	.L68
 1886              	.LVL105:
 1887              	.L76:
 975:Core/Src/main.c ****         } else if (channel_num == 5) {
 1888              		.loc 1 975 20 view .LVU663
 1889 018c 1320     		movs	r0, #19
 1890              	.LVL106:
 975:Core/Src/main.c ****         } else if (channel_num == 5) {
 1891              		.loc 1 975 20 view .LVU664
ARM GAS  /tmp/ccrYMPR3.s 			page 60


 1892 018e F4E7     		b	.L68
 1893              	.LVL107:
 1894              	.L77:
 977:Core/Src/main.c ****         } else if (channel_num == 6) {
 1895              		.loc 1 977 20 view .LVU665
 1896 0190 1720     		movs	r0, #23
 1897              	.LVL108:
 977:Core/Src/main.c ****         } else if (channel_num == 6) {
 1898              		.loc 1 977 20 view .LVU666
 1899 0192 F2E7     		b	.L68
 1900              	.LVL109:
 1901              	.L78:
 979:Core/Src/main.c ****         } else if (channel_num == 7) {
 1902              		.loc 1 979 20 view .LVU667
 1903 0194 1B20     		movs	r0, #27
 1904              	.LVL110:
 979:Core/Src/main.c ****         } else if (channel_num == 7) {
 1905              		.loc 1 979 20 view .LVU668
 1906 0196 F0E7     		b	.L68
 1907              	.LVL111:
 1908              	.L79:
 981:Core/Src/main.c ****         } else if (channel_num == 8) {
 1909              		.loc 1 981 20 view .LVU669
 1910 0198 1F20     		movs	r0, #31
 1911              	.LVL112:
 981:Core/Src/main.c ****         } else if (channel_num == 8) {
 1912              		.loc 1 981 20 view .LVU670
 1913 019a EEE7     		b	.L68
 1914              	.LVL113:
 1915              	.L80:
 983:Core/Src/main.c ****         } else if (channel_num == 9) {
 1916              		.loc 1 983 20 view .LVU671
 1917 019c 2320     		movs	r0, #35
 1918              	.LVL114:
 983:Core/Src/main.c ****         } else if (channel_num == 9) {
 1919              		.loc 1 983 20 view .LVU672
 1920 019e ECE7     		b	.L68
 1921              	.LVL115:
 1922              	.L81:
 985:Core/Src/main.c ****         } else if (channel_num == 10) {
 1923              		.loc 1 985 20 view .LVU673
 1924 01a0 2720     		movs	r0, #39
 1925              	.LVL116:
 985:Core/Src/main.c ****         } else if (channel_num == 10) {
 1926              		.loc 1 985 20 view .LVU674
 1927 01a2 EAE7     		b	.L68
 1928              	.LVL117:
 1929              	.L82:
 987:Core/Src/main.c ****         } else if (channel_num == 11) {
 1930              		.loc 1 987 20 view .LVU675
 1931 01a4 2B20     		movs	r0, #43
 1932              	.LVL118:
 987:Core/Src/main.c ****         } else if (channel_num == 11) {
 1933              		.loc 1 987 20 view .LVU676
 1934 01a6 E8E7     		b	.L68
 1935              	.LVL119:
 1936              	.L83:
ARM GAS  /tmp/ccrYMPR3.s 			page 61


 989:Core/Src/main.c ****         }
 1937              		.loc 1 989 20 view .LVU677
 1938 01a8 2F20     		movs	r0, #47
 1939              	.LVL120:
 989:Core/Src/main.c ****         }
 1940              		.loc 1 989 20 view .LVU678
 1941 01aa E6E7     		b	.L68
 1942              	.LVL121:
 1943              	.L84:
 993:Core/Src/main.c ****         } else if (channel_num == 1) {
 1944              		.loc 1 993 20 view .LVU679
 1945 01ac 3620     		movs	r0, #54
 1946              	.LVL122:
 993:Core/Src/main.c ****         } else if (channel_num == 1) {
 1947              		.loc 1 993 20 view .LVU680
 1948 01ae E4E7     		b	.L68
 1949              	.LVL123:
 1950              	.L85:
 995:Core/Src/main.c ****         } else if (channel_num == 2) {
 1951              		.loc 1 995 20 view .LVU681
 1952 01b0 3A20     		movs	r0, #58
 1953              	.LVL124:
 995:Core/Src/main.c ****         } else if (channel_num == 2) {
 1954              		.loc 1 995 20 view .LVU682
 1955 01b2 E2E7     		b	.L68
 1956              	.LVL125:
 1957              	.L86:
 997:Core/Src/main.c ****         } else if (channel_num == 3) {
 1958              		.loc 1 997 20 view .LVU683
 1959 01b4 3E20     		movs	r0, #62
 1960              	.LVL126:
 997:Core/Src/main.c ****         } else if (channel_num == 3) {
 1961              		.loc 1 997 20 view .LVU684
 1962 01b6 E0E7     		b	.L68
 1963              	.LVL127:
 1964              	.L87:
 999:Core/Src/main.c ****         } else if (channel_num == 4) {
 1965              		.loc 1 999 20 view .LVU685
 1966 01b8 4220     		movs	r0, #66
 1967              	.LVL128:
 999:Core/Src/main.c ****         } else if (channel_num == 4) {
 1968              		.loc 1 999 20 view .LVU686
 1969 01ba DEE7     		b	.L68
 1970              	.LVL129:
 1971              	.L88:
1001:Core/Src/main.c ****         } else if (channel_num == 5) {
 1972              		.loc 1 1001 20 view .LVU687
 1973 01bc 4620     		movs	r0, #70
 1974              	.LVL130:
1001:Core/Src/main.c ****         } else if (channel_num == 5) {
 1975              		.loc 1 1001 20 view .LVU688
 1976 01be DCE7     		b	.L68
 1977              	.LVL131:
 1978              	.L89:
1003:Core/Src/main.c ****         } else if (channel_num == 6) {
 1979              		.loc 1 1003 20 view .LVU689
 1980 01c0 4A20     		movs	r0, #74
ARM GAS  /tmp/ccrYMPR3.s 			page 62


 1981              	.LVL132:
1003:Core/Src/main.c ****         } else if (channel_num == 6) {
 1982              		.loc 1 1003 20 view .LVU690
 1983 01c2 DAE7     		b	.L68
 1984              	.LVL133:
 1985              	.L90:
1005:Core/Src/main.c ****         } else if (channel_num == 7) {
 1986              		.loc 1 1005 20 view .LVU691
 1987 01c4 4E20     		movs	r0, #78
 1988              	.LVL134:
1005:Core/Src/main.c ****         } else if (channel_num == 7) {
 1989              		.loc 1 1005 20 view .LVU692
 1990 01c6 D8E7     		b	.L68
 1991              	.LVL135:
 1992              	.L91:
1007:Core/Src/main.c ****         } else if (channel_num == 8) {
 1993              		.loc 1 1007 20 view .LVU693
 1994 01c8 5220     		movs	r0, #82
 1995              	.LVL136:
1007:Core/Src/main.c ****         } else if (channel_num == 8) {
 1996              		.loc 1 1007 20 view .LVU694
 1997 01ca D6E7     		b	.L68
 1998              	.LVL137:
 1999              	.L92:
1009:Core/Src/main.c ****         } else if (channel_num == 9) {
 2000              		.loc 1 1009 20 view .LVU695
 2001 01cc 5620     		movs	r0, #86
 2002              	.LVL138:
1009:Core/Src/main.c ****         } else if (channel_num == 9) {
 2003              		.loc 1 1009 20 view .LVU696
 2004 01ce D4E7     		b	.L68
 2005              	.LVL139:
 2006              	.L93:
1011:Core/Src/main.c ****         } else if (channel_num == 10) {
 2007              		.loc 1 1011 20 view .LVU697
 2008 01d0 5A20     		movs	r0, #90
 2009              	.LVL140:
1011:Core/Src/main.c ****         } else if (channel_num == 10) {
 2010              		.loc 1 1011 20 view .LVU698
 2011 01d2 D2E7     		b	.L68
 2012              	.LVL141:
 2013              	.L94:
1013:Core/Src/main.c ****         } else if (channel_num == 11) {
 2014              		.loc 1 1013 20 view .LVU699
 2015 01d4 5E20     		movs	r0, #94
 2016              	.LVL142:
1013:Core/Src/main.c ****         } else if (channel_num == 11) {
 2017              		.loc 1 1013 20 view .LVU700
 2018 01d6 D0E7     		b	.L68
 2019              	.LVL143:
 2020              	.L95:
1015:Core/Src/main.c ****         }
 2021              		.loc 1 1015 20 view .LVU701
 2022 01d8 6220     		movs	r0, #98
 2023              	.LVL144:
1015:Core/Src/main.c ****         }
 2024              		.loc 1 1015 20 view .LVU702
ARM GAS  /tmp/ccrYMPR3.s 			page 63


 2025 01da CEE7     		b	.L68
 2026              	.LVL145:
 2027              	.L96:
1019:Core/Src/main.c ****         } else if (channel_num == 1) {
 2028              		.loc 1 1019 20 view .LVU703
 2029 01dc 6920     		movs	r0, #105
 2030              	.LVL146:
1019:Core/Src/main.c ****         } else if (channel_num == 1) {
 2031              		.loc 1 1019 20 view .LVU704
 2032 01de CCE7     		b	.L68
 2033              	.LVL147:
 2034              	.L97:
1021:Core/Src/main.c ****         } else if (channel_num == 2) {
 2035              		.loc 1 1021 20 view .LVU705
 2036 01e0 6D20     		movs	r0, #109
 2037              	.LVL148:
1021:Core/Src/main.c ****         } else if (channel_num == 2) {
 2038              		.loc 1 1021 20 view .LVU706
 2039 01e2 CAE7     		b	.L68
 2040              	.LVL149:
 2041              	.L98:
1023:Core/Src/main.c ****         } else if (channel_num == 3) {
 2042              		.loc 1 1023 20 view .LVU707
 2043 01e4 7120     		movs	r0, #113
 2044              	.LVL150:
1023:Core/Src/main.c ****         } else if (channel_num == 3) {
 2045              		.loc 1 1023 20 view .LVU708
 2046 01e6 C8E7     		b	.L68
 2047              	.LVL151:
 2048              	.L99:
1025:Core/Src/main.c ****         } else if (channel_num == 4) {
 2049              		.loc 1 1025 20 view .LVU709
 2050 01e8 7520     		movs	r0, #117
 2051              	.LVL152:
1025:Core/Src/main.c ****         } else if (channel_num == 4) {
 2052              		.loc 1 1025 20 view .LVU710
 2053 01ea C6E7     		b	.L68
 2054              	.LVL153:
 2055              	.L100:
1027:Core/Src/main.c ****         } else if (channel_num == 5) {
 2056              		.loc 1 1027 20 view .LVU711
 2057 01ec 7920     		movs	r0, #121
 2058              	.LVL154:
1027:Core/Src/main.c ****         } else if (channel_num == 5) {
 2059              		.loc 1 1027 20 view .LVU712
 2060 01ee C4E7     		b	.L68
 2061              	.LVL155:
 2062              	.L101:
1029:Core/Src/main.c ****         } else if (channel_num == 6) {
 2063              		.loc 1 1029 20 view .LVU713
 2064 01f0 7D20     		movs	r0, #125
 2065              	.LVL156:
1029:Core/Src/main.c ****         } else if (channel_num == 6) {
 2066              		.loc 1 1029 20 view .LVU714
 2067 01f2 C2E7     		b	.L68
 2068              	.LVL157:
 2069              	.L102:
ARM GAS  /tmp/ccrYMPR3.s 			page 64


1031:Core/Src/main.c ****         } else if (channel_num == 7) {
 2070              		.loc 1 1031 20 view .LVU715
 2071 01f4 8120     		movs	r0, #129
 2072              	.LVL158:
1031:Core/Src/main.c ****         } else if (channel_num == 7) {
 2073              		.loc 1 1031 20 view .LVU716
 2074 01f6 C0E7     		b	.L68
 2075              	.LVL159:
 2076              	.L103:
1033:Core/Src/main.c ****         } else if (channel_num == 8) {
 2077              		.loc 1 1033 20 view .LVU717
 2078 01f8 8520     		movs	r0, #133
 2079              	.LVL160:
1033:Core/Src/main.c ****         } else if (channel_num == 8) {
 2080              		.loc 1 1033 20 view .LVU718
 2081 01fa BEE7     		b	.L68
 2082              	.LVL161:
 2083              	.L104:
1035:Core/Src/main.c ****         } else if (channel_num == 9) {
 2084              		.loc 1 1035 20 view .LVU719
 2085 01fc 8920     		movs	r0, #137
 2086              	.LVL162:
1035:Core/Src/main.c ****         } else if (channel_num == 9) {
 2087              		.loc 1 1035 20 view .LVU720
 2088 01fe BCE7     		b	.L68
 2089              	.LVL163:
 2090              	.L105:
1037:Core/Src/main.c ****         } else if (channel_num == 10) {
 2091              		.loc 1 1037 20 view .LVU721
 2092 0200 8D20     		movs	r0, #141
 2093              	.LVL164:
1037:Core/Src/main.c ****         } else if (channel_num == 10) {
 2094              		.loc 1 1037 20 view .LVU722
 2095 0202 BAE7     		b	.L68
 2096              	.LVL165:
 2097              	.L106:
1039:Core/Src/main.c ****         } else if (channel_num == 11) {
 2098              		.loc 1 1039 20 view .LVU723
 2099 0204 9120     		movs	r0, #145
 2100              	.LVL166:
1039:Core/Src/main.c ****         } else if (channel_num == 11) {
 2101              		.loc 1 1039 20 view .LVU724
 2102 0206 B8E7     		b	.L68
 2103              	.LVL167:
 2104              	.L107:
1041:Core/Src/main.c ****         }
 2105              		.loc 1 1041 20 view .LVU725
 2106 0208 9520     		movs	r0, #149
 2107              	.LVL168:
1041:Core/Src/main.c ****         }
 2108              		.loc 1 1041 20 view .LVU726
 2109 020a B6E7     		b	.L68
 2110              	.LVL169:
 2111              	.L108:
1045:Core/Src/main.c ****         } else if (channel_num == 1) {
 2112              		.loc 1 1045 20 view .LVU727
 2113 020c 9C20     		movs	r0, #156
ARM GAS  /tmp/ccrYMPR3.s 			page 65


 2114              	.LVL170:
1045:Core/Src/main.c ****         } else if (channel_num == 1) {
 2115              		.loc 1 1045 20 view .LVU728
 2116 020e B4E7     		b	.L68
 2117              	.LVL171:
 2118              	.L109:
1047:Core/Src/main.c ****         } else if (channel_num == 2) {
 2119              		.loc 1 1047 20 view .LVU729
 2120 0210 A020     		movs	r0, #160
 2121              	.LVL172:
1047:Core/Src/main.c ****         } else if (channel_num == 2) {
 2122              		.loc 1 1047 20 view .LVU730
 2123 0212 B2E7     		b	.L68
 2124              	.LVL173:
 2125              	.L110:
1049:Core/Src/main.c ****         } else if (channel_num == 3) {
 2126              		.loc 1 1049 20 view .LVU731
 2127 0214 A420     		movs	r0, #164
 2128              	.LVL174:
1049:Core/Src/main.c ****         } else if (channel_num == 3) {
 2129              		.loc 1 1049 20 view .LVU732
 2130 0216 B0E7     		b	.L68
 2131              	.LVL175:
 2132              	.L111:
1051:Core/Src/main.c ****         } else if (channel_num == 4) {
 2133              		.loc 1 1051 20 view .LVU733
 2134 0218 A820     		movs	r0, #168
 2135              	.LVL176:
1051:Core/Src/main.c ****         } else if (channel_num == 4) {
 2136              		.loc 1 1051 20 view .LVU734
 2137 021a AEE7     		b	.L68
 2138              	.LVL177:
 2139              	.L112:
1053:Core/Src/main.c ****         } else if (channel_num == 5) {
 2140              		.loc 1 1053 20 view .LVU735
 2141 021c AC20     		movs	r0, #172
 2142              	.LVL178:
1053:Core/Src/main.c ****         } else if (channel_num == 5) {
 2143              		.loc 1 1053 20 view .LVU736
 2144 021e ACE7     		b	.L68
 2145              	.LVL179:
 2146              	.L113:
1055:Core/Src/main.c ****         } else if (channel_num == 6) {
 2147              		.loc 1 1055 20 view .LVU737
 2148 0220 B020     		movs	r0, #176
 2149              	.LVL180:
1055:Core/Src/main.c ****         } else if (channel_num == 6) {
 2150              		.loc 1 1055 20 view .LVU738
 2151 0222 AAE7     		b	.L68
 2152              	.LVL181:
 2153              	.L114:
1057:Core/Src/main.c ****         } else if (channel_num == 7) {
 2154              		.loc 1 1057 20 view .LVU739
 2155 0224 B420     		movs	r0, #180
 2156              	.LVL182:
1057:Core/Src/main.c ****         } else if (channel_num == 7) {
 2157              		.loc 1 1057 20 view .LVU740
ARM GAS  /tmp/ccrYMPR3.s 			page 66


 2158 0226 A8E7     		b	.L68
 2159              	.LVL183:
 2160              	.L115:
1059:Core/Src/main.c ****         } else if (channel_num == 8) {
 2161              		.loc 1 1059 20 view .LVU741
 2162 0228 B820     		movs	r0, #184
 2163              	.LVL184:
1059:Core/Src/main.c ****         } else if (channel_num == 8) {
 2164              		.loc 1 1059 20 view .LVU742
 2165 022a A6E7     		b	.L68
 2166              	.LVL185:
 2167              	.L116:
1061:Core/Src/main.c ****         } else if (channel_num == 9) {
 2168              		.loc 1 1061 20 view .LVU743
 2169 022c BC20     		movs	r0, #188
 2170              	.LVL186:
1061:Core/Src/main.c ****         } else if (channel_num == 9) {
 2171              		.loc 1 1061 20 view .LVU744
 2172 022e A4E7     		b	.L68
 2173              	.LVL187:
 2174              	.L117:
1063:Core/Src/main.c ****         } else if (channel_num == 10) {
 2175              		.loc 1 1063 20 view .LVU745
 2176 0230 C020     		movs	r0, #192
 2177              	.LVL188:
1063:Core/Src/main.c ****         } else if (channel_num == 10) {
 2178              		.loc 1 1063 20 view .LVU746
 2179 0232 A2E7     		b	.L68
 2180              	.LVL189:
 2181              	.L118:
1065:Core/Src/main.c ****         } else if (channel_num == 11) {
 2182              		.loc 1 1065 20 view .LVU747
 2183 0234 C420     		movs	r0, #196
 2184              	.LVL190:
1065:Core/Src/main.c ****         } else if (channel_num == 11) {
 2185              		.loc 1 1065 20 view .LVU748
 2186 0236 A0E7     		b	.L68
 2187              	.LVL191:
 2188              	.L119:
1067:Core/Src/main.c ****         }
 2189              		.loc 1 1067 20 view .LVU749
 2190 0238 C820     		movs	r0, #200
 2191              	.LVL192:
1067:Core/Src/main.c ****         }
 2192              		.loc 1 1067 20 view .LVU750
 2193 023a 9EE7     		b	.L68
 2194              	.LVL193:
 2195              	.L120:
1071:Core/Src/main.c ****         } else if (channel_num == 1) {
 2196              		.loc 1 1071 20 view .LVU751
 2197 023c CF20     		movs	r0, #207
 2198              	.LVL194:
1071:Core/Src/main.c ****         } else if (channel_num == 1) {
 2199              		.loc 1 1071 20 view .LVU752
 2200 023e 9CE7     		b	.L68
 2201              	.LVL195:
 2202              	.L121:
ARM GAS  /tmp/ccrYMPR3.s 			page 67


1073:Core/Src/main.c ****         } else if (channel_num == 2) {
 2203              		.loc 1 1073 20 view .LVU753
 2204 0240 D320     		movs	r0, #211
 2205              	.LVL196:
1073:Core/Src/main.c ****         } else if (channel_num == 2) {
 2206              		.loc 1 1073 20 view .LVU754
 2207 0242 9AE7     		b	.L68
 2208              	.LVL197:
 2209              	.L122:
1075:Core/Src/main.c ****         } else if (channel_num == 3) {
 2210              		.loc 1 1075 20 view .LVU755
 2211 0244 D720     		movs	r0, #215
 2212              	.LVL198:
1075:Core/Src/main.c ****         } else if (channel_num == 3) {
 2213              		.loc 1 1075 20 view .LVU756
 2214 0246 98E7     		b	.L68
 2215              	.LVL199:
 2216              	.L123:
1077:Core/Src/main.c ****         } else if (channel_num == 4) {
 2217              		.loc 1 1077 20 view .LVU757
 2218 0248 DB20     		movs	r0, #219
 2219              	.LVL200:
1077:Core/Src/main.c ****         } else if (channel_num == 4) {
 2220              		.loc 1 1077 20 view .LVU758
 2221 024a 96E7     		b	.L68
 2222              	.LVL201:
 2223              	.L124:
1079:Core/Src/main.c ****         } else if (channel_num == 5) {
 2224              		.loc 1 1079 20 view .LVU759
 2225 024c DF20     		movs	r0, #223
 2226              	.LVL202:
1079:Core/Src/main.c ****         } else if (channel_num == 5) {
 2227              		.loc 1 1079 20 view .LVU760
 2228 024e 94E7     		b	.L68
 2229              	.LVL203:
 2230              	.L125:
1081:Core/Src/main.c ****         } else if (channel_num == 6) {
 2231              		.loc 1 1081 20 view .LVU761
 2232 0250 E320     		movs	r0, #227
 2233              	.LVL204:
1081:Core/Src/main.c ****         } else if (channel_num == 6) {
 2234              		.loc 1 1081 20 view .LVU762
 2235 0252 92E7     		b	.L68
 2236              	.LVL205:
 2237              	.L126:
1083:Core/Src/main.c ****         } else if (channel_num == 7) {
 2238              		.loc 1 1083 20 view .LVU763
 2239 0254 E720     		movs	r0, #231
 2240              	.LVL206:
1083:Core/Src/main.c ****         } else if (channel_num == 7) {
 2241              		.loc 1 1083 20 view .LVU764
 2242 0256 90E7     		b	.L68
 2243              	.LVL207:
 2244              	.L127:
1085:Core/Src/main.c ****         } else if (channel_num == 8) {
 2245              		.loc 1 1085 20 view .LVU765
 2246 0258 EB20     		movs	r0, #235
ARM GAS  /tmp/ccrYMPR3.s 			page 68


 2247              	.LVL208:
1085:Core/Src/main.c ****         } else if (channel_num == 8) {
 2248              		.loc 1 1085 20 view .LVU766
 2249 025a 8EE7     		b	.L68
 2250              	.LVL209:
 2251              	.L128:
1087:Core/Src/main.c ****         } else if (channel_num == 9) {
 2252              		.loc 1 1087 20 view .LVU767
 2253 025c EF20     		movs	r0, #239
 2254              	.LVL210:
1087:Core/Src/main.c ****         } else if (channel_num == 9) {
 2255              		.loc 1 1087 20 view .LVU768
 2256 025e 8CE7     		b	.L68
 2257              	.LVL211:
 2258              	.L129:
1089:Core/Src/main.c ****         } else if (channel_num == 10) {
 2259              		.loc 1 1089 20 view .LVU769
 2260 0260 F320     		movs	r0, #243
 2261              	.LVL212:
1089:Core/Src/main.c ****         } else if (channel_num == 10) {
 2262              		.loc 1 1089 20 view .LVU770
 2263 0262 8AE7     		b	.L68
 2264              	.LVL213:
 2265              	.L130:
1091:Core/Src/main.c ****         } else if (channel_num == 11) {
 2266              		.loc 1 1091 20 view .LVU771
 2267 0264 F720     		movs	r0, #247
 2268              	.LVL214:
1091:Core/Src/main.c ****         } else if (channel_num == 11) {
 2269              		.loc 1 1091 20 view .LVU772
 2270 0266 88E7     		b	.L68
 2271              	.LVL215:
 2272              	.L131:
1093:Core/Src/main.c ****         } 
 2273              		.loc 1 1093 20 view .LVU773
 2274 0268 FB20     		movs	r0, #251
 2275              	.LVL216:
1093:Core/Src/main.c ****         } 
 2276              		.loc 1 1093 20 view .LVU774
 2277 026a 86E7     		b	.L68
 2278              	.LVL217:
 2279              	.L267:
 2280              	.LCFI19:
 2281              		.cfi_def_cfa_offset 0
 2282              		.cfi_restore 4
 949:Core/Src/main.c ****     
 2283              		.loc 1 949 9 view .LVU775
 2284 026c 0C23     		movs	r3, #12
 2285              	.LVL218:
 965:Core/Src/main.c ****         if (channel_num == 0) {
 2286              		.loc 1 965 5 is_stmt 1 view .LVU776
 965:Core/Src/main.c ****         if (channel_num == 0) {
 2287              		.loc 1 965 8 is_stmt 0 view .LVU777
 2288 026e 2ABB     		cbnz	r2, .L137
 966:Core/Src/main.c ****             return 3;
 2289              		.loc 1 966 9 is_stmt 1 view .LVU778
 966:Core/Src/main.c ****             return 3;
ARM GAS  /tmp/ccrYMPR3.s 			page 69


 2290              		.loc 1 966 12 is_stmt 0 view .LVU779
 2291 0270 002B     		cmp	r3, #0
 2292 0272 00F09D80 		beq	.L138
 968:Core/Src/main.c ****             return 7;
 2293              		.loc 1 968 16 is_stmt 1 view .LVU780
 968:Core/Src/main.c ****             return 7;
 2294              		.loc 1 968 19 is_stmt 0 view .LVU781
 2295 0276 012B     		cmp	r3, #1
 2296 0278 00F09C80 		beq	.L140
 970:Core/Src/main.c ****             return 11;
 2297              		.loc 1 970 16 is_stmt 1 view .LVU782
 970:Core/Src/main.c ****             return 11;
 2298              		.loc 1 970 19 is_stmt 0 view .LVU783
 2299 027c 022B     		cmp	r3, #2
 2300 027e 00F09B80 		beq	.L142
 972:Core/Src/main.c ****             return 15;
 2301              		.loc 1 972 16 is_stmt 1 view .LVU784
 972:Core/Src/main.c ****             return 15;
 2302              		.loc 1 972 19 is_stmt 0 view .LVU785
 2303 0282 032B     		cmp	r3, #3
 2304 0284 00F09A80 		beq	.L144
 974:Core/Src/main.c ****             return 19;
 2305              		.loc 1 974 16 is_stmt 1 view .LVU786
 974:Core/Src/main.c ****             return 19;
 2306              		.loc 1 974 19 is_stmt 0 view .LVU787
 2307 0288 042B     		cmp	r3, #4
 2308 028a 00F09980 		beq	.L146
 976:Core/Src/main.c ****             return 23;
 2309              		.loc 1 976 16 is_stmt 1 view .LVU788
 976:Core/Src/main.c ****             return 23;
 2310              		.loc 1 976 19 is_stmt 0 view .LVU789
 2311 028e 052B     		cmp	r3, #5
 2312 0290 00F09880 		beq	.L148
 978:Core/Src/main.c ****             return 27;
 2313              		.loc 1 978 16 is_stmt 1 view .LVU790
 978:Core/Src/main.c ****             return 27;
 2314              		.loc 1 978 19 is_stmt 0 view .LVU791
 2315 0294 062B     		cmp	r3, #6
 2316 0296 00F09780 		beq	.L150
 980:Core/Src/main.c ****             return 31;
 2317              		.loc 1 980 16 is_stmt 1 view .LVU792
 980:Core/Src/main.c ****             return 31;
 2318              		.loc 1 980 19 is_stmt 0 view .LVU793
 2319 029a 072B     		cmp	r3, #7
 2320 029c 00F09680 		beq	.L152
 982:Core/Src/main.c ****             return 35;
 2321              		.loc 1 982 16 is_stmt 1 view .LVU794
 982:Core/Src/main.c ****             return 35;
 2322              		.loc 1 982 19 is_stmt 0 view .LVU795
 2323 02a0 082B     		cmp	r3, #8
 2324 02a2 00F09580 		beq	.L154
 984:Core/Src/main.c ****             return 39;
 2325              		.loc 1 984 16 is_stmt 1 view .LVU796
 984:Core/Src/main.c ****             return 39;
 2326              		.loc 1 984 19 is_stmt 0 view .LVU797
 2327 02a6 092B     		cmp	r3, #9
 2328 02a8 00F09480 		beq	.L156
ARM GAS  /tmp/ccrYMPR3.s 			page 70


 986:Core/Src/main.c ****             return 43;
 2329              		.loc 1 986 16 is_stmt 1 view .LVU798
 986:Core/Src/main.c ****             return 43;
 2330              		.loc 1 986 19 is_stmt 0 view .LVU799
 2331 02ac 0A2B     		cmp	r3, #10
 2332 02ae 00F09380 		beq	.L158
 988:Core/Src/main.c ****             return 47;
 2333              		.loc 1 988 16 is_stmt 1 view .LVU800
 988:Core/Src/main.c ****             return 47;
 2334              		.loc 1 988 19 is_stmt 0 view .LVU801
 2335 02b2 0B2B     		cmp	r3, #11
 2336 02b4 00F09280 		beq	.L160
1096:Core/Src/main.c **** }
 2337              		.loc 1 1096 12 view .LVU802
 2338 02b8 0020     		movs	r0, #0
 2339              	.LVL219:
1096:Core/Src/main.c **** }
 2340              		.loc 1 1096 12 view .LVU803
 2341 02ba 7047     		bx	lr
 2342              	.LVL220:
 2343              	.L137:
 991:Core/Src/main.c ****         if (channel_num == 0) {
 2344              		.loc 1 991 12 is_stmt 1 view .LVU804
 991:Core/Src/main.c ****         if (channel_num == 0) {
 2345              		.loc 1 991 15 is_stmt 0 view .LVU805
 2346 02bc 012A     		cmp	r2, #1
 2347 02be 29D0     		beq	.L272
1017:Core/Src/main.c ****         if (channel_num == 0) {
 2348              		.loc 1 1017 12 is_stmt 1 view .LVU806
1017:Core/Src/main.c ****         if (channel_num == 0) {
 2349              		.loc 1 1017 15 is_stmt 0 view .LVU807
 2350 02c0 022A     		cmp	r2, #2
 2351 02c2 41D0     		beq	.L273
1043:Core/Src/main.c ****         if (channel_num == 0) {
 2352              		.loc 1 1043 12 is_stmt 1 view .LVU808
1043:Core/Src/main.c ****         if (channel_num == 0) {
 2353              		.loc 1 1043 15 is_stmt 0 view .LVU809
 2354 02c4 032A     		cmp	r2, #3
 2355 02c6 59D0     		beq	.L274
1070:Core/Src/main.c ****             return 207;
 2356              		.loc 1 1070 9 is_stmt 1 view .LVU810
1070:Core/Src/main.c ****             return 207;
 2357              		.loc 1 1070 12 is_stmt 0 view .LVU811
 2358 02c8 002B     		cmp	r3, #0
 2359 02ca 00F0D180 		beq	.L241
1072:Core/Src/main.c ****             return 211;
 2360              		.loc 1 1072 16 is_stmt 1 view .LVU812
1072:Core/Src/main.c ****             return 211;
 2361              		.loc 1 1072 19 is_stmt 0 view .LVU813
 2362 02ce 012B     		cmp	r3, #1
 2363 02d0 00F0D080 		beq	.L243
1074:Core/Src/main.c ****             return 215;
 2364              		.loc 1 1074 16 is_stmt 1 view .LVU814
1074:Core/Src/main.c ****             return 215;
 2365              		.loc 1 1074 19 is_stmt 0 view .LVU815
 2366 02d4 022B     		cmp	r3, #2
 2367 02d6 00F0CF80 		beq	.L245
ARM GAS  /tmp/ccrYMPR3.s 			page 71


1076:Core/Src/main.c ****             return 219;
 2368              		.loc 1 1076 16 is_stmt 1 view .LVU816
1076:Core/Src/main.c ****             return 219;
 2369              		.loc 1 1076 19 is_stmt 0 view .LVU817
 2370 02da 032B     		cmp	r3, #3
 2371 02dc 00F0CE80 		beq	.L247
1078:Core/Src/main.c ****             return 223;
 2372              		.loc 1 1078 16 is_stmt 1 view .LVU818
1078:Core/Src/main.c ****             return 223;
 2373              		.loc 1 1078 19 is_stmt 0 view .LVU819
 2374 02e0 042B     		cmp	r3, #4
 2375 02e2 00F0CD80 		beq	.L249
1080:Core/Src/main.c ****             return 227;
 2376              		.loc 1 1080 16 is_stmt 1 view .LVU820
1080:Core/Src/main.c ****             return 227;
 2377              		.loc 1 1080 19 is_stmt 0 view .LVU821
 2378 02e6 052B     		cmp	r3, #5
 2379 02e8 00F0CC80 		beq	.L251
1082:Core/Src/main.c ****             return 231;
 2380              		.loc 1 1082 16 is_stmt 1 view .LVU822
1082:Core/Src/main.c ****             return 231;
 2381              		.loc 1 1082 19 is_stmt 0 view .LVU823
 2382 02ec 062B     		cmp	r3, #6
 2383 02ee 00F0CB80 		beq	.L253
1084:Core/Src/main.c ****             return 235;
 2384              		.loc 1 1084 16 is_stmt 1 view .LVU824
1084:Core/Src/main.c ****             return 235;
 2385              		.loc 1 1084 19 is_stmt 0 view .LVU825
 2386 02f2 072B     		cmp	r3, #7
 2387 02f4 00F0CA80 		beq	.L255
1086:Core/Src/main.c ****             return 239;
 2388              		.loc 1 1086 16 is_stmt 1 view .LVU826
1086:Core/Src/main.c ****             return 239;
 2389              		.loc 1 1086 19 is_stmt 0 view .LVU827
 2390 02f8 082B     		cmp	r3, #8
 2391 02fa 00F0C980 		beq	.L257
1088:Core/Src/main.c ****             return 243;
 2392              		.loc 1 1088 16 is_stmt 1 view .LVU828
1088:Core/Src/main.c ****             return 243;
 2393              		.loc 1 1088 19 is_stmt 0 view .LVU829
 2394 02fe 092B     		cmp	r3, #9
 2395 0300 00F0C880 		beq	.L259
1090:Core/Src/main.c ****             return 247;
 2396              		.loc 1 1090 16 is_stmt 1 view .LVU830
1090:Core/Src/main.c ****             return 247;
 2397              		.loc 1 1090 19 is_stmt 0 view .LVU831
 2398 0304 0A2B     		cmp	r3, #10
 2399 0306 00F0C780 		beq	.L261
1092:Core/Src/main.c ****             return 251;
 2400              		.loc 1 1092 16 is_stmt 1 view .LVU832
1092:Core/Src/main.c ****             return 251;
 2401              		.loc 1 1092 19 is_stmt 0 view .LVU833
 2402 030a 0B2B     		cmp	r3, #11
 2403 030c 00F0C680 		beq	.L263
1096:Core/Src/main.c **** }
 2404              		.loc 1 1096 12 view .LVU834
 2405 0310 0020     		movs	r0, #0
ARM GAS  /tmp/ccrYMPR3.s 			page 72


 2406              	.LVL221:
1096:Core/Src/main.c **** }
 2407              		.loc 1 1096 12 view .LVU835
 2408 0312 7047     		bx	lr
 2409              	.LVL222:
 2410              	.L272:
 992:Core/Src/main.c ****             return 54;
 2411              		.loc 1 992 9 is_stmt 1 view .LVU836
 992:Core/Src/main.c ****             return 54;
 2412              		.loc 1 992 12 is_stmt 0 view .LVU837
 2413 0314 002B     		cmp	r3, #0
 2414 0316 63D0     		beq	.L165
 994:Core/Src/main.c ****             return 58;
 2415              		.loc 1 994 16 is_stmt 1 view .LVU838
 994:Core/Src/main.c ****             return 58;
 2416              		.loc 1 994 19 is_stmt 0 view .LVU839
 2417 0318 012B     		cmp	r3, #1
 2418 031a 63D0     		beq	.L167
 996:Core/Src/main.c ****             return 62;
 2419              		.loc 1 996 16 is_stmt 1 view .LVU840
 996:Core/Src/main.c ****             return 62;
 2420              		.loc 1 996 19 is_stmt 0 view .LVU841
 2421 031c 022B     		cmp	r3, #2
 2422 031e 63D0     		beq	.L169
 998:Core/Src/main.c ****             return 66;
 2423              		.loc 1 998 16 is_stmt 1 view .LVU842
 998:Core/Src/main.c ****             return 66;
 2424              		.loc 1 998 19 is_stmt 0 view .LVU843
 2425 0320 032B     		cmp	r3, #3
 2426 0322 63D0     		beq	.L171
1000:Core/Src/main.c ****             return 70;
 2427              		.loc 1 1000 16 is_stmt 1 view .LVU844
1000:Core/Src/main.c ****             return 70;
 2428              		.loc 1 1000 19 is_stmt 0 view .LVU845
 2429 0324 042B     		cmp	r3, #4
 2430 0326 63D0     		beq	.L173
1002:Core/Src/main.c ****             return 74;
 2431              		.loc 1 1002 16 is_stmt 1 view .LVU846
1002:Core/Src/main.c ****             return 74;
 2432              		.loc 1 1002 19 is_stmt 0 view .LVU847
 2433 0328 052B     		cmp	r3, #5
 2434 032a 63D0     		beq	.L175
1004:Core/Src/main.c ****             return 78;
 2435              		.loc 1 1004 16 is_stmt 1 view .LVU848
1004:Core/Src/main.c ****             return 78;
 2436              		.loc 1 1004 19 is_stmt 0 view .LVU849
 2437 032c 062B     		cmp	r3, #6
 2438 032e 63D0     		beq	.L177
1006:Core/Src/main.c ****             return 82;
 2439              		.loc 1 1006 16 is_stmt 1 view .LVU850
1006:Core/Src/main.c ****             return 82;
 2440              		.loc 1 1006 19 is_stmt 0 view .LVU851
 2441 0330 072B     		cmp	r3, #7
 2442 0332 63D0     		beq	.L179
1008:Core/Src/main.c ****             return 86;
 2443              		.loc 1 1008 16 is_stmt 1 view .LVU852
1008:Core/Src/main.c ****             return 86;
ARM GAS  /tmp/ccrYMPR3.s 			page 73


 2444              		.loc 1 1008 19 is_stmt 0 view .LVU853
 2445 0334 082B     		cmp	r3, #8
 2446 0336 63D0     		beq	.L181
1010:Core/Src/main.c ****             return 90;
 2447              		.loc 1 1010 16 is_stmt 1 view .LVU854
1010:Core/Src/main.c ****             return 90;
 2448              		.loc 1 1010 19 is_stmt 0 view .LVU855
 2449 0338 092B     		cmp	r3, #9
 2450 033a 63D0     		beq	.L183
1012:Core/Src/main.c ****             return 94;
 2451              		.loc 1 1012 16 is_stmt 1 view .LVU856
1012:Core/Src/main.c ****             return 94;
 2452              		.loc 1 1012 19 is_stmt 0 view .LVU857
 2453 033c 0A2B     		cmp	r3, #10
 2454 033e 63D0     		beq	.L185
1014:Core/Src/main.c ****             return 98;
 2455              		.loc 1 1014 16 is_stmt 1 view .LVU858
1014:Core/Src/main.c ****             return 98;
 2456              		.loc 1 1014 19 is_stmt 0 view .LVU859
 2457 0340 0B2B     		cmp	r3, #11
 2458 0342 63D0     		beq	.L187
1096:Core/Src/main.c **** }
 2459              		.loc 1 1096 12 view .LVU860
 2460 0344 0020     		movs	r0, #0
 2461              	.LVL223:
1096:Core/Src/main.c **** }
 2462              		.loc 1 1096 12 view .LVU861
 2463 0346 7047     		bx	lr
 2464              	.LVL224:
 2465              	.L273:
1018:Core/Src/main.c ****             return 105;
 2466              		.loc 1 1018 9 is_stmt 1 view .LVU862
1018:Core/Src/main.c ****             return 105;
 2467              		.loc 1 1018 12 is_stmt 0 view .LVU863
 2468 0348 002B     		cmp	r3, #0
 2469 034a 61D0     		beq	.L191
1020:Core/Src/main.c ****             return 109;
 2470              		.loc 1 1020 16 is_stmt 1 view .LVU864
1020:Core/Src/main.c ****             return 109;
 2471              		.loc 1 1020 19 is_stmt 0 view .LVU865
 2472 034c 012B     		cmp	r3, #1
 2473 034e 61D0     		beq	.L193
1022:Core/Src/main.c ****             return 113;
 2474              		.loc 1 1022 16 is_stmt 1 view .LVU866
1022:Core/Src/main.c ****             return 113;
 2475              		.loc 1 1022 19 is_stmt 0 view .LVU867
 2476 0350 022B     		cmp	r3, #2
 2477 0352 61D0     		beq	.L195
1024:Core/Src/main.c ****             return 117;
 2478              		.loc 1 1024 16 is_stmt 1 view .LVU868
1024:Core/Src/main.c ****             return 117;
 2479              		.loc 1 1024 19 is_stmt 0 view .LVU869
 2480 0354 032B     		cmp	r3, #3
 2481 0356 61D0     		beq	.L197
1026:Core/Src/main.c ****             return 121;
 2482              		.loc 1 1026 16 is_stmt 1 view .LVU870
1026:Core/Src/main.c ****             return 121;
ARM GAS  /tmp/ccrYMPR3.s 			page 74


 2483              		.loc 1 1026 19 is_stmt 0 view .LVU871
 2484 0358 042B     		cmp	r3, #4
 2485 035a 61D0     		beq	.L199
1028:Core/Src/main.c ****             return 125;
 2486              		.loc 1 1028 16 is_stmt 1 view .LVU872
1028:Core/Src/main.c ****             return 125;
 2487              		.loc 1 1028 19 is_stmt 0 view .LVU873
 2488 035c 052B     		cmp	r3, #5
 2489 035e 61D0     		beq	.L201
1030:Core/Src/main.c ****             return 129;
 2490              		.loc 1 1030 16 is_stmt 1 view .LVU874
1030:Core/Src/main.c ****             return 129;
 2491              		.loc 1 1030 19 is_stmt 0 view .LVU875
 2492 0360 062B     		cmp	r3, #6
 2493 0362 61D0     		beq	.L203
1032:Core/Src/main.c ****             return 133;
 2494              		.loc 1 1032 16 is_stmt 1 view .LVU876
1032:Core/Src/main.c ****             return 133;
 2495              		.loc 1 1032 19 is_stmt 0 view .LVU877
 2496 0364 072B     		cmp	r3, #7
 2497 0366 61D0     		beq	.L205
1034:Core/Src/main.c ****             return 137;
 2498              		.loc 1 1034 16 is_stmt 1 view .LVU878
1034:Core/Src/main.c ****             return 137;
 2499              		.loc 1 1034 19 is_stmt 0 view .LVU879
 2500 0368 082B     		cmp	r3, #8
 2501 036a 61D0     		beq	.L207
1036:Core/Src/main.c ****             return 141;
 2502              		.loc 1 1036 16 is_stmt 1 view .LVU880
1036:Core/Src/main.c ****             return 141;
 2503              		.loc 1 1036 19 is_stmt 0 view .LVU881
 2504 036c 092B     		cmp	r3, #9
 2505 036e 61D0     		beq	.L209
1038:Core/Src/main.c ****             return 145;
 2506              		.loc 1 1038 16 is_stmt 1 view .LVU882
1038:Core/Src/main.c ****             return 145;
 2507              		.loc 1 1038 19 is_stmt 0 view .LVU883
 2508 0370 0A2B     		cmp	r3, #10
 2509 0372 61D0     		beq	.L211
1040:Core/Src/main.c ****             return 149;
 2510              		.loc 1 1040 16 is_stmt 1 view .LVU884
1040:Core/Src/main.c ****             return 149;
 2511              		.loc 1 1040 19 is_stmt 0 view .LVU885
 2512 0374 0B2B     		cmp	r3, #11
 2513 0376 61D0     		beq	.L213
1096:Core/Src/main.c **** }
 2514              		.loc 1 1096 12 view .LVU886
 2515 0378 0020     		movs	r0, #0
 2516              	.LVL225:
1096:Core/Src/main.c **** }
 2517              		.loc 1 1096 12 view .LVU887
 2518 037a 7047     		bx	lr
 2519              	.LVL226:
 2520              	.L274:
1044:Core/Src/main.c ****             return 156;
 2521              		.loc 1 1044 9 is_stmt 1 view .LVU888
1044:Core/Src/main.c ****             return 156;
ARM GAS  /tmp/ccrYMPR3.s 			page 75


 2522              		.loc 1 1044 12 is_stmt 0 view .LVU889
 2523 037c 002B     		cmp	r3, #0
 2524 037e 5FD0     		beq	.L217
1046:Core/Src/main.c ****             return 160;
 2525              		.loc 1 1046 16 is_stmt 1 view .LVU890
1046:Core/Src/main.c ****             return 160;
 2526              		.loc 1 1046 19 is_stmt 0 view .LVU891
 2527 0380 012B     		cmp	r3, #1
 2528 0382 5FD0     		beq	.L219
1048:Core/Src/main.c ****             return 164;
 2529              		.loc 1 1048 16 is_stmt 1 view .LVU892
1048:Core/Src/main.c ****             return 164;
 2530              		.loc 1 1048 19 is_stmt 0 view .LVU893
 2531 0384 022B     		cmp	r3, #2
 2532 0386 5FD0     		beq	.L221
1050:Core/Src/main.c ****             return 168;
 2533              		.loc 1 1050 16 is_stmt 1 view .LVU894
1050:Core/Src/main.c ****             return 168;
 2534              		.loc 1 1050 19 is_stmt 0 view .LVU895
 2535 0388 032B     		cmp	r3, #3
 2536 038a 5FD0     		beq	.L223
1052:Core/Src/main.c ****             return 172;
 2537              		.loc 1 1052 16 is_stmt 1 view .LVU896
1052:Core/Src/main.c ****             return 172;
 2538              		.loc 1 1052 19 is_stmt 0 view .LVU897
 2539 038c 042B     		cmp	r3, #4
 2540 038e 5FD0     		beq	.L225
1054:Core/Src/main.c ****             return 176;
 2541              		.loc 1 1054 16 is_stmt 1 view .LVU898
1054:Core/Src/main.c ****             return 176;
 2542              		.loc 1 1054 19 is_stmt 0 view .LVU899
 2543 0390 052B     		cmp	r3, #5
 2544 0392 5FD0     		beq	.L227
1056:Core/Src/main.c ****             return 180;
 2545              		.loc 1 1056 16 is_stmt 1 view .LVU900
1056:Core/Src/main.c ****             return 180;
 2546              		.loc 1 1056 19 is_stmt 0 view .LVU901
 2547 0394 062B     		cmp	r3, #6
 2548 0396 5FD0     		beq	.L229
1058:Core/Src/main.c ****             return 184;
 2549              		.loc 1 1058 16 is_stmt 1 view .LVU902
1058:Core/Src/main.c ****             return 184;
 2550              		.loc 1 1058 19 is_stmt 0 view .LVU903
 2551 0398 072B     		cmp	r3, #7
 2552 039a 5FD0     		beq	.L231
1060:Core/Src/main.c ****             return 188;
 2553              		.loc 1 1060 16 is_stmt 1 view .LVU904
1060:Core/Src/main.c ****             return 188;
 2554              		.loc 1 1060 19 is_stmt 0 view .LVU905
 2555 039c 082B     		cmp	r3, #8
 2556 039e 5FD0     		beq	.L233
1062:Core/Src/main.c ****             return 192;
 2557              		.loc 1 1062 16 is_stmt 1 view .LVU906
1062:Core/Src/main.c ****             return 192;
 2558              		.loc 1 1062 19 is_stmt 0 view .LVU907
 2559 03a0 092B     		cmp	r3, #9
 2560 03a2 5FD0     		beq	.L235
ARM GAS  /tmp/ccrYMPR3.s 			page 76


1064:Core/Src/main.c ****             return 196;
 2561              		.loc 1 1064 16 is_stmt 1 view .LVU908
1064:Core/Src/main.c ****             return 196;
 2562              		.loc 1 1064 19 is_stmt 0 view .LVU909
 2563 03a4 0A2B     		cmp	r3, #10
 2564 03a6 5FD0     		beq	.L237
1066:Core/Src/main.c ****             return 200;
 2565              		.loc 1 1066 16 is_stmt 1 view .LVU910
1066:Core/Src/main.c ****             return 200;
 2566              		.loc 1 1066 19 is_stmt 0 view .LVU911
 2567 03a8 0B2B     		cmp	r3, #11
 2568 03aa 5FD0     		beq	.L239
1096:Core/Src/main.c **** }
 2569              		.loc 1 1096 12 view .LVU912
 2570 03ac 0020     		movs	r0, #0
 2571              	.LVL227:
1096:Core/Src/main.c **** }
 2572              		.loc 1 1096 12 view .LVU913
 2573 03ae 7047     		bx	lr
 2574              	.LVL228:
 2575              	.L138:
 967:Core/Src/main.c ****         } else if (channel_num == 1) {
 2576              		.loc 1 967 20 view .LVU914
 2577 03b0 0320     		movs	r0, #3
 2578              	.LVL229:
 967:Core/Src/main.c ****         } else if (channel_num == 1) {
 2579              		.loc 1 967 20 view .LVU915
 2580 03b2 7047     		bx	lr
 2581              	.LVL230:
 2582              	.L140:
 969:Core/Src/main.c ****         } else if (channel_num == 2) {
 2583              		.loc 1 969 20 view .LVU916
 2584 03b4 0720     		movs	r0, #7
 2585              	.LVL231:
 969:Core/Src/main.c ****         } else if (channel_num == 2) {
 2586              		.loc 1 969 20 view .LVU917
 2587 03b6 7047     		bx	lr
 2588              	.LVL232:
 2589              	.L142:
 971:Core/Src/main.c ****         } else if (channel_num == 3) {
 2590              		.loc 1 971 20 view .LVU918
 2591 03b8 0B20     		movs	r0, #11
 2592              	.LVL233:
 971:Core/Src/main.c ****         } else if (channel_num == 3) {
 2593              		.loc 1 971 20 view .LVU919
 2594 03ba 7047     		bx	lr
 2595              	.LVL234:
 2596              	.L144:
 973:Core/Src/main.c ****         } else if (channel_num == 4) {
 2597              		.loc 1 973 20 view .LVU920
 2598 03bc 0F20     		movs	r0, #15
 2599              	.LVL235:
 973:Core/Src/main.c ****         } else if (channel_num == 4) {
 2600              		.loc 1 973 20 view .LVU921
 2601 03be 7047     		bx	lr
 2602              	.LVL236:
 2603              	.L146:
ARM GAS  /tmp/ccrYMPR3.s 			page 77


 975:Core/Src/main.c ****         } else if (channel_num == 5) {
 2604              		.loc 1 975 20 view .LVU922
 2605 03c0 1320     		movs	r0, #19
 2606              	.LVL237:
 975:Core/Src/main.c ****         } else if (channel_num == 5) {
 2607              		.loc 1 975 20 view .LVU923
 2608 03c2 7047     		bx	lr
 2609              	.LVL238:
 2610              	.L148:
 977:Core/Src/main.c ****         } else if (channel_num == 6) {
 2611              		.loc 1 977 20 view .LVU924
 2612 03c4 1720     		movs	r0, #23
 2613              	.LVL239:
 977:Core/Src/main.c ****         } else if (channel_num == 6) {
 2614              		.loc 1 977 20 view .LVU925
 2615 03c6 7047     		bx	lr
 2616              	.LVL240:
 2617              	.L150:
 979:Core/Src/main.c ****         } else if (channel_num == 7) {
 2618              		.loc 1 979 20 view .LVU926
 2619 03c8 1B20     		movs	r0, #27
 2620              	.LVL241:
 979:Core/Src/main.c ****         } else if (channel_num == 7) {
 2621              		.loc 1 979 20 view .LVU927
 2622 03ca 7047     		bx	lr
 2623              	.LVL242:
 2624              	.L152:
 981:Core/Src/main.c ****         } else if (channel_num == 8) {
 2625              		.loc 1 981 20 view .LVU928
 2626 03cc 1F20     		movs	r0, #31
 2627              	.LVL243:
 981:Core/Src/main.c ****         } else if (channel_num == 8) {
 2628              		.loc 1 981 20 view .LVU929
 2629 03ce 7047     		bx	lr
 2630              	.LVL244:
 2631              	.L154:
 983:Core/Src/main.c ****         } else if (channel_num == 9) {
 2632              		.loc 1 983 20 view .LVU930
 2633 03d0 2320     		movs	r0, #35
 2634              	.LVL245:
 983:Core/Src/main.c ****         } else if (channel_num == 9) {
 2635              		.loc 1 983 20 view .LVU931
 2636 03d2 7047     		bx	lr
 2637              	.LVL246:
 2638              	.L156:
 985:Core/Src/main.c ****         } else if (channel_num == 10) {
 2639              		.loc 1 985 20 view .LVU932
 2640 03d4 2720     		movs	r0, #39
 2641              	.LVL247:
 985:Core/Src/main.c ****         } else if (channel_num == 10) {
 2642              		.loc 1 985 20 view .LVU933
 2643 03d6 7047     		bx	lr
 2644              	.LVL248:
 2645              	.L158:
 987:Core/Src/main.c ****         } else if (channel_num == 11) {
 2646              		.loc 1 987 20 view .LVU934
 2647 03d8 2B20     		movs	r0, #43
ARM GAS  /tmp/ccrYMPR3.s 			page 78


 2648              	.LVL249:
 987:Core/Src/main.c ****         } else if (channel_num == 11) {
 2649              		.loc 1 987 20 view .LVU935
 2650 03da 7047     		bx	lr
 2651              	.LVL250:
 2652              	.L160:
 989:Core/Src/main.c ****         }
 2653              		.loc 1 989 20 view .LVU936
 2654 03dc 2F20     		movs	r0, #47
 2655              	.LVL251:
 989:Core/Src/main.c ****         }
 2656              		.loc 1 989 20 view .LVU937
 2657 03de 7047     		bx	lr
 2658              	.LVL252:
 2659              	.L165:
 993:Core/Src/main.c ****         } else if (channel_num == 1) {
 2660              		.loc 1 993 20 view .LVU938
 2661 03e0 3620     		movs	r0, #54
 2662              	.LVL253:
 993:Core/Src/main.c ****         } else if (channel_num == 1) {
 2663              		.loc 1 993 20 view .LVU939
 2664 03e2 7047     		bx	lr
 2665              	.LVL254:
 2666              	.L167:
 995:Core/Src/main.c ****         } else if (channel_num == 2) {
 2667              		.loc 1 995 20 view .LVU940
 2668 03e4 3A20     		movs	r0, #58
 2669              	.LVL255:
 995:Core/Src/main.c ****         } else if (channel_num == 2) {
 2670              		.loc 1 995 20 view .LVU941
 2671 03e6 7047     		bx	lr
 2672              	.LVL256:
 2673              	.L169:
 997:Core/Src/main.c ****         } else if (channel_num == 3) {
 2674              		.loc 1 997 20 view .LVU942
 2675 03e8 3E20     		movs	r0, #62
 2676              	.LVL257:
 997:Core/Src/main.c ****         } else if (channel_num == 3) {
 2677              		.loc 1 997 20 view .LVU943
 2678 03ea 7047     		bx	lr
 2679              	.LVL258:
 2680              	.L171:
 999:Core/Src/main.c ****         } else if (channel_num == 4) {
 2681              		.loc 1 999 20 view .LVU944
 2682 03ec 4220     		movs	r0, #66
 2683              	.LVL259:
 999:Core/Src/main.c ****         } else if (channel_num == 4) {
 2684              		.loc 1 999 20 view .LVU945
 2685 03ee 7047     		bx	lr
 2686              	.LVL260:
 2687              	.L173:
1001:Core/Src/main.c ****         } else if (channel_num == 5) {
 2688              		.loc 1 1001 20 view .LVU946
 2689 03f0 4620     		movs	r0, #70
 2690              	.LVL261:
1001:Core/Src/main.c ****         } else if (channel_num == 5) {
 2691              		.loc 1 1001 20 view .LVU947
ARM GAS  /tmp/ccrYMPR3.s 			page 79


 2692 03f2 7047     		bx	lr
 2693              	.LVL262:
 2694              	.L175:
1003:Core/Src/main.c ****         } else if (channel_num == 6) {
 2695              		.loc 1 1003 20 view .LVU948
 2696 03f4 4A20     		movs	r0, #74
 2697              	.LVL263:
1003:Core/Src/main.c ****         } else if (channel_num == 6) {
 2698              		.loc 1 1003 20 view .LVU949
 2699 03f6 7047     		bx	lr
 2700              	.LVL264:
 2701              	.L177:
1005:Core/Src/main.c ****         } else if (channel_num == 7) {
 2702              		.loc 1 1005 20 view .LVU950
 2703 03f8 4E20     		movs	r0, #78
 2704              	.LVL265:
1005:Core/Src/main.c ****         } else if (channel_num == 7) {
 2705              		.loc 1 1005 20 view .LVU951
 2706 03fa 7047     		bx	lr
 2707              	.LVL266:
 2708              	.L179:
1007:Core/Src/main.c ****         } else if (channel_num == 8) {
 2709              		.loc 1 1007 20 view .LVU952
 2710 03fc 5220     		movs	r0, #82
 2711              	.LVL267:
1007:Core/Src/main.c ****         } else if (channel_num == 8) {
 2712              		.loc 1 1007 20 view .LVU953
 2713 03fe 7047     		bx	lr
 2714              	.LVL268:
 2715              	.L181:
1009:Core/Src/main.c ****         } else if (channel_num == 9) {
 2716              		.loc 1 1009 20 view .LVU954
 2717 0400 5620     		movs	r0, #86
 2718              	.LVL269:
1009:Core/Src/main.c ****         } else if (channel_num == 9) {
 2719              		.loc 1 1009 20 view .LVU955
 2720 0402 7047     		bx	lr
 2721              	.LVL270:
 2722              	.L183:
1011:Core/Src/main.c ****         } else if (channel_num == 10) {
 2723              		.loc 1 1011 20 view .LVU956
 2724 0404 5A20     		movs	r0, #90
 2725              	.LVL271:
1011:Core/Src/main.c ****         } else if (channel_num == 10) {
 2726              		.loc 1 1011 20 view .LVU957
 2727 0406 7047     		bx	lr
 2728              	.LVL272:
 2729              	.L185:
1013:Core/Src/main.c ****         } else if (channel_num == 11) {
 2730              		.loc 1 1013 20 view .LVU958
 2731 0408 5E20     		movs	r0, #94
 2732              	.LVL273:
1013:Core/Src/main.c ****         } else if (channel_num == 11) {
 2733              		.loc 1 1013 20 view .LVU959
 2734 040a 7047     		bx	lr
 2735              	.LVL274:
 2736              	.L187:
ARM GAS  /tmp/ccrYMPR3.s 			page 80


1015:Core/Src/main.c ****         }
 2737              		.loc 1 1015 20 view .LVU960
 2738 040c 6220     		movs	r0, #98
 2739              	.LVL275:
1015:Core/Src/main.c ****         }
 2740              		.loc 1 1015 20 view .LVU961
 2741 040e 7047     		bx	lr
 2742              	.LVL276:
 2743              	.L191:
1019:Core/Src/main.c ****         } else if (channel_num == 1) {
 2744              		.loc 1 1019 20 view .LVU962
 2745 0410 6920     		movs	r0, #105
 2746              	.LVL277:
1019:Core/Src/main.c ****         } else if (channel_num == 1) {
 2747              		.loc 1 1019 20 view .LVU963
 2748 0412 7047     		bx	lr
 2749              	.LVL278:
 2750              	.L193:
1021:Core/Src/main.c ****         } else if (channel_num == 2) {
 2751              		.loc 1 1021 20 view .LVU964
 2752 0414 6D20     		movs	r0, #109
 2753              	.LVL279:
1021:Core/Src/main.c ****         } else if (channel_num == 2) {
 2754              		.loc 1 1021 20 view .LVU965
 2755 0416 7047     		bx	lr
 2756              	.LVL280:
 2757              	.L195:
1023:Core/Src/main.c ****         } else if (channel_num == 3) {
 2758              		.loc 1 1023 20 view .LVU966
 2759 0418 7120     		movs	r0, #113
 2760              	.LVL281:
1023:Core/Src/main.c ****         } else if (channel_num == 3) {
 2761              		.loc 1 1023 20 view .LVU967
 2762 041a 7047     		bx	lr
 2763              	.LVL282:
 2764              	.L197:
1025:Core/Src/main.c ****         } else if (channel_num == 4) {
 2765              		.loc 1 1025 20 view .LVU968
 2766 041c 7520     		movs	r0, #117
 2767              	.LVL283:
1025:Core/Src/main.c ****         } else if (channel_num == 4) {
 2768              		.loc 1 1025 20 view .LVU969
 2769 041e 7047     		bx	lr
 2770              	.LVL284:
 2771              	.L199:
1027:Core/Src/main.c ****         } else if (channel_num == 5) {
 2772              		.loc 1 1027 20 view .LVU970
 2773 0420 7920     		movs	r0, #121
 2774              	.LVL285:
1027:Core/Src/main.c ****         } else if (channel_num == 5) {
 2775              		.loc 1 1027 20 view .LVU971
 2776 0422 7047     		bx	lr
 2777              	.LVL286:
 2778              	.L201:
1029:Core/Src/main.c ****         } else if (channel_num == 6) {
 2779              		.loc 1 1029 20 view .LVU972
 2780 0424 7D20     		movs	r0, #125
ARM GAS  /tmp/ccrYMPR3.s 			page 81


 2781              	.LVL287:
1029:Core/Src/main.c ****         } else if (channel_num == 6) {
 2782              		.loc 1 1029 20 view .LVU973
 2783 0426 7047     		bx	lr
 2784              	.LVL288:
 2785              	.L203:
1031:Core/Src/main.c ****         } else if (channel_num == 7) {
 2786              		.loc 1 1031 20 view .LVU974
 2787 0428 8120     		movs	r0, #129
 2788              	.LVL289:
1031:Core/Src/main.c ****         } else if (channel_num == 7) {
 2789              		.loc 1 1031 20 view .LVU975
 2790 042a 7047     		bx	lr
 2791              	.LVL290:
 2792              	.L205:
1033:Core/Src/main.c ****         } else if (channel_num == 8) {
 2793              		.loc 1 1033 20 view .LVU976
 2794 042c 8520     		movs	r0, #133
 2795              	.LVL291:
1033:Core/Src/main.c ****         } else if (channel_num == 8) {
 2796              		.loc 1 1033 20 view .LVU977
 2797 042e 7047     		bx	lr
 2798              	.LVL292:
 2799              	.L207:
1035:Core/Src/main.c ****         } else if (channel_num == 9) {
 2800              		.loc 1 1035 20 view .LVU978
 2801 0430 8920     		movs	r0, #137
 2802              	.LVL293:
1035:Core/Src/main.c ****         } else if (channel_num == 9) {
 2803              		.loc 1 1035 20 view .LVU979
 2804 0432 7047     		bx	lr
 2805              	.LVL294:
 2806              	.L209:
1037:Core/Src/main.c ****         } else if (channel_num == 10) {
 2807              		.loc 1 1037 20 view .LVU980
 2808 0434 8D20     		movs	r0, #141
 2809              	.LVL295:
1037:Core/Src/main.c ****         } else if (channel_num == 10) {
 2810              		.loc 1 1037 20 view .LVU981
 2811 0436 7047     		bx	lr
 2812              	.LVL296:
 2813              	.L211:
1039:Core/Src/main.c ****         } else if (channel_num == 11) {
 2814              		.loc 1 1039 20 view .LVU982
 2815 0438 9120     		movs	r0, #145
 2816              	.LVL297:
1039:Core/Src/main.c ****         } else if (channel_num == 11) {
 2817              		.loc 1 1039 20 view .LVU983
 2818 043a 7047     		bx	lr
 2819              	.LVL298:
 2820              	.L213:
1041:Core/Src/main.c ****         }
 2821              		.loc 1 1041 20 view .LVU984
 2822 043c 9520     		movs	r0, #149
 2823              	.LVL299:
1041:Core/Src/main.c ****         }
 2824              		.loc 1 1041 20 view .LVU985
ARM GAS  /tmp/ccrYMPR3.s 			page 82


 2825 043e 7047     		bx	lr
 2826              	.LVL300:
 2827              	.L217:
1045:Core/Src/main.c ****         } else if (channel_num == 1) {
 2828              		.loc 1 1045 20 view .LVU986
 2829 0440 9C20     		movs	r0, #156
 2830              	.LVL301:
1045:Core/Src/main.c ****         } else if (channel_num == 1) {
 2831              		.loc 1 1045 20 view .LVU987
 2832 0442 7047     		bx	lr
 2833              	.LVL302:
 2834              	.L219:
1047:Core/Src/main.c ****         } else if (channel_num == 2) {
 2835              		.loc 1 1047 20 view .LVU988
 2836 0444 A020     		movs	r0, #160
 2837              	.LVL303:
1047:Core/Src/main.c ****         } else if (channel_num == 2) {
 2838              		.loc 1 1047 20 view .LVU989
 2839 0446 7047     		bx	lr
 2840              	.LVL304:
 2841              	.L221:
1049:Core/Src/main.c ****         } else if (channel_num == 3) {
 2842              		.loc 1 1049 20 view .LVU990
 2843 0448 A420     		movs	r0, #164
 2844              	.LVL305:
1049:Core/Src/main.c ****         } else if (channel_num == 3) {
 2845              		.loc 1 1049 20 view .LVU991
 2846 044a 7047     		bx	lr
 2847              	.LVL306:
 2848              	.L223:
1051:Core/Src/main.c ****         } else if (channel_num == 4) {
 2849              		.loc 1 1051 20 view .LVU992
 2850 044c A820     		movs	r0, #168
 2851              	.LVL307:
1051:Core/Src/main.c ****         } else if (channel_num == 4) {
 2852              		.loc 1 1051 20 view .LVU993
 2853 044e 7047     		bx	lr
 2854              	.LVL308:
 2855              	.L225:
1053:Core/Src/main.c ****         } else if (channel_num == 5) {
 2856              		.loc 1 1053 20 view .LVU994
 2857 0450 AC20     		movs	r0, #172
 2858              	.LVL309:
1053:Core/Src/main.c ****         } else if (channel_num == 5) {
 2859              		.loc 1 1053 20 view .LVU995
 2860 0452 7047     		bx	lr
 2861              	.LVL310:
 2862              	.L227:
1055:Core/Src/main.c ****         } else if (channel_num == 6) {
 2863              		.loc 1 1055 20 view .LVU996
 2864 0454 B020     		movs	r0, #176
 2865              	.LVL311:
1055:Core/Src/main.c ****         } else if (channel_num == 6) {
 2866              		.loc 1 1055 20 view .LVU997
 2867 0456 7047     		bx	lr
 2868              	.LVL312:
 2869              	.L229:
ARM GAS  /tmp/ccrYMPR3.s 			page 83


1057:Core/Src/main.c ****         } else if (channel_num == 7) {
 2870              		.loc 1 1057 20 view .LVU998
 2871 0458 B420     		movs	r0, #180
 2872              	.LVL313:
1057:Core/Src/main.c ****         } else if (channel_num == 7) {
 2873              		.loc 1 1057 20 view .LVU999
 2874 045a 7047     		bx	lr
 2875              	.LVL314:
 2876              	.L231:
1059:Core/Src/main.c ****         } else if (channel_num == 8) {
 2877              		.loc 1 1059 20 view .LVU1000
 2878 045c B820     		movs	r0, #184
 2879              	.LVL315:
1059:Core/Src/main.c ****         } else if (channel_num == 8) {
 2880              		.loc 1 1059 20 view .LVU1001
 2881 045e 7047     		bx	lr
 2882              	.LVL316:
 2883              	.L233:
1061:Core/Src/main.c ****         } else if (channel_num == 9) {
 2884              		.loc 1 1061 20 view .LVU1002
 2885 0460 BC20     		movs	r0, #188
 2886              	.LVL317:
1061:Core/Src/main.c ****         } else if (channel_num == 9) {
 2887              		.loc 1 1061 20 view .LVU1003
 2888 0462 7047     		bx	lr
 2889              	.LVL318:
 2890              	.L235:
1063:Core/Src/main.c ****         } else if (channel_num == 10) {
 2891              		.loc 1 1063 20 view .LVU1004
 2892 0464 C020     		movs	r0, #192
 2893              	.LVL319:
1063:Core/Src/main.c ****         } else if (channel_num == 10) {
 2894              		.loc 1 1063 20 view .LVU1005
 2895 0466 7047     		bx	lr
 2896              	.LVL320:
 2897              	.L237:
1065:Core/Src/main.c ****         } else if (channel_num == 11) {
 2898              		.loc 1 1065 20 view .LVU1006
 2899 0468 C420     		movs	r0, #196
 2900              	.LVL321:
1065:Core/Src/main.c ****         } else if (channel_num == 11) {
 2901              		.loc 1 1065 20 view .LVU1007
 2902 046a 7047     		bx	lr
 2903              	.LVL322:
 2904              	.L239:
1067:Core/Src/main.c ****         }
 2905              		.loc 1 1067 20 view .LVU1008
 2906 046c C820     		movs	r0, #200
 2907              	.LVL323:
1067:Core/Src/main.c ****         }
 2908              		.loc 1 1067 20 view .LVU1009
 2909 046e 7047     		bx	lr
 2910              	.LVL324:
 2911              	.L241:
1071:Core/Src/main.c ****         } else if (channel_num == 1) {
 2912              		.loc 1 1071 20 view .LVU1010
 2913 0470 CF20     		movs	r0, #207
ARM GAS  /tmp/ccrYMPR3.s 			page 84


 2914              	.LVL325:
1071:Core/Src/main.c ****         } else if (channel_num == 1) {
 2915              		.loc 1 1071 20 view .LVU1011
 2916 0472 7047     		bx	lr
 2917              	.LVL326:
 2918              	.L243:
1073:Core/Src/main.c ****         } else if (channel_num == 2) {
 2919              		.loc 1 1073 20 view .LVU1012
 2920 0474 D320     		movs	r0, #211
 2921              	.LVL327:
1073:Core/Src/main.c ****         } else if (channel_num == 2) {
 2922              		.loc 1 1073 20 view .LVU1013
 2923 0476 7047     		bx	lr
 2924              	.LVL328:
 2925              	.L245:
1075:Core/Src/main.c ****         } else if (channel_num == 3) {
 2926              		.loc 1 1075 20 view .LVU1014
 2927 0478 D720     		movs	r0, #215
 2928              	.LVL329:
1075:Core/Src/main.c ****         } else if (channel_num == 3) {
 2929              		.loc 1 1075 20 view .LVU1015
 2930 047a 7047     		bx	lr
 2931              	.LVL330:
 2932              	.L247:
1077:Core/Src/main.c ****         } else if (channel_num == 4) {
 2933              		.loc 1 1077 20 view .LVU1016
 2934 047c DB20     		movs	r0, #219
 2935              	.LVL331:
1077:Core/Src/main.c ****         } else if (channel_num == 4) {
 2936              		.loc 1 1077 20 view .LVU1017
 2937 047e 7047     		bx	lr
 2938              	.LVL332:
 2939              	.L249:
1079:Core/Src/main.c ****         } else if (channel_num == 5) {
 2940              		.loc 1 1079 20 view .LVU1018
 2941 0480 DF20     		movs	r0, #223
 2942              	.LVL333:
1079:Core/Src/main.c ****         } else if (channel_num == 5) {
 2943              		.loc 1 1079 20 view .LVU1019
 2944 0482 7047     		bx	lr
 2945              	.LVL334:
 2946              	.L251:
1081:Core/Src/main.c ****         } else if (channel_num == 6) {
 2947              		.loc 1 1081 20 view .LVU1020
 2948 0484 E320     		movs	r0, #227
 2949              	.LVL335:
1081:Core/Src/main.c ****         } else if (channel_num == 6) {
 2950              		.loc 1 1081 20 view .LVU1021
 2951 0486 7047     		bx	lr
 2952              	.LVL336:
 2953              	.L253:
1083:Core/Src/main.c ****         } else if (channel_num == 7) {
 2954              		.loc 1 1083 20 view .LVU1022
 2955 0488 E720     		movs	r0, #231
 2956              	.LVL337:
1083:Core/Src/main.c ****         } else if (channel_num == 7) {
 2957              		.loc 1 1083 20 view .LVU1023
ARM GAS  /tmp/ccrYMPR3.s 			page 85


 2958 048a 7047     		bx	lr
 2959              	.LVL338:
 2960              	.L255:
1085:Core/Src/main.c ****         } else if (channel_num == 8) {
 2961              		.loc 1 1085 20 view .LVU1024
 2962 048c EB20     		movs	r0, #235
 2963              	.LVL339:
1085:Core/Src/main.c ****         } else if (channel_num == 8) {
 2964              		.loc 1 1085 20 view .LVU1025
 2965 048e 7047     		bx	lr
 2966              	.LVL340:
 2967              	.L257:
1087:Core/Src/main.c ****         } else if (channel_num == 9) {
 2968              		.loc 1 1087 20 view .LVU1026
 2969 0490 EF20     		movs	r0, #239
 2970              	.LVL341:
1087:Core/Src/main.c ****         } else if (channel_num == 9) {
 2971              		.loc 1 1087 20 view .LVU1027
 2972 0492 7047     		bx	lr
 2973              	.LVL342:
 2974              	.L259:
1089:Core/Src/main.c ****         } else if (channel_num == 10) {
 2975              		.loc 1 1089 20 view .LVU1028
 2976 0494 F320     		movs	r0, #243
 2977              	.LVL343:
1089:Core/Src/main.c ****         } else if (channel_num == 10) {
 2978              		.loc 1 1089 20 view .LVU1029
 2979 0496 7047     		bx	lr
 2980              	.LVL344:
 2981              	.L261:
1091:Core/Src/main.c ****         } else if (channel_num == 11) {
 2982              		.loc 1 1091 20 view .LVU1030
 2983 0498 F720     		movs	r0, #247
 2984              	.LVL345:
1091:Core/Src/main.c ****         } else if (channel_num == 11) {
 2985              		.loc 1 1091 20 view .LVU1031
 2986 049a 7047     		bx	lr
 2987              	.LVL346:
 2988              	.L263:
1093:Core/Src/main.c ****         } 
 2989              		.loc 1 1093 20 view .LVU1032
 2990 049c FB20     		movs	r0, #251
 2991              	.LVL347:
 2992              		.loc 1 1097 1 view .LVU1033
 2993 049e 7047     		bx	lr
 2994              		.cfi_endproc
 2995              	.LFE221:
 2997              		.section	.text.DAC_TO_MIDI,"ax",%progbits
 2998              		.align	1
 2999              		.global	DAC_TO_MIDI
 3000              		.syntax unified
 3001              		.thumb
 3002              		.thumb_func
 3003              		.fpu fpv4-sp-d16
 3005              	DAC_TO_MIDI:
 3006              	.LVL348:
 3007              	.LFB222:
ARM GAS  /tmp/ccrYMPR3.s 			page 86


1098:Core/Src/main.c **** 
1099:Core/Src/main.c **** // need to also set variable for NOTE ON and NOTE OFF (elsewhere likely, global variable)
1100:Core/Src/main.c **** uint8_t DAC_TO_MIDI(uint8_t val){
 3008              		.loc 1 1100 33 is_stmt 1 view -0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 0
 3011              		@ frame_needed = 0, uses_anonymous_args = 0
 3012              		@ link register save eliminated.
1101:Core/Src/main.c ****   uint8_t midi = 0;
 3013              		.loc 1 1101 3 view .LVU1035
1102:Core/Src/main.c ****   if((val > 0) && (val < 48)) midi = val/4;
 3014              		.loc 1 1102 3 view .LVU1036
 3015              		.loc 1 1102 16 is_stmt 0 view .LVU1037
 3016 0000 431E     		subs	r3, r0, #1
 3017 0002 DBB2     		uxtb	r3, r3
 3018              		.loc 1 1102 5 view .LVU1038
 3019 0004 2E2B     		cmp	r3, #46
 3020 0006 01D8     		bhi	.L276
 3021              		.loc 1 1102 31 is_stmt 1 discriminator 1 view .LVU1039
 3022              		.loc 1 1102 36 is_stmt 0 discriminator 1 view .LVU1040
 3023 0008 8008     		lsrs	r0, r0, #2
 3024              	.LVL349:
 3025              		.loc 1 1102 36 discriminator 1 view .LVU1041
 3026 000a 7047     		bx	lr
 3027              	.LVL350:
 3028              	.L276:
1103:Core/Src/main.c ****   else midi = (val/4) - 1;
 3029              		.loc 1 1103 8 is_stmt 1 view .LVU1042
 3030              		.loc 1 1103 23 is_stmt 0 view .LVU1043
 3031 000c 8008     		lsrs	r0, r0, #2
 3032              	.LVL351:
 3033              		.loc 1 1103 13 view .LVU1044
 3034 000e 0138     		subs	r0, r0, #1
 3035 0010 C0B2     		uxtb	r0, r0
 3036              	.LVL352:
1104:Core/Src/main.c **** 
1105:Core/Src/main.c ****   return midi;
 3037              		.loc 1 1105 3 is_stmt 1 view .LVU1045
1106:Core/Src/main.c **** }
 3038              		.loc 1 1106 1 is_stmt 0 view .LVU1046
 3039 0012 7047     		bx	lr
 3040              		.cfi_endproc
 3041              	.LFE222:
 3043              		.section	.text.Error_Handler,"ax",%progbits
 3044              		.align	1
 3045              		.global	Error_Handler
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3049              		.fpu fpv4-sp-d16
 3051              	Error_Handler:
 3052              	.LFB223:
1107:Core/Src/main.c **** 
1108:Core/Src/main.c **** 
1109:Core/Src/main.c **** /* USER CODE END 4 */
1110:Core/Src/main.c **** 
1111:Core/Src/main.c **** /**
ARM GAS  /tmp/ccrYMPR3.s 			page 87


1112:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1113:Core/Src/main.c ****   * @retval None
1114:Core/Src/main.c ****   */
1115:Core/Src/main.c **** void Error_Handler(void)
1116:Core/Src/main.c **** {
 3053              		.loc 1 1116 1 is_stmt 1 view -0
 3054              		.cfi_startproc
 3055              		@ Volatile: function does not return.
 3056              		@ args = 0, pretend = 0, frame = 0
 3057              		@ frame_needed = 0, uses_anonymous_args = 0
 3058              		@ link register save eliminated.
1117:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1118:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1119:Core/Src/main.c ****   __disable_irq();
 3059              		.loc 1 1119 3 view .LVU1048
 3060              	.LBB65:
 3061              	.LBI65:
 3062              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  /tmp/ccrYMPR3.s 			page 88


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccrYMPR3.s 			page 89


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  /tmp/ccrYMPR3.s 			page 90


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3063              		.loc 3 207 27 view .LVU1049
 3064              	.LBB66:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccrYMPR3.s 			page 91


 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3065              		.loc 3 209 3 view .LVU1050
 3066              		.syntax unified
 3067              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3068 0000 72B6     		cpsid i
 3069              	@ 0 "" 2
 3070              		.thumb
 3071              		.syntax unified
 3072              	.L279:
 3073              	.LBE66:
 3074              	.LBE65:
1120:Core/Src/main.c ****   while (1)
 3075              		.loc 1 1120 3 discriminator 1 view .LVU1051
1121:Core/Src/main.c ****   {
1122:Core/Src/main.c ****   }
 3076              		.loc 1 1122 3 discriminator 1 view .LVU1052
1120:Core/Src/main.c ****   while (1)
 3077              		.loc 1 1120 9 discriminator 1 view .LVU1053
 3078 0002 FEE7     		b	.L279
 3079              		.cfi_endproc
 3080              	.LFE223:
 3082              		.section	.text.MX_SPI1_Init,"ax",%progbits
 3083              		.align	1
 3084              		.syntax unified
 3085              		.thumb
 3086              		.thumb_func
 3087              		.fpu fpv4-sp-d16
 3089              	MX_SPI1_Init:
 3090              	.LFB209:
 443:Core/Src/main.c **** 
 3091              		.loc 1 443 1 view -0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 0
 3094              		@ frame_needed = 0, uses_anonymous_args = 0
 3095 0000 08B5     		push	{r3, lr}
 3096              	.LCFI20:
 3097              		.cfi_def_cfa_offset 8
 3098              		.cfi_offset 3, -8
 3099              		.cfi_offset 14, -4
 453:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 3100              		.loc 1 453 3 view .LVU1055
 453:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 3101              		.loc 1 453 18 is_stmt 0 view .LVU1056
 3102 0002 0F48     		ldr	r0, .L284
 3103 0004 0F4B     		ldr	r3, .L284+4
 3104 0006 0360     		str	r3, [r0]
 454:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 3105              		.loc 1 454 3 is_stmt 1 view .LVU1057
 454:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 3106              		.loc 1 454 19 is_stmt 0 view .LVU1058
 3107 0008 4FF48273 		mov	r3, #260
 3108 000c 4360     		str	r3, [r0, #4]
 455:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 3109              		.loc 1 455 3 is_stmt 1 view .LVU1059
 455:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 3110              		.loc 1 455 24 is_stmt 0 view .LVU1060
 3111 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccrYMPR3.s 			page 92


 3112 0010 8360     		str	r3, [r0, #8]
 456:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 3113              		.loc 1 456 3 is_stmt 1 view .LVU1061
 456:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 3114              		.loc 1 456 23 is_stmt 0 view .LVU1062
 3115 0012 4FF4E062 		mov	r2, #1792
 3116 0016 C260     		str	r2, [r0, #12]
 457:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 3117              		.loc 1 457 3 is_stmt 1 view .LVU1063
 457:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 3118              		.loc 1 457 26 is_stmt 0 view .LVU1064
 3119 0018 0361     		str	r3, [r0, #16]
 458:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 3120              		.loc 1 458 3 is_stmt 1 view .LVU1065
 458:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 3121              		.loc 1 458 23 is_stmt 0 view .LVU1066
 3122 001a 4361     		str	r3, [r0, #20]
 459:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 3123              		.loc 1 459 3 is_stmt 1 view .LVU1067
 459:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 3124              		.loc 1 459 18 is_stmt 0 view .LVU1068
 3125 001c 4FF40072 		mov	r2, #512
 3126 0020 8261     		str	r2, [r0, #24]
 460:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 3127              		.loc 1 460 3 is_stmt 1 view .LVU1069
 460:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 3128              		.loc 1 460 32 is_stmt 0 view .LVU1070
 3129 0022 2022     		movs	r2, #32
 3130 0024 C261     		str	r2, [r0, #28]
 461:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 3131              		.loc 1 461 3 is_stmt 1 view .LVU1071
 461:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 3132              		.loc 1 461 23 is_stmt 0 view .LVU1072
 3133 0026 0362     		str	r3, [r0, #32]
 462:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3134              		.loc 1 462 3 is_stmt 1 view .LVU1073
 462:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3135              		.loc 1 462 21 is_stmt 0 view .LVU1074
 3136 0028 4362     		str	r3, [r0, #36]
 463:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 3137              		.loc 1 463 3 is_stmt 1 view .LVU1075
 463:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 3138              		.loc 1 463 29 is_stmt 0 view .LVU1076
 3139 002a 8362     		str	r3, [r0, #40]
 464:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3140              		.loc 1 464 3 is_stmt 1 view .LVU1077
 464:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3141              		.loc 1 464 28 is_stmt 0 view .LVU1078
 3142 002c 0722     		movs	r2, #7
 3143 002e C262     		str	r2, [r0, #44]
 465:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3144              		.loc 1 465 3 is_stmt 1 view .LVU1079
 465:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3145              		.loc 1 465 24 is_stmt 0 view .LVU1080
 3146 0030 0363     		str	r3, [r0, #48]
 466:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 3147              		.loc 1 466 3 is_stmt 1 view .LVU1081
ARM GAS  /tmp/ccrYMPR3.s 			page 93


 466:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 3148              		.loc 1 466 23 is_stmt 0 view .LVU1082
 3149 0032 4363     		str	r3, [r0, #52]
 467:Core/Src/main.c ****   {
 3150              		.loc 1 467 3 is_stmt 1 view .LVU1083
 467:Core/Src/main.c ****   {
 3151              		.loc 1 467 7 is_stmt 0 view .LVU1084
 3152 0034 FFF7FEFF 		bl	HAL_SPI_Init
 3153              	.LVL353:
 467:Core/Src/main.c ****   {
 3154              		.loc 1 467 6 view .LVU1085
 3155 0038 00B9     		cbnz	r0, .L283
 475:Core/Src/main.c **** 
 3156              		.loc 1 475 1 view .LVU1086
 3157 003a 08BD     		pop	{r3, pc}
 3158              	.L283:
 469:Core/Src/main.c ****   }
 3159              		.loc 1 469 5 is_stmt 1 view .LVU1087
 3160 003c FFF7FEFF 		bl	Error_Handler
 3161              	.LVL354:
 3162              	.L285:
 3163              		.align	2
 3164              	.L284:
 3165 0040 00000000 		.word	.LANCHOR6
 3166 0044 00300140 		.word	1073819648
 3167              		.cfi_endproc
 3168              	.LFE209:
 3170              		.section	.text.MX_I2C1_Init,"ax",%progbits
 3171              		.align	1
 3172              		.syntax unified
 3173              		.thumb
 3174              		.thumb_func
 3175              		.fpu fpv4-sp-d16
 3177              	MX_I2C1_Init:
 3178              	.LFB208:
 395:Core/Src/main.c **** 
 3179              		.loc 1 395 1 view -0
 3180              		.cfi_startproc
 3181              		@ args = 0, pretend = 0, frame = 0
 3182              		@ frame_needed = 0, uses_anonymous_args = 0
 3183 0000 08B5     		push	{r3, lr}
 3184              	.LCFI21:
 3185              		.cfi_def_cfa_offset 8
 3186              		.cfi_offset 3, -8
 3187              		.cfi_offset 14, -4
 404:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 3188              		.loc 1 404 3 view .LVU1089
 404:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 3189              		.loc 1 404 18 is_stmt 0 view .LVU1090
 3190 0002 1148     		ldr	r0, .L294
 3191 0004 114B     		ldr	r3, .L294+4
 3192 0006 0360     		str	r3, [r0]
 405:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 3193              		.loc 1 405 3 is_stmt 1 view .LVU1091
 405:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 3194              		.loc 1 405 21 is_stmt 0 view .LVU1092
 3195 0008 114B     		ldr	r3, .L294+8
ARM GAS  /tmp/ccrYMPR3.s 			page 94


 3196 000a 4360     		str	r3, [r0, #4]
 406:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 3197              		.loc 1 406 3 is_stmt 1 view .LVU1093
 406:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 3198              		.loc 1 406 26 is_stmt 0 view .LVU1094
 3199 000c 0023     		movs	r3, #0
 3200 000e 8360     		str	r3, [r0, #8]
 407:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 3201              		.loc 1 407 3 is_stmt 1 view .LVU1095
 407:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 3202              		.loc 1 407 29 is_stmt 0 view .LVU1096
 3203 0010 0122     		movs	r2, #1
 3204 0012 C260     		str	r2, [r0, #12]
 408:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 3205              		.loc 1 408 3 is_stmt 1 view .LVU1097
 408:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 3206              		.loc 1 408 30 is_stmt 0 view .LVU1098
 3207 0014 0361     		str	r3, [r0, #16]
 409:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 3208              		.loc 1 409 3 is_stmt 1 view .LVU1099
 409:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 3209              		.loc 1 409 26 is_stmt 0 view .LVU1100
 3210 0016 4361     		str	r3, [r0, #20]
 410:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 3211              		.loc 1 410 3 is_stmt 1 view .LVU1101
 410:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 3212              		.loc 1 410 31 is_stmt 0 view .LVU1102
 3213 0018 8361     		str	r3, [r0, #24]
 411:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 3214              		.loc 1 411 3 is_stmt 1 view .LVU1103
 411:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 3215              		.loc 1 411 30 is_stmt 0 view .LVU1104
 3216 001a C361     		str	r3, [r0, #28]
 412:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 3217              		.loc 1 412 3 is_stmt 1 view .LVU1105
 412:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 3218              		.loc 1 412 28 is_stmt 0 view .LVU1106
 3219 001c 0362     		str	r3, [r0, #32]
 413:Core/Src/main.c ****   {
 3220              		.loc 1 413 3 is_stmt 1 view .LVU1107
 413:Core/Src/main.c ****   {
 3221              		.loc 1 413 7 is_stmt 0 view .LVU1108
 3222 001e FFF7FEFF 		bl	HAL_I2C_Init
 3223              	.LVL355:
 413:Core/Src/main.c ****   {
 3224              		.loc 1 413 6 view .LVU1109
 3225 0022 50B9     		cbnz	r0, .L291
 420:Core/Src/main.c ****   {
 3226              		.loc 1 420 3 is_stmt 1 view .LVU1110
 420:Core/Src/main.c ****   {
 3227              		.loc 1 420 7 is_stmt 0 view .LVU1111
 3228 0024 0021     		movs	r1, #0
 3229 0026 0848     		ldr	r0, .L294
 3230 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 3231              	.LVL356:
 420:Core/Src/main.c ****   {
 3232              		.loc 1 420 6 view .LVU1112
ARM GAS  /tmp/ccrYMPR3.s 			page 95


 3233 002c 38B9     		cbnz	r0, .L292
 427:Core/Src/main.c ****   {
 3234              		.loc 1 427 3 is_stmt 1 view .LVU1113
 427:Core/Src/main.c ****   {
 3235              		.loc 1 427 7 is_stmt 0 view .LVU1114
 3236 002e 0021     		movs	r1, #0
 3237 0030 0548     		ldr	r0, .L294
 3238 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 3239              	.LVL357:
 427:Core/Src/main.c ****   {
 3240              		.loc 1 427 6 view .LVU1115
 3241 0036 20B9     		cbnz	r0, .L293
 435:Core/Src/main.c **** 
 3242              		.loc 1 435 1 view .LVU1116
 3243 0038 08BD     		pop	{r3, pc}
 3244              	.L291:
 415:Core/Src/main.c ****   }
 3245              		.loc 1 415 5 is_stmt 1 view .LVU1117
 3246 003a FFF7FEFF 		bl	Error_Handler
 3247              	.LVL358:
 3248              	.L292:
 422:Core/Src/main.c ****   }
 3249              		.loc 1 422 5 view .LVU1118
 3250 003e FFF7FEFF 		bl	Error_Handler
 3251              	.LVL359:
 3252              	.L293:
 429:Core/Src/main.c ****   }
 3253              		.loc 1 429 5 view .LVU1119
 3254 0042 FFF7FEFF 		bl	Error_Handler
 3255              	.LVL360:
 3256              	.L295:
 3257 0046 00BF     		.align	2
 3258              	.L294:
 3259 0048 00000000 		.word	.LANCHOR7
 3260 004c 00540040 		.word	1073763328
 3261 0050 EC9C9010 		.word	277912812
 3262              		.cfi_endproc
 3263              	.LFE208:
 3265              		.section	.text.MX_SPI2_Init,"ax",%progbits
 3266              		.align	1
 3267              		.syntax unified
 3268              		.thumb
 3269              		.thumb_func
 3270              		.fpu fpv4-sp-d16
 3272              	MX_SPI2_Init:
 3273              	.LFB210:
 483:Core/Src/main.c **** 
 3274              		.loc 1 483 1 view -0
 3275              		.cfi_startproc
 3276              		@ args = 0, pretend = 0, frame = 0
 3277              		@ frame_needed = 0, uses_anonymous_args = 0
 3278 0000 08B5     		push	{r3, lr}
 3279              	.LCFI22:
 3280              		.cfi_def_cfa_offset 8
 3281              		.cfi_offset 3, -8
 3282              		.cfi_offset 14, -4
 493:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
ARM GAS  /tmp/ccrYMPR3.s 			page 96


 3283              		.loc 1 493 3 view .LVU1121
 493:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 3284              		.loc 1 493 18 is_stmt 0 view .LVU1122
 3285 0002 0F48     		ldr	r0, .L300
 3286 0004 0F4B     		ldr	r3, .L300+4
 3287 0006 0360     		str	r3, [r0]
 494:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 3288              		.loc 1 494 3 is_stmt 1 view .LVU1123
 494:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 3289              		.loc 1 494 19 is_stmt 0 view .LVU1124
 3290 0008 4FF48273 		mov	r3, #260
 3291 000c 4360     		str	r3, [r0, #4]
 495:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 3292              		.loc 1 495 3 is_stmt 1 view .LVU1125
 495:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 3293              		.loc 1 495 24 is_stmt 0 view .LVU1126
 3294 000e 0023     		movs	r3, #0
 3295 0010 8360     		str	r3, [r0, #8]
 496:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 3296              		.loc 1 496 3 is_stmt 1 view .LVU1127
 496:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 3297              		.loc 1 496 23 is_stmt 0 view .LVU1128
 3298 0012 4FF4E062 		mov	r2, #1792
 3299 0016 C260     		str	r2, [r0, #12]
 497:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 3300              		.loc 1 497 3 is_stmt 1 view .LVU1129
 497:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 3301              		.loc 1 497 26 is_stmt 0 view .LVU1130
 3302 0018 0361     		str	r3, [r0, #16]
 498:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 3303              		.loc 1 498 3 is_stmt 1 view .LVU1131
 498:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 3304              		.loc 1 498 23 is_stmt 0 view .LVU1132
 3305 001a 4361     		str	r3, [r0, #20]
 499:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 3306              		.loc 1 499 3 is_stmt 1 view .LVU1133
 499:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 3307              		.loc 1 499 18 is_stmt 0 view .LVU1134
 3308 001c 4FF40072 		mov	r2, #512
 3309 0020 8261     		str	r2, [r0, #24]
 500:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 3310              		.loc 1 500 3 is_stmt 1 view .LVU1135
 500:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_LSB;
 3311              		.loc 1 500 32 is_stmt 0 view .LVU1136
 3312 0022 C361     		str	r3, [r0, #28]
 501:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 3313              		.loc 1 501 3 is_stmt 1 view .LVU1137
 501:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 3314              		.loc 1 501 23 is_stmt 0 view .LVU1138
 3315 0024 8022     		movs	r2, #128
 3316 0026 0262     		str	r2, [r0, #32]
 502:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3317              		.loc 1 502 3 is_stmt 1 view .LVU1139
 502:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 3318              		.loc 1 502 21 is_stmt 0 view .LVU1140
 3319 0028 4362     		str	r3, [r0, #36]
 503:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
ARM GAS  /tmp/ccrYMPR3.s 			page 97


 3320              		.loc 1 503 3 is_stmt 1 view .LVU1141
 503:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 3321              		.loc 1 503 29 is_stmt 0 view .LVU1142
 3322 002a 8362     		str	r3, [r0, #40]
 504:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3323              		.loc 1 504 3 is_stmt 1 view .LVU1143
 504:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 3324              		.loc 1 504 28 is_stmt 0 view .LVU1144
 3325 002c 0722     		movs	r2, #7
 3326 002e C262     		str	r2, [r0, #44]
 505:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3327              		.loc 1 505 3 is_stmt 1 view .LVU1145
 505:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 3328              		.loc 1 505 24 is_stmt 0 view .LVU1146
 3329 0030 0363     		str	r3, [r0, #48]
 506:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 3330              		.loc 1 506 3 is_stmt 1 view .LVU1147
 506:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 3331              		.loc 1 506 23 is_stmt 0 view .LVU1148
 3332 0032 4363     		str	r3, [r0, #52]
 507:Core/Src/main.c ****   {
 3333              		.loc 1 507 3 is_stmt 1 view .LVU1149
 507:Core/Src/main.c ****   {
 3334              		.loc 1 507 7 is_stmt 0 view .LVU1150
 3335 0034 FFF7FEFF 		bl	HAL_SPI_Init
 3336              	.LVL361:
 507:Core/Src/main.c ****   {
 3337              		.loc 1 507 6 view .LVU1151
 3338 0038 00B9     		cbnz	r0, .L299
 515:Core/Src/main.c **** 
 3339              		.loc 1 515 1 view .LVU1152
 3340 003a 08BD     		pop	{r3, pc}
 3341              	.L299:
 509:Core/Src/main.c ****   }
 3342              		.loc 1 509 5 is_stmt 1 view .LVU1153
 3343 003c FFF7FEFF 		bl	Error_Handler
 3344              	.LVL362:
 3345              	.L301:
 3346              		.align	2
 3347              	.L300:
 3348 0040 00000000 		.word	.LANCHOR8
 3349 0044 00380040 		.word	1073756160
 3350              		.cfi_endproc
 3351              	.LFE210:
 3353              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 3354              		.align	1
 3355              		.syntax unified
 3356              		.thumb
 3357              		.thumb_func
 3358              		.fpu fpv4-sp-d16
 3360              	MX_USART2_UART_Init:
 3361              	.LFB211:
 523:Core/Src/main.c **** 
 3362              		.loc 1 523 1 view -0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccrYMPR3.s 			page 98


 3366 0000 08B5     		push	{r3, lr}
 3367              	.LCFI23:
 3368              		.cfi_def_cfa_offset 8
 3369              		.cfi_offset 3, -8
 3370              		.cfi_offset 14, -4
 532:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 3371              		.loc 1 532 3 view .LVU1155
 532:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 3372              		.loc 1 532 19 is_stmt 0 view .LVU1156
 3373 0002 0B48     		ldr	r0, .L306
 3374 0004 0B4B     		ldr	r3, .L306+4
 3375 0006 0360     		str	r3, [r0]
 533:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 3376              		.loc 1 533 3 is_stmt 1 view .LVU1157
 533:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 3377              		.loc 1 533 24 is_stmt 0 view .LVU1158
 3378 0008 4FF4E133 		mov	r3, #115200
 3379 000c 4360     		str	r3, [r0, #4]
 534:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 3380              		.loc 1 534 3 is_stmt 1 view .LVU1159
 534:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 3381              		.loc 1 534 26 is_stmt 0 view .LVU1160
 3382 000e 0023     		movs	r3, #0
 3383 0010 8360     		str	r3, [r0, #8]
 535:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 3384              		.loc 1 535 3 is_stmt 1 view .LVU1161
 535:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 3385              		.loc 1 535 24 is_stmt 0 view .LVU1162
 3386 0012 C360     		str	r3, [r0, #12]
 536:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 3387              		.loc 1 536 3 is_stmt 1 view .LVU1163
 536:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 3388              		.loc 1 536 22 is_stmt 0 view .LVU1164
 3389 0014 0361     		str	r3, [r0, #16]
 537:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3390              		.loc 1 537 3 is_stmt 1 view .LVU1165
 537:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3391              		.loc 1 537 20 is_stmt 0 view .LVU1166
 3392 0016 0C22     		movs	r2, #12
 3393 0018 4261     		str	r2, [r0, #20]
 538:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 3394              		.loc 1 538 3 is_stmt 1 view .LVU1167
 538:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 3395              		.loc 1 538 25 is_stmt 0 view .LVU1168
 3396 001a 8361     		str	r3, [r0, #24]
 539:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3397              		.loc 1 539 3 is_stmt 1 view .LVU1169
 539:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3398              		.loc 1 539 28 is_stmt 0 view .LVU1170
 3399 001c C361     		str	r3, [r0, #28]
 540:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3400              		.loc 1 540 3 is_stmt 1 view .LVU1171
 540:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3401              		.loc 1 540 30 is_stmt 0 view .LVU1172
 3402 001e 0362     		str	r3, [r0, #32]
 541:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 3403              		.loc 1 541 3 is_stmt 1 view .LVU1173
ARM GAS  /tmp/ccrYMPR3.s 			page 99


 541:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 3404              		.loc 1 541 38 is_stmt 0 view .LVU1174
 3405 0020 4362     		str	r3, [r0, #36]
 542:Core/Src/main.c ****   {
 3406              		.loc 1 542 3 is_stmt 1 view .LVU1175
 542:Core/Src/main.c ****   {
 3407              		.loc 1 542 7 is_stmt 0 view .LVU1176
 3408 0022 FFF7FEFF 		bl	HAL_UART_Init
 3409              	.LVL363:
 542:Core/Src/main.c ****   {
 3410              		.loc 1 542 6 view .LVU1177
 3411 0026 00B9     		cbnz	r0, .L305
 550:Core/Src/main.c **** 
 3412              		.loc 1 550 1 view .LVU1178
 3413 0028 08BD     		pop	{r3, pc}
 3414              	.L305:
 544:Core/Src/main.c ****   }
 3415              		.loc 1 544 5 is_stmt 1 view .LVU1179
 3416 002a FFF7FEFF 		bl	Error_Handler
 3417              	.LVL364:
 3418              	.L307:
 3419 002e 00BF     		.align	2
 3420              	.L306:
 3421 0030 00000000 		.word	.LANCHOR9
 3422 0034 00440040 		.word	1073759232
 3423              		.cfi_endproc
 3424              	.LFE211:
 3426              		.section	.text.main,"ax",%progbits
 3427              		.align	1
 3428              		.global	main
 3429              		.syntax unified
 3430              		.thumb
 3431              		.thumb_func
 3432              		.fpu fpv4-sp-d16
 3434              	main:
 3435              	.LFB206:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3436              		.loc 1 131 1 view -0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3441              	.LCFI24:
 3442              		.cfi_def_cfa_offset 32
 3443              		.cfi_offset 4, -32
 3444              		.cfi_offset 5, -28
 3445              		.cfi_offset 6, -24
 3446              		.cfi_offset 7, -20
 3447              		.cfi_offset 8, -16
 3448              		.cfi_offset 9, -12
 3449              		.cfi_offset 10, -8
 3450              		.cfi_offset 14, -4
 3451 0004 82B0     		sub	sp, sp, #8
 3452              	.LCFI25:
 3453              		.cfi_def_cfa_offset 40
 139:Core/Src/main.c **** 
 3454              		.loc 1 139 3 view .LVU1181
ARM GAS  /tmp/ccrYMPR3.s 			page 100


 3455 0006 FFF7FEFF 		bl	HAL_Init
 3456              	.LVL365:
 150:Core/Src/main.c ****   //tusb_init();
 3457              		.loc 1 150 3 view .LVU1182
 3458 000a FFF7FEFF 		bl	board_init
 3459              	.LVL366:
 155:Core/Src/main.c ****   MX_DMA_Init();
 3460              		.loc 1 155 3 view .LVU1183
 3461 000e FFF7FEFF 		bl	MX_GPIO_Init
 3462              	.LVL367:
 156:Core/Src/main.c ****   MX_SPI1_Init();
 3463              		.loc 1 156 3 view .LVU1184
 3464 0012 FFF7FEFF 		bl	MX_DMA_Init
 3465              	.LVL368:
 157:Core/Src/main.c ****   MX_I2C1_Init();
 3466              		.loc 1 157 3 view .LVU1185
 3467 0016 FFF7FEFF 		bl	MX_SPI1_Init
 3468              	.LVL369:
 158:Core/Src/main.c ****   MX_SPI2_Init();
 3469              		.loc 1 158 3 view .LVU1186
 3470 001a FFF7FEFF 		bl	MX_I2C1_Init
 3471              	.LVL370:
 159:Core/Src/main.c ****   MX_USART2_UART_Init();
 3472              		.loc 1 159 3 view .LVU1187
 3473 001e FFF7FEFF 		bl	MX_SPI2_Init
 3474              	.LVL371:
 160:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3475              		.loc 1 160 3 view .LVU1188
 3476 0022 FFF7FEFF 		bl	MX_USART2_UART_Init
 3477              	.LVL372:
 165:Core/Src/main.c ****   //tud_init(BOARD_TUD_RHPORT);
 3478              		.loc 1 165 3 view .LVU1189
 3479 0026 FFF7FEFF 		bl	tusb_init
 3480              	.LVL373:
 170:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3481              		.loc 1 170 3 view .LVU1190
 170:Core/Src/main.c ****   // CHANNEL SELECT (JUST CHECK CH0 FOR NOW)
 3482              		.loc 1 170 20 is_stmt 0 view .LVU1191
 3483 002a 714B     		ldr	r3, .L325
 3484 002c 0124     		movs	r4, #1
 3485 002e 1C70     		strb	r4, [r3]
 172:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3486              		.loc 1 172 3 is_stmt 1 view .LVU1192
 172:Core/Src/main.c ****   // NEED TO SEND THIRD BYTE (FULL DUPLEX), DONT CARE
 3487              		.loc 1 172 20 is_stmt 0 view .LVU1193
 3488 0030 8022     		movs	r2, #128
 3489 0032 5A70     		strb	r2, [r3, #1]
 174:Core/Src/main.c **** 
 3490              		.loc 1 174 3 is_stmt 1 view .LVU1194
 174:Core/Src/main.c **** 
 3491              		.loc 1 174 20 is_stmt 0 view .LVU1195
 3492 0034 0027     		movs	r7, #0
 3493 0036 9F70     		strb	r7, [r3, #2]
 177:Core/Src/main.c **** 
 3494              		.loc 1 177 3 is_stmt 1 view .LVU1196
 3495              	.LVL374:
 180:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
ARM GAS  /tmp/ccrYMPR3.s 			page 101


 3496              		.loc 1 180 3 view .LVU1197
 180:Core/Src/main.c ****   HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,1,1000); //Sending in Blocking mode
 3497              		.loc 1 180 20 is_stmt 0 view .LVU1198
 3498 0038 6E4A     		ldr	r2, .L325+4
 3499 003a 1023     		movs	r3, #16
 3500 003c 1370     		strb	r3, [r2]
 181:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_12, GPIO_PIN_SET);
 3501              		.loc 1 181 3 is_stmt 1 view .LVU1199
 3502 003e 4FF47A73 		mov	r3, #1000
 3503 0042 0093     		str	r3, [sp]
 3504 0044 2346     		mov	r3, r4
 3505 0046 5821     		movs	r1, #88
 3506 0048 6B48     		ldr	r0, .L325+8
 3507 004a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3508              	.LVL375:
 182:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 3509              		.loc 1 182 3 view .LVU1200
 3510 004e 6B4D     		ldr	r5, .L325+12
 3511 0050 2246     		mov	r2, r4
 3512 0052 4FF48051 		mov	r1, #4096
 3513 0056 2846     		mov	r0, r5
 3514 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3515              	.LVL376:
 183:Core/Src/main.c **** 
 3516              		.loc 1 183 3 view .LVU1201
 3517 005c 2246     		mov	r2, r4
 3518 005e 4FF40061 		mov	r1, #2048
 3519 0062 2846     		mov	r0, r5
 3520 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3521              	.LVL377:
 185:Core/Src/main.c ****   bool flag1 = false;
 3522              		.loc 1 185 3 view .LVU1202
 186:Core/Src/main.c ****   bool flag2 = false;
 3523              		.loc 1 186 3 view .LVU1203
 187:Core/Src/main.c **** 
 3524              		.loc 1 187 3 view .LVU1204
 190:Core/Src/main.c ****   //volatile int PA_1_VAL = 0;
 3525              		.loc 1 190 3 view .LVU1205
 216:Core/Src/main.c **** 
 3526              		.loc 1 216 3 view .LVU1206
 187:Core/Src/main.c **** 
 3527              		.loc 1 187 8 is_stmt 0 view .LVU1207
 3528 0068 B846     		mov	r8, r7
 186:Core/Src/main.c ****   bool flag2 = false;
 3529              		.loc 1 186 8 view .LVU1208
 3530 006a B946     		mov	r9, r7
 185:Core/Src/main.c ****   bool flag1 = false;
 3531              		.loc 1 185 7 view .LVU1209
 3532 006c 0226     		movs	r6, #2
 3533 006e 76E0     		b	.L309
 3534              	.LVL378:
 3535              	.L320:
 254:Core/Src/main.c ****     }
 3536              		.loc 1 254 13 view .LVU1210
 3537 0070 4FF00109 		mov	r9, #1
 3538              	.LVL379:
 253:Core/Src/main.c ****       flag1 = true;
ARM GAS  /tmp/ccrYMPR3.s 			page 102


 3539              		.loc 1 253 37 view .LVU1211
 3540 0074 0426     		movs	r6, #4
 3541              	.LVL380:
 253:Core/Src/main.c ****       flag1 = true;
 3542              		.loc 1 253 37 view .LVU1212
 3543 0076 86E0     		b	.L310
 3544              	.LVL381:
 3545              	.L322:
 262:Core/Src/main.c ****     }
 3546              		.loc 1 262 13 view .LVU1213
 3547 0078 4FF00108 		mov	r8, #1
 3548              	.LVL382:
 261:Core/Src/main.c ****       flag2 = true;
 3549              		.loc 1 261 37 view .LVU1214
 3550 007c 0026     		movs	r6, #0
 3551              	.LVL383:
 261:Core/Src/main.c ****       flag2 = true;
 3552              		.loc 1 261 37 view .LVU1215
 3553 007e 98E0     		b	.L312
 3554              	.LVL384:
 3555              	.L315:
 3556              	.LBB67:
 269:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3557              		.loc 1 269 5 is_stmt 1 discriminator 3 view .LVU1216
 269:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3558              		.loc 1 269 39 is_stmt 0 discriminator 3 view .LVU1217
 3559 0080 2301     		lsls	r3, r4, #4
 269:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3560              		.loc 1 269 35 discriminator 3 view .LVU1218
 3561 0082 63F07F03 		orn	r3, r3, #127
 269:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3562              		.loc 1 269 22 discriminator 3 view .LVU1219
 3563 0086 DFF868A1 		ldr	r10, .L325
 3564 008a 8AF80130 		strb	r3, [r10, #1]
 271:Core/Src/main.c ****     // one full duplex interaction
 3565              		.loc 1 271 5 is_stmt 1 discriminator 3 view .LVU1220
 3566 008e 5B4D     		ldr	r5, .L325+12
 3567 0090 0022     		movs	r2, #0
 3568 0092 4FF40061 		mov	r1, #2048
 3569 0096 2846     		mov	r0, r5
 3570 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3571              	.LVL385:
 273:Core/Src/main.c ****     // now need to parse data
 3572              		.loc 1 273 5 discriminator 3 view .LVU1221
 3573 009c 584F     		ldr	r7, .L325+16
 3574 009e 4FF47A73 		mov	r3, #1000
 3575 00a2 0093     		str	r3, [sp]
 3576 00a4 0323     		movs	r3, #3
 3577 00a6 3A46     		mov	r2, r7
 3578 00a8 5146     		mov	r1, r10
 3579 00aa 5648     		ldr	r0, .L325+20
 3580 00ac FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3581              	.LVL386:
 275:Core/Src/main.c ****     // default CS to be high
 3582              		.loc 1 275 5 discriminator 3 view .LVU1222
 275:Core/Src/main.c ****     // default CS to be high
 3583              		.loc 1 275 35 is_stmt 0 discriminator 3 view .LVU1223
ARM GAS  /tmp/ccrYMPR3.s 			page 103


 3584 00b0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 275:Core/Src/main.c ****     // default CS to be high
 3585              		.loc 1 275 44 discriminator 3 view .LVU1224
 3586 00b2 1B02     		lsls	r3, r3, #8
 3587 00b4 03F44073 		and	r3, r3, #768
 275:Core/Src/main.c ****     // default CS to be high
 3588              		.loc 1 275 62 discriminator 3 view .LVU1225
 3589 00b8 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 275:Core/Src/main.c ****     // default CS to be high
 3590              		.loc 1 275 48 discriminator 3 view .LVU1226
 3591 00ba 1343     		orrs	r3, r3, r2
 275:Core/Src/main.c ****     // default CS to be high
 3592              		.loc 1 275 17 discriminator 3 view .LVU1227
 3593 00bc 524A     		ldr	r2, .L325+24
 3594 00be 42F82430 		str	r3, [r2, r4, lsl #2]
 277:Core/Src/main.c ****     //if(i == 7) i = 0;
 3595              		.loc 1 277 5 is_stmt 1 discriminator 3 view .LVU1228
 3596 00c2 0122     		movs	r2, #1
 3597 00c4 4FF40061 		mov	r1, #2048
 3598 00c8 2846     		mov	r0, r5
 3599 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 3600              	.LVL387:
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3601              		.loc 1 268 28 discriminator 3 view .LVU1229
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3602              		.loc 1 268 29 is_stmt 0 discriminator 3 view .LVU1230
 3603 00ce 0134     		adds	r4, r4, #1
 3604              	.LVL388:
 3605              	.L314:
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3606              		.loc 1 268 21 is_stmt 1 discriminator 1 view .LVU1231
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3607              		.loc 1 268 5 is_stmt 0 discriminator 1 view .LVU1232
 3608 00d0 072C     		cmp	r4, #7
 3609 00d2 D5DD     		ble	.L315
 3610              	.LBE67:
 3611              	.LBB68:
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3612              		.loc 1 282 14 view .LVU1233
 3613 00d4 0024     		movs	r4, #0
 3614              	.LVL389:
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3615              		.loc 1 282 14 view .LVU1234
 3616 00d6 27E0     		b	.L316
 3617              	.LVL390:
 3618              	.L317:
 283:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3619              		.loc 1 283 5 is_stmt 1 discriminator 3 view .LVU1235
 283:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3620              		.loc 1 283 39 is_stmt 0 discriminator 3 view .LVU1236
 3621 00d8 2301     		lsls	r3, r4, #4
 283:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3622              		.loc 1 283 35 discriminator 3 view .LVU1237
 3623 00da 63F07F03 		orn	r3, r3, #127
 283:Core/Src/main.c ****     // pull CS low for selecting device (only using one ADC right now)
 3624              		.loc 1 283 22 discriminator 3 view .LVU1238
 3625 00de DFF810A1 		ldr	r10, .L325
ARM GAS  /tmp/ccrYMPR3.s 			page 104


 3626 00e2 8AF80130 		strb	r3, [r10, #1]
 285:Core/Src/main.c ****     // one full duplex interaction
 3627              		.loc 1 285 5 is_stmt 1 discriminator 3 view .LVU1239
 3628 00e6 454D     		ldr	r5, .L325+12
 3629 00e8 0022     		movs	r2, #0
 3630 00ea 4FF48051 		mov	r1, #4096
 3631 00ee 2846     		mov	r0, r5
 3632 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3633              	.LVL391:
 287:Core/Src/main.c ****     // now need to parse data
 3634              		.loc 1 287 5 discriminator 3 view .LVU1240
 3635 00f4 424F     		ldr	r7, .L325+16
 3636 00f6 4FF47A73 		mov	r3, #1000
 3637 00fa 0093     		str	r3, [sp]
 3638 00fc 0323     		movs	r3, #3
 3639 00fe 3A46     		mov	r2, r7
 3640 0100 5146     		mov	r1, r10
 3641 0102 4048     		ldr	r0, .L325+20
 3642 0104 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 3643              	.LVL392:
 289:Core/Src/main.c ****     // default CS to be high
 3644              		.loc 1 289 5 discriminator 3 view .LVU1241
 289:Core/Src/main.c ****     // default CS to be high
 3645              		.loc 1 289 35 is_stmt 0 discriminator 3 view .LVU1242
 3646 0108 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 289:Core/Src/main.c ****     // default CS to be high
 3647              		.loc 1 289 44 discriminator 3 view .LVU1243
 3648 010a 1B02     		lsls	r3, r3, #8
 3649 010c 03F44073 		and	r3, r3, #768
 289:Core/Src/main.c ****     // default CS to be high
 3650              		.loc 1 289 62 discriminator 3 view .LVU1244
 3651 0110 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 289:Core/Src/main.c ****     // default CS to be high
 3652              		.loc 1 289 48 discriminator 3 view .LVU1245
 3653 0112 1343     		orrs	r3, r3, r2
 289:Core/Src/main.c ****     // default CS to be high
 3654              		.loc 1 289 17 discriminator 3 view .LVU1246
 3655 0114 3D4A     		ldr	r2, .L325+28
 3656 0116 42F82430 		str	r3, [r2, r4, lsl #2]
 291:Core/Src/main.c ****     }
 3657              		.loc 1 291 5 is_stmt 1 discriminator 3 view .LVU1247
 3658 011a 0122     		movs	r2, #1
 3659 011c 4FF48051 		mov	r1, #4096
 3660 0120 2846     		mov	r0, r5
 3661 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3662              	.LVL393:
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3663              		.loc 1 282 28 discriminator 3 view .LVU1248
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3664              		.loc 1 282 29 is_stmt 0 discriminator 3 view .LVU1249
 3665 0126 0134     		adds	r4, r4, #1
 3666              	.LVL394:
 3667              	.L316:
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3668              		.loc 1 282 21 is_stmt 1 discriminator 1 view .LVU1250
 282:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3669              		.loc 1 282 5 is_stmt 0 discriminator 1 view .LVU1251
ARM GAS  /tmp/ccrYMPR3.s 			page 105


 3670 0128 072C     		cmp	r4, #7
 3671 012a D5DD     		ble	.L317
 3672              	.LBE68:
 295:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3673              		.loc 1 295 5 is_stmt 1 view .LVU1252
 295:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3674              		.loc 1 295 10 is_stmt 0 view .LVU1253
 3675 012c 4FF48071 		mov	r1, #256
 3676 0130 3248     		ldr	r0, .L325+12
 3677 0132 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3678              	.LVL395:
 295:Core/Src/main.c ****     /* Read through all DAC channels in output buffer, set output on ADC accordingly */
 3679              		.loc 1 295 8 view .LVU1254
 3680 0136 0028     		cmp	r0, #0
 3681 0138 45D1     		bne	.L318
 297:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3682              		.loc 1 297 7 is_stmt 1 view .LVU1255
 297:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3683              		.loc 1 297 24 is_stmt 0 view .LVU1256
 3684 013a 2E4C     		ldr	r4, .L325+4
 3685              	.LVL396:
 297:Core/Src/main.c ****       I2C_TX_Buffer[1] = HALL_TO_DAC(ADC1_VAL,ADC2_VAL,octave_num); // data byte, corresponds to ea
 3686              		.loc 1 297 24 view .LVU1257
 3687 013c 0023     		movs	r3, #0
 3688 013e 2370     		strb	r3, [r4]
 298:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3689              		.loc 1 298 7 is_stmt 1 view .LVU1258
 298:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3690              		.loc 1 298 26 is_stmt 0 view .LVU1259
 3691 0140 3246     		mov	r2, r6
 3692 0142 3249     		ldr	r1, .L325+28
 3693 0144 3048     		ldr	r0, .L325+24
 3694 0146 FFF7FEFF 		bl	HALL_TO_DAC
 3695              	.LVL397:
 298:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3696              		.loc 1 298 24 view .LVU1260
 3697 014a 6070     		strb	r0, [r4, #1]
 299:Core/Src/main.c ****     }
 3698              		.loc 1 299 7 is_stmt 1 view .LVU1261
 3699 014c 4FF47A73 		mov	r3, #1000
 3700 0150 0093     		str	r3, [sp]
 3701 0152 0223     		movs	r3, #2
 3702 0154 2246     		mov	r2, r4
 3703 0156 5821     		movs	r1, #88
 3704 0158 2748     		ldr	r0, .L325+8
 3705 015a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3706              	.LVL398:
 3707              	.L309:
 222:Core/Src/main.c ****   {
 3708              		.loc 1 222 3 view .LVU1262
 249:Core/Src/main.c **** 
 3709              		.loc 1 249 5 view .LVU1263
 3710              	.LBB69:
 3711              	.LBI69:
 3712              		.file 4 "tinyusb/src/device/usbd.h"
   1:tinyusb/src/device/usbd.h **** /*
   2:tinyusb/src/device/usbd.h ****  * The MIT License (MIT)
ARM GAS  /tmp/ccrYMPR3.s 			page 106


   3:tinyusb/src/device/usbd.h ****  *
   4:tinyusb/src/device/usbd.h ****  * Copyright (c) 2019 Ha Thach (tinyusb.org)
   5:tinyusb/src/device/usbd.h ****  *
   6:tinyusb/src/device/usbd.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:tinyusb/src/device/usbd.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:tinyusb/src/device/usbd.h ****  * in the Software without restriction, including without limitation the rights
   9:tinyusb/src/device/usbd.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:tinyusb/src/device/usbd.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:tinyusb/src/device/usbd.h ****  * furnished to do so, subject to the following conditions:
  12:tinyusb/src/device/usbd.h ****  *
  13:tinyusb/src/device/usbd.h ****  * The above copyright notice and this permission notice shall be included in
  14:tinyusb/src/device/usbd.h ****  * all copies or substantial portions of the Software.
  15:tinyusb/src/device/usbd.h ****  *
  16:tinyusb/src/device/usbd.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tinyusb/src/device/usbd.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:tinyusb/src/device/usbd.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:tinyusb/src/device/usbd.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:tinyusb/src/device/usbd.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:tinyusb/src/device/usbd.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:tinyusb/src/device/usbd.h ****  * THE SOFTWARE.
  23:tinyusb/src/device/usbd.h ****  *
  24:tinyusb/src/device/usbd.h ****  * This file is part of the TinyUSB stack.
  25:tinyusb/src/device/usbd.h ****  */
  26:tinyusb/src/device/usbd.h **** 
  27:tinyusb/src/device/usbd.h **** #ifndef _TUSB_USBD_H_
  28:tinyusb/src/device/usbd.h **** #define _TUSB_USBD_H_
  29:tinyusb/src/device/usbd.h **** 
  30:tinyusb/src/device/usbd.h **** #include "common/tusb_common.h"
  31:tinyusb/src/device/usbd.h **** 
  32:tinyusb/src/device/usbd.h **** #ifdef __cplusplus
  33:tinyusb/src/device/usbd.h **** extern "C" {
  34:tinyusb/src/device/usbd.h **** #endif
  35:tinyusb/src/device/usbd.h **** 
  36:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  37:tinyusb/src/device/usbd.h **** // Application API
  38:tinyusb/src/device/usbd.h **** //--------------------------------------------------------------------+
  39:tinyusb/src/device/usbd.h **** 
  40:tinyusb/src/device/usbd.h **** // Init device stack
  41:tinyusb/src/device/usbd.h **** bool tud_init (uint8_t rhport);
  42:tinyusb/src/device/usbd.h **** 
  43:tinyusb/src/device/usbd.h **** // Check if device stack is already initialized
  44:tinyusb/src/device/usbd.h **** bool tud_inited(void);
  45:tinyusb/src/device/usbd.h **** 
  46:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop, extended version of tud_task()
  47:tinyusb/src/device/usbd.h **** // - timeout_ms: millisecond to wait, zero = no wait, 0xFFFFFFFF = wait forever
  48:tinyusb/src/device/usbd.h **** // - in_isr: if function is called in ISR
  49:tinyusb/src/device/usbd.h **** void tud_task_ext(uint32_t timeout_ms, bool in_isr);
  50:tinyusb/src/device/usbd.h **** 
  51:tinyusb/src/device/usbd.h **** // Task function should be called in main/rtos loop
  52:tinyusb/src/device/usbd.h **** TU_ATTR_ALWAYS_INLINE static inline
  53:tinyusb/src/device/usbd.h **** void tud_task (void) {
 3713              		.loc 4 53 6 view .LVU1264
 3714              	.LBB70:
  54:tinyusb/src/device/usbd.h ****   tud_task_ext(UINT32_MAX, false);
 3715              		.loc 4 54 3 view .LVU1265
 3716 015e 0021     		movs	r1, #0
 3717 0160 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccrYMPR3.s 			page 107


 3718 0164 FFF7FEFF 		bl	tud_task_ext
 3719              	.LVL399:
 3720              	.LBE70:
 3721              	.LBE69:
 251:Core/Src/main.c ****       octave_num = octave_num + 1;
 3722              		.loc 1 251 5 view .LVU1266
 251:Core/Src/main.c ****       octave_num = octave_num + 1;
 3723              		.loc 1 251 10 is_stmt 0 view .LVU1267
 3724 0168 0221     		movs	r1, #2
 3725 016a 4FF09040 		mov	r0, #1207959552
 3726 016e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3727              	.LVL400:
 251:Core/Src/main.c ****       octave_num = octave_num + 1;
 3728              		.loc 1 251 8 view .LVU1268
 3729 0172 40B9     		cbnz	r0, .L310
 251:Core/Src/main.c ****       octave_num = octave_num + 1;
 3730              		.loc 1 251 46 discriminator 1 view .LVU1269
 3731 0174 B9F1000F 		cmp	r9, #0
 3732 0178 05D1     		bne	.L310
 252:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3733              		.loc 1 252 7 is_stmt 1 view .LVU1270
 252:Core/Src/main.c ****       if(octave_num > 4) octave_num = 4;
 3734              		.loc 1 252 18 is_stmt 0 view .LVU1271
 3735 017a 0136     		adds	r6, r6, #1
 3736              	.LVL401:
 253:Core/Src/main.c ****       flag1 = true;
 3737              		.loc 1 253 7 is_stmt 1 view .LVU1272
 253:Core/Src/main.c ****       flag1 = true;
 3738              		.loc 1 253 9 is_stmt 0 view .LVU1273
 3739 017c 042E     		cmp	r6, #4
 3740 017e 3FF777AF 		bgt	.L320
 254:Core/Src/main.c ****     }
 3741              		.loc 1 254 13 view .LVU1274
 3742 0182 4FF00109 		mov	r9, #1
 3743              	.LVL402:
 3744              	.L310:
 257:Core/Src/main.c **** 
 3745              		.loc 1 257 5 is_stmt 1 view .LVU1275
 257:Core/Src/main.c **** 
 3746              		.loc 1 257 9 is_stmt 0 view .LVU1276
 3747 0186 0221     		movs	r1, #2
 3748 0188 4FF09040 		mov	r0, #1207959552
 3749 018c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3750              	.LVL403:
 257:Core/Src/main.c **** 
 3751              		.loc 1 257 8 view .LVU1277
 3752 0190 08B1     		cbz	r0, .L311
 257:Core/Src/main.c **** 
 3753              		.loc 1 257 52 view .LVU1278
 3754 0192 4FF00009 		mov	r9, #0
 3755              	.LVL404:
 3756              	.L311:
 259:Core/Src/main.c ****       octave_num = octave_num - 1;
 3757              		.loc 1 259 5 is_stmt 1 view .LVU1279
 259:Core/Src/main.c ****       octave_num = octave_num - 1;
 3758              		.loc 1 259 10 is_stmt 0 view .LVU1280
 3759 0196 0421     		movs	r1, #4
ARM GAS  /tmp/ccrYMPR3.s 			page 108


 3760 0198 4FF09040 		mov	r0, #1207959552
 3761 019c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3762              	.LVL405:
 259:Core/Src/main.c ****       octave_num = octave_num - 1;
 3763              		.loc 1 259 8 view .LVU1281
 3764 01a0 38B9     		cbnz	r0, .L312
 259:Core/Src/main.c ****       octave_num = octave_num - 1;
 3765              		.loc 1 259 46 discriminator 1 view .LVU1282
 3766 01a2 B8F1000F 		cmp	r8, #0
 3767 01a6 04D1     		bne	.L312
 260:Core/Src/main.c ****       if(octave_num < 0) octave_num = 0;
 3768              		.loc 1 260 7 is_stmt 1 view .LVU1283
 3769              	.LVL406:
 261:Core/Src/main.c ****       flag2 = true;
 3770              		.loc 1 261 7 view .LVU1284
 261:Core/Src/main.c ****       flag2 = true;
 3771              		.loc 1 261 9 is_stmt 0 view .LVU1285
 3772 01a8 013E     		subs	r6, r6, #1
 3773              	.LVL407:
 261:Core/Src/main.c ****       flag2 = true;
 3774              		.loc 1 261 9 view .LVU1286
 3775 01aa 3FF565AF 		bmi	.L322
 262:Core/Src/main.c ****     }
 3776              		.loc 1 262 13 view .LVU1287
 3777 01ae 4FF00108 		mov	r8, #1
 3778              	.LVL408:
 3779              	.L312:
 265:Core/Src/main.c **** 
 3780              		.loc 1 265 5 is_stmt 1 view .LVU1288
 265:Core/Src/main.c **** 
 3781              		.loc 1 265 9 is_stmt 0 view .LVU1289
 3782 01b2 0421     		movs	r1, #4
 3783 01b4 4FF09040 		mov	r0, #1207959552
 3784 01b8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3785              	.LVL409:
 265:Core/Src/main.c **** 
 3786              		.loc 1 265 8 view .LVU1290
 3787 01bc 08B1     		cbz	r0, .L313
 265:Core/Src/main.c **** 
 3788              		.loc 1 265 52 view .LVU1291
 3789 01be 4FF00008 		mov	r8, #0
 3790              	.LVL410:
 3791              	.L313:
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3792              		.loc 1 268 5 is_stmt 1 view .LVU1292
 3793              	.LBB71:
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3794              		.loc 1 268 10 view .LVU1293
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3795              		.loc 1 268 14 is_stmt 0 view .LVU1294
 3796 01c2 0024     		movs	r4, #0
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
 3797              		.loc 1 268 5 view .LVU1295
 3798 01c4 84E7     		b	.L314
 3799              	.LVL411:
 3800              	.L318:
 268:Core/Src/main.c ****     SPI_TX_Buffer[1] = 0b10000000 | (i<<4); // single ended, bits 6-4 specify channel (top 4 bits)
ARM GAS  /tmp/ccrYMPR3.s 			page 109


 3801              		.loc 1 268 5 view .LVU1296
 3802              	.LBE71:
 303:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3803              		.loc 1 303 7 is_stmt 1 view .LVU1297
 303:Core/Src/main.c ****       I2C_TX_Buffer[1] = 0x0; // data byte, corresponds to each channel of one 8 channel DAC (event
 3804              		.loc 1 303 24 is_stmt 0 view .LVU1298
 3805 01c6 0B4A     		ldr	r2, .L325+4
 3806 01c8 0023     		movs	r3, #0
 3807 01ca 1370     		strb	r3, [r2]
 304:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3808              		.loc 1 304 7 is_stmt 1 view .LVU1299
 304:Core/Src/main.c ****       HAL_I2C_Master_Transmit(&hi2c1,slave_address,I2C_TX_Buffer,2,1000); //Sending in Blocking mod
 3809              		.loc 1 304 24 is_stmt 0 view .LVU1300
 3810 01cc 5370     		strb	r3, [r2, #1]
 305:Core/Src/main.c ****       /* CODE BELOW SHOULD BE GOOD, JUST COMMENTED OUT FOR TESTING PURPOSES */
 3811              		.loc 1 305 7 is_stmt 1 view .LVU1301
 3812 01ce 4FF47A73 		mov	r3, #1000
 3813 01d2 0093     		str	r3, [sp]
 3814 01d4 0223     		movs	r3, #2
 3815 01d6 5821     		movs	r1, #88
 3816 01d8 0748     		ldr	r0, .L325+8
 3817 01da FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3818              	.LVL412:
 307:Core/Src/main.c ****       MIDI_TASK(octave_num);
 3819              		.loc 1 307 7 view .LVU1302
 3820 01de 0B49     		ldr	r1, .L325+28
 3821 01e0 0948     		ldr	r0, .L325+24
 3822 01e2 FFF7FEFF 		bl	READ_KEYPRESS
 3823              	.LVL413:
 308:Core/Src/main.c ****     }
 3824              		.loc 1 308 7 view .LVU1303
 3825 01e6 3046     		mov	r0, r6
 3826 01e8 FFF7FEFF 		bl	MIDI_TASK
 3827              	.LVL414:
 3828 01ec B7E7     		b	.L309
 3829              	.L326:
 3830 01ee 00BF     		.align	2
 3831              	.L325:
 3832 01f0 00000000 		.word	.LANCHOR10
 3833 01f4 00000000 		.word	.LANCHOR11
 3834 01f8 00000000 		.word	.LANCHOR7
 3835 01fc 00100048 		.word	1207963648
 3836 0200 00000000 		.word	.LANCHOR12
 3837 0204 00000000 		.word	.LANCHOR6
 3838 0208 00000000 		.word	.LANCHOR13
 3839 020c 00000000 		.word	.LANCHOR14
 3840              		.cfi_endproc
 3841              	.LFE206:
 3843              		.section	.text.SystemClock_Config,"ax",%progbits
 3844              		.align	1
 3845              		.global	SystemClock_Config
 3846              		.syntax unified
 3847              		.thumb
 3848              		.thumb_func
 3849              		.fpu fpv4-sp-d16
 3851              	SystemClock_Config:
 3852              	.LFB207:
ARM GAS  /tmp/ccrYMPR3.s 			page 110


 344:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3853              		.loc 1 344 1 view -0
 3854              		.cfi_startproc
 3855              		@ args = 0, pretend = 0, frame = 88
 3856              		@ frame_needed = 0, uses_anonymous_args = 0
 3857 0000 00B5     		push	{lr}
 3858              	.LCFI26:
 3859              		.cfi_def_cfa_offset 4
 3860              		.cfi_offset 14, -4
 3861 0002 97B0     		sub	sp, sp, #92
 3862              	.LCFI27:
 3863              		.cfi_def_cfa_offset 96
 345:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3864              		.loc 1 345 3 view .LVU1305
 345:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3865              		.loc 1 345 22 is_stmt 0 view .LVU1306
 3866 0004 4422     		movs	r2, #68
 3867 0006 0021     		movs	r1, #0
 3868 0008 05A8     		add	r0, sp, #20
 3869 000a FFF7FEFF 		bl	memset
 3870              	.LVL415:
 346:Core/Src/main.c **** 
 3871              		.loc 1 346 3 is_stmt 1 view .LVU1307
 346:Core/Src/main.c **** 
 3872              		.loc 1 346 22 is_stmt 0 view .LVU1308
 3873 000e 0023     		movs	r3, #0
 3874 0010 0093     		str	r3, [sp]
 3875 0012 0193     		str	r3, [sp, #4]
 3876 0014 0293     		str	r3, [sp, #8]
 3877 0016 0393     		str	r3, [sp, #12]
 3878 0018 0493     		str	r3, [sp, #16]
 350:Core/Src/main.c ****   {
 3879              		.loc 1 350 3 is_stmt 1 view .LVU1309
 350:Core/Src/main.c ****   {
 3880              		.loc 1 350 7 is_stmt 0 view .LVU1310
 3881 001a 4FF40070 		mov	r0, #512
 3882 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 3883              	.LVL416:
 350:Core/Src/main.c ****   {
 3884              		.loc 1 350 6 view .LVU1311
 3885 0022 28BB     		cbnz	r0, .L332
 358:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3886              		.loc 1 358 3 is_stmt 1 view .LVU1312
 358:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 3887              		.loc 1 358 36 is_stmt 0 view .LVU1313
 3888 0024 1023     		movs	r3, #16
 3889 0026 0593     		str	r3, [sp, #20]
 359:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3890              		.loc 1 359 3 is_stmt 1 view .LVU1314
 359:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 3891              		.loc 1 359 30 is_stmt 0 view .LVU1315
 3892 0028 0122     		movs	r2, #1
 3893 002a 0B92     		str	r2, [sp, #44]
 360:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 3894              		.loc 1 360 3 is_stmt 1 view .LVU1316
 360:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 3895              		.loc 1 360 41 is_stmt 0 view .LVU1317
ARM GAS  /tmp/ccrYMPR3.s 			page 111


 3896 002c 0023     		movs	r3, #0
 3897 002e 0C93     		str	r3, [sp, #48]
 361:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3898              		.loc 1 361 3 is_stmt 1 view .LVU1318
 361:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3899              		.loc 1 361 35 is_stmt 0 view .LVU1319
 3900 0030 6023     		movs	r3, #96
 3901 0032 0D93     		str	r3, [sp, #52]
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 3902              		.loc 1 362 3 is_stmt 1 view .LVU1320
 362:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 3903              		.loc 1 362 34 is_stmt 0 view .LVU1321
 3904 0034 0223     		movs	r3, #2
 3905 0036 0F93     		str	r3, [sp, #60]
 363:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 3906              		.loc 1 363 3 is_stmt 1 view .LVU1322
 363:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 3907              		.loc 1 363 35 is_stmt 0 view .LVU1323
 3908 0038 1092     		str	r2, [sp, #64]
 364:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 3909              		.loc 1 364 3 is_stmt 1 view .LVU1324
 364:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 3910              		.loc 1 364 30 is_stmt 0 view .LVU1325
 3911 003a 1192     		str	r2, [sp, #68]
 365:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 3912              		.loc 1 365 3 is_stmt 1 view .LVU1326
 365:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 3913              		.loc 1 365 30 is_stmt 0 view .LVU1327
 3914 003c 2822     		movs	r2, #40
 3915 003e 1292     		str	r2, [sp, #72]
 366:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 3916              		.loc 1 366 3 is_stmt 1 view .LVU1328
 366:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 3917              		.loc 1 366 30 is_stmt 0 view .LVU1329
 3918 0040 0722     		movs	r2, #7
 3919 0042 1392     		str	r2, [sp, #76]
 367:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 3920              		.loc 1 367 3 is_stmt 1 view .LVU1330
 367:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 3921              		.loc 1 367 30 is_stmt 0 view .LVU1331
 3922 0044 1493     		str	r3, [sp, #80]
 368:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3923              		.loc 1 368 3 is_stmt 1 view .LVU1332
 368:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3924              		.loc 1 368 30 is_stmt 0 view .LVU1333
 3925 0046 1593     		str	r3, [sp, #84]
 369:Core/Src/main.c ****   {
 3926              		.loc 1 369 3 is_stmt 1 view .LVU1334
 369:Core/Src/main.c ****   {
 3927              		.loc 1 369 7 is_stmt 0 view .LVU1335
 3928 0048 05A8     		add	r0, sp, #20
 3929 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 3930              	.LVL417:
 369:Core/Src/main.c ****   {
 3931              		.loc 1 369 6 view .LVU1336
 3932 004e 88B9     		cbnz	r0, .L333
 376:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccrYMPR3.s 			page 112


 3933              		.loc 1 376 3 is_stmt 1 view .LVU1337
 376:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3934              		.loc 1 376 31 is_stmt 0 view .LVU1338
 3935 0050 0F23     		movs	r3, #15
 3936 0052 0093     		str	r3, [sp]
 378:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3937              		.loc 1 378 3 is_stmt 1 view .LVU1339
 378:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3938              		.loc 1 378 34 is_stmt 0 view .LVU1340
 3939 0054 0323     		movs	r3, #3
 3940 0056 0193     		str	r3, [sp, #4]
 379:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3941              		.loc 1 379 3 is_stmt 1 view .LVU1341
 379:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 3942              		.loc 1 379 35 is_stmt 0 view .LVU1342
 3943 0058 0023     		movs	r3, #0
 3944 005a 0293     		str	r3, [sp, #8]
 380:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3945              		.loc 1 380 3 is_stmt 1 view .LVU1343
 380:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 3946              		.loc 1 380 36 is_stmt 0 view .LVU1344
 3947 005c 0393     		str	r3, [sp, #12]
 381:Core/Src/main.c **** 
 3948              		.loc 1 381 3 is_stmt 1 view .LVU1345
 381:Core/Src/main.c **** 
 3949              		.loc 1 381 36 is_stmt 0 view .LVU1346
 3950 005e 0493     		str	r3, [sp, #16]
 383:Core/Src/main.c ****   {
 3951              		.loc 1 383 3 is_stmt 1 view .LVU1347
 383:Core/Src/main.c ****   {
 3952              		.loc 1 383 7 is_stmt 0 view .LVU1348
 3953 0060 0421     		movs	r1, #4
 3954 0062 6846     		mov	r0, sp
 3955 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3956              	.LVL418:
 383:Core/Src/main.c ****   {
 3957              		.loc 1 383 6 view .LVU1349
 3958 0068 30B9     		cbnz	r0, .L334
 387:Core/Src/main.c **** 
 3959              		.loc 1 387 1 view .LVU1350
 3960 006a 17B0     		add	sp, sp, #92
 3961              	.LCFI28:
 3962              		.cfi_remember_state
 3963              		.cfi_def_cfa_offset 4
 3964              		@ sp needed
 3965 006c 5DF804FB 		ldr	pc, [sp], #4
 3966              	.L332:
 3967              	.LCFI29:
 3968              		.cfi_restore_state
 352:Core/Src/main.c ****   }
 3969              		.loc 1 352 5 is_stmt 1 view .LVU1351
 3970 0070 FFF7FEFF 		bl	Error_Handler
 3971              	.LVL419:
 3972              	.L333:
 371:Core/Src/main.c ****   }
 3973              		.loc 1 371 5 view .LVU1352
 3974 0074 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccrYMPR3.s 			page 113


 3975              	.LVL420:
 3976              	.L334:
 385:Core/Src/main.c ****   }
 3977              		.loc 1 385 5 view .LVU1353
 3978 0078 FFF7FEFF 		bl	Error_Handler
 3979              	.LVL421:
 3980              		.cfi_endproc
 3981              	.LFE207:
 3983              		.global	SPI_RX_Buffer
 3984              		.global	SPI_TX_Buffer
 3985              		.global	ADC2_VAL_TEST
 3986              		.global	ADC1_VAL_TEST
 3987              		.global	ADC2_VAL
 3988              		.global	ADC1_VAL
 3989              		.global	I2C_TX_Buffer
 3990              		.global	huart2
 3991              		.global	hdma_spi2_rx
 3992              		.global	hdma_spi1_rx
 3993              		.global	hdma_spi1_tx
 3994              		.global	hspi2
 3995              		.global	hspi1
 3996              		.global	hi2c1
 3997              		.global	KEYPRESSED
 3998              		.global	KEYPRESS
 3999              		.global	note_sequence
 4000              		.global	note_pos
 4001              		.section	.bss.ADC1_VAL,"aw",%nobits
 4002              		.align	2
 4003              		.set	.LANCHOR13,. + 0
 4006              	ADC1_VAL:
 4007 0000 00000000 		.space	32
 4007      00000000 
 4007      00000000 
 4007      00000000 
 4007      00000000 
 4008              		.section	.bss.ADC1_VAL_TEST,"aw",%nobits
 4009              		.align	2
 4012              	ADC1_VAL_TEST:
 4013 0000 00000000 		.space	32
 4013      00000000 
 4013      00000000 
 4013      00000000 
 4013      00000000 
 4014              		.section	.bss.ADC2_VAL,"aw",%nobits
 4015              		.align	2
 4016              		.set	.LANCHOR14,. + 0
 4019              	ADC2_VAL:
 4020 0000 00000000 		.space	32
 4020      00000000 
 4020      00000000 
 4020      00000000 
 4020      00000000 
 4021              		.section	.bss.ADC2_VAL_TEST,"aw",%nobits
 4022              		.align	2
 4025              	ADC2_VAL_TEST:
 4026 0000 00000000 		.space	32
 4026      00000000 
ARM GAS  /tmp/ccrYMPR3.s 			page 114


 4026      00000000 
 4026      00000000 
 4026      00000000 
 4027              		.section	.bss.I2C_TX_Buffer,"aw",%nobits
 4028              		.align	2
 4029              		.set	.LANCHOR11,. + 0
 4032              	I2C_TX_Buffer:
 4033 0000 0000     		.space	2
 4034              		.section	.bss.KEYPRESS,"aw",%nobits
 4035              		.align	1
 4036              		.set	.LANCHOR1,. + 0
 4039              	KEYPRESS:
 4040 0000 0000     		.space	2
 4041              		.section	.bss.KEYPRESSED,"aw",%nobits
 4042              		.align	1
 4043              		.set	.LANCHOR2,. + 0
 4046              	KEYPRESSED:
 4047 0000 0000     		.space	2
 4048              		.section	.bss.SPI_RX_Buffer,"aw",%nobits
 4049              		.align	2
 4050              		.set	.LANCHOR12,. + 0
 4053              	SPI_RX_Buffer:
 4054 0000 000000   		.space	3
 4055              		.section	.bss.SPI_TX_Buffer,"aw",%nobits
 4056              		.align	2
 4057              		.set	.LANCHOR10,. + 0
 4060              	SPI_TX_Buffer:
 4061 0000 000000   		.space	3
 4062              		.section	.bss.blink_interval_ms,"aw",%nobits
 4063              		.align	2
 4064              		.set	.LANCHOR0,. + 0
 4067              	blink_interval_ms:
 4068 0000 00000000 		.space	4
 4069              		.section	.bss.hdma_spi1_rx,"aw",%nobits
 4070              		.align	2
 4073              	hdma_spi1_rx:
 4074 0000 00000000 		.space	72
 4074      00000000 
 4074      00000000 
 4074      00000000 
 4074      00000000 
 4075              		.section	.bss.hdma_spi1_tx,"aw",%nobits
 4076              		.align	2
 4079              	hdma_spi1_tx:
 4080 0000 00000000 		.space	72
 4080      00000000 
 4080      00000000 
 4080      00000000 
 4080      00000000 
 4081              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 4082              		.align	2
 4085              	hdma_spi2_rx:
 4086 0000 00000000 		.space	72
 4086      00000000 
 4086      00000000 
 4086      00000000 
 4086      00000000 
ARM GAS  /tmp/ccrYMPR3.s 			page 115


 4087              		.section	.bss.hi2c1,"aw",%nobits
 4088              		.align	2
 4089              		.set	.LANCHOR7,. + 0
 4092              	hi2c1:
 4093 0000 00000000 		.space	84
 4093      00000000 
 4093      00000000 
 4093      00000000 
 4093      00000000 
 4094              		.section	.bss.hspi1,"aw",%nobits
 4095              		.align	2
 4096              		.set	.LANCHOR6,. + 0
 4099              	hspi1:
 4100 0000 00000000 		.space	100
 4100      00000000 
 4100      00000000 
 4100      00000000 
 4100      00000000 
 4101              		.section	.bss.hspi2,"aw",%nobits
 4102              		.align	2
 4103              		.set	.LANCHOR8,. + 0
 4106              	hspi2:
 4107 0000 00000000 		.space	100
 4107      00000000 
 4107      00000000 
 4107      00000000 
 4107      00000000 
 4108              		.section	.bss.huart2,"aw",%nobits
 4109              		.align	2
 4110              		.set	.LANCHOR9,. + 0
 4113              	huart2:
 4114 0000 00000000 		.space	132
 4114      00000000 
 4114      00000000 
 4114      00000000 
 4114      00000000 
 4115              		.section	.bss.note_pos,"aw",%nobits
 4116              		.align	2
 4117              		.set	.LANCHOR4,. + 0
 4120              	note_pos:
 4121 0000 00000000 		.space	4
 4122              		.section	.bss.octave_history.0,"aw",%nobits
 4123              		.align	2
 4124              		.set	.LANCHOR3,. + 0
 4127              	octave_history.0:
 4128 0000 00000000 		.space	4
 4129              		.section	.data.note_sequence,"aw"
 4130              		.align	2
 4131              		.set	.LANCHOR5,. + 0
 4134              	note_sequence:
 4135 0000 4A4E5156 		.ascii	"JNQVZ]bf9=BEINQUX\\ada\\XUQNJEB>9>BEJNQVZ]afa]ZUQNI"
 4135      5A5D6266 
 4135      393D4245 
 4135      494E5155 
 4135      585C6164 
 4136 0031 44403D38 		.ascii	"D@=8=@DJNQVZ]bf"
 4136      3D40444A 
ARM GAS  /tmp/ccrYMPR3.s 			page 116


 4136      4E51565A 
 4136      5D6266
 4137              		.text
 4138              	.Letext0:
 4139              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 4140              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 4141              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 4142              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 4143              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 4144              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 4145              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 4146              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 4147              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 4148              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 4149              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 4150              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 4151              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 4152              		.file 18 "Core/Inc/board_api.h"
 4153              		.file 19 "tinyusb/src/tusb.h"
 4154              		.file 20 "<built-in>"
ARM GAS  /tmp/ccrYMPR3.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrYMPR3.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccrYMPR3.s:622    .text.MX_GPIO_Init:00000000000002c8 $d
     /tmp/ccrYMPR3.s:631    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:637    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccrYMPR3.s:705    .text.MX_DMA_Init:0000000000000050 $d
     /tmp/ccrYMPR3.s:710    .text.tud_mount_cb:0000000000000000 $t
     /tmp/ccrYMPR3.s:717    .text.tud_mount_cb:0000000000000000 tud_mount_cb
     /tmp/ccrYMPR3.s:734    .text.tud_mount_cb:000000000000000c $d
     /tmp/ccrYMPR3.s:739    .text.tud_umount_cb:0000000000000000 $t
     /tmp/ccrYMPR3.s:746    .text.tud_umount_cb:0000000000000000 tud_umount_cb
     /tmp/ccrYMPR3.s:763    .text.tud_umount_cb:0000000000000008 $d
     /tmp/ccrYMPR3.s:768    .text.tud_suspend_cb:0000000000000000 $t
     /tmp/ccrYMPR3.s:775    .text.tud_suspend_cb:0000000000000000 tud_suspend_cb
     /tmp/ccrYMPR3.s:794    .text.tud_suspend_cb:000000000000000c $d
     /tmp/ccrYMPR3.s:799    .text.tud_resume_cb:0000000000000000 $t
     /tmp/ccrYMPR3.s:806    .text.tud_resume_cb:0000000000000000 tud_resume_cb
     /tmp/ccrYMPR3.s:837    .text.tud_resume_cb:0000000000000018 $d
     /tmp/ccrYMPR3.s:842    .text.MIDI_TASK:0000000000000000 $t
     /tmp/ccrYMPR3.s:849    .text.MIDI_TASK:0000000000000000 MIDI_TASK
     /tmp/ccrYMPR3.s:1199   .text.MIDI_TASK:000000000000014c $d
     /tmp/ccrYMPR3.s:1206   .text.midi_task:0000000000000000 $t
     /tmp/ccrYMPR3.s:1213   .text.midi_task:0000000000000000 midi_task
     /tmp/ccrYMPR3.s:1381   .text.midi_task:0000000000000080 $d
     /tmp/ccrYMPR3.s:1387   .text.READ_KEYPRESS:0000000000000000 $t
     /tmp/ccrYMPR3.s:1394   .text.READ_KEYPRESS:0000000000000000 READ_KEYPRESS
     /tmp/ccrYMPR3.s:1486   .text.READ_KEYPRESS:000000000000005c $d
     /tmp/ccrYMPR3.s:1491   .text.HALL_TO_DAC:0000000000000000 $t
     /tmp/ccrYMPR3.s:1498   .text.HALL_TO_DAC:0000000000000000 HALL_TO_DAC
     /tmp/ccrYMPR3.s:2998   .text.DAC_TO_MIDI:0000000000000000 $t
     /tmp/ccrYMPR3.s:3005   .text.DAC_TO_MIDI:0000000000000000 DAC_TO_MIDI
     /tmp/ccrYMPR3.s:3044   .text.Error_Handler:0000000000000000 $t
     /tmp/ccrYMPR3.s:3051   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccrYMPR3.s:3083   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:3089   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccrYMPR3.s:3165   .text.MX_SPI1_Init:0000000000000040 $d
     /tmp/ccrYMPR3.s:3171   .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:3177   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccrYMPR3.s:3259   .text.MX_I2C1_Init:0000000000000048 $d
     /tmp/ccrYMPR3.s:3266   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:3272   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccrYMPR3.s:3348   .text.MX_SPI2_Init:0000000000000040 $d
     /tmp/ccrYMPR3.s:3354   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccrYMPR3.s:3360   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccrYMPR3.s:3421   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccrYMPR3.s:3427   .text.main:0000000000000000 $t
     /tmp/ccrYMPR3.s:3434   .text.main:0000000000000000 main
     /tmp/ccrYMPR3.s:3832   .text.main:00000000000001f0 $d
     /tmp/ccrYMPR3.s:3844   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccrYMPR3.s:3851   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccrYMPR3.s:4053   .bss.SPI_RX_Buffer:0000000000000000 SPI_RX_Buffer
     /tmp/ccrYMPR3.s:4060   .bss.SPI_TX_Buffer:0000000000000000 SPI_TX_Buffer
     /tmp/ccrYMPR3.s:4025   .bss.ADC2_VAL_TEST:0000000000000000 ADC2_VAL_TEST
     /tmp/ccrYMPR3.s:4012   .bss.ADC1_VAL_TEST:0000000000000000 ADC1_VAL_TEST
     /tmp/ccrYMPR3.s:4019   .bss.ADC2_VAL:0000000000000000 ADC2_VAL
ARM GAS  /tmp/ccrYMPR3.s 			page 118


     /tmp/ccrYMPR3.s:4006   .bss.ADC1_VAL:0000000000000000 ADC1_VAL
     /tmp/ccrYMPR3.s:4032   .bss.I2C_TX_Buffer:0000000000000000 I2C_TX_Buffer
     /tmp/ccrYMPR3.s:4113   .bss.huart2:0000000000000000 huart2
     /tmp/ccrYMPR3.s:4085   .bss.hdma_spi2_rx:0000000000000000 hdma_spi2_rx
     /tmp/ccrYMPR3.s:4073   .bss.hdma_spi1_rx:0000000000000000 hdma_spi1_rx
     /tmp/ccrYMPR3.s:4079   .bss.hdma_spi1_tx:0000000000000000 hdma_spi1_tx
     /tmp/ccrYMPR3.s:4106   .bss.hspi2:0000000000000000 hspi2
     /tmp/ccrYMPR3.s:4099   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccrYMPR3.s:4092   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccrYMPR3.s:4046   .bss.KEYPRESSED:0000000000000000 KEYPRESSED
     /tmp/ccrYMPR3.s:4039   .bss.KEYPRESS:0000000000000000 KEYPRESS
     /tmp/ccrYMPR3.s:4134   .data.note_sequence:0000000000000000 note_sequence
     /tmp/ccrYMPR3.s:4120   .bss.note_pos:0000000000000000 note_pos
     /tmp/ccrYMPR3.s:4002   .bss.ADC1_VAL:0000000000000000 $d
     /tmp/ccrYMPR3.s:4009   .bss.ADC1_VAL_TEST:0000000000000000 $d
     /tmp/ccrYMPR3.s:4015   .bss.ADC2_VAL:0000000000000000 $d
     /tmp/ccrYMPR3.s:4022   .bss.ADC2_VAL_TEST:0000000000000000 $d
     /tmp/ccrYMPR3.s:4028   .bss.I2C_TX_Buffer:0000000000000000 $d
     /tmp/ccrYMPR3.s:4035   .bss.KEYPRESS:0000000000000000 $d
     /tmp/ccrYMPR3.s:4042   .bss.KEYPRESSED:0000000000000000 $d
     /tmp/ccrYMPR3.s:4049   .bss.SPI_RX_Buffer:0000000000000000 $d
     /tmp/ccrYMPR3.s:4056   .bss.SPI_TX_Buffer:0000000000000000 $d
     /tmp/ccrYMPR3.s:4063   .bss.blink_interval_ms:0000000000000000 $d
     /tmp/ccrYMPR3.s:4067   .bss.blink_interval_ms:0000000000000000 blink_interval_ms
     /tmp/ccrYMPR3.s:4070   .bss.hdma_spi1_rx:0000000000000000 $d
     /tmp/ccrYMPR3.s:4076   .bss.hdma_spi1_tx:0000000000000000 $d
     /tmp/ccrYMPR3.s:4082   .bss.hdma_spi2_rx:0000000000000000 $d
     /tmp/ccrYMPR3.s:4088   .bss.hi2c1:0000000000000000 $d
     /tmp/ccrYMPR3.s:4095   .bss.hspi1:0000000000000000 $d
     /tmp/ccrYMPR3.s:4102   .bss.hspi2:0000000000000000 $d
     /tmp/ccrYMPR3.s:4109   .bss.huart2:0000000000000000 $d
     /tmp/ccrYMPR3.s:4116   .bss.note_pos:0000000000000000 $d
     /tmp/ccrYMPR3.s:4123   .bss.octave_history.0:0000000000000000 $d
     /tmp/ccrYMPR3.s:4127   .bss.octave_history.0:0000000000000000 octave_history.0
     /tmp/ccrYMPR3.s:4130   .data.note_sequence:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
tud_mounted
tud_midi_n_packet_read
tud_midi_n_available
tud_midi_n_stream_write
HAL_Delay
HAL_SPI_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_Init
board_init
tusb_init
HAL_I2C_Master_Transmit
HAL_SPI_TransmitReceive
HAL_GPIO_ReadPin
ARM GAS  /tmp/ccrYMPR3.s 			page 119


tud_task_ext
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
